{"version":3,"file":"connectycube.min.js","sources":["../src/platform.ts","../src/types/addressbook.ts","../src/types/auth.ts","../src/types/calls.ts","../src/types/chat.ts","../src/types/config.ts","../src/types/data.ts","../src/types/dialogs.ts","../src/types/janus.ts","../src/types/media.ts","../src/types/meetings.ts","../src/types/proxy.ts","../src/types/pushnotifications.ts","../src/config.ts","../src/Utils.ts","../src/AddressBook.ts","../src/Auth.ts","../../../node_modules/@xmpp/events/lib/TimeoutError.js","../../../node_modules/@xmpp/events/lib/delay.js","../../../node_modules/@xmpp/events/lib/timeout.js","../../../node_modules/@xmpp/events/lib/promise.js","../../../node_modules/eventemitter3/index.js","../../../node_modules/@xmpp/events/lib/Deferred.js","../../../node_modules/@xmpp/events/index.js","../../../node_modules/@xmpp/jid/lib/escaping.js","../../../node_modules/@xmpp/jid/lib/JID.js","../../../node_modules/@xmpp/jid/index.js","../../../node_modules/@xmpp/jid/lib/parse.js","../../../node_modules/ltx/lib/escape.js","../../../node_modules/ltx/lib/Element.js","../../../node_modules/@xmpp/xml/lib/XMLError.js","../../../node_modules/@xmpp/xml/lib/Parser.js","../../../node_modules/ltx/lib/parsers/ltx.js","../../../node_modules/@xmpp/xml/index.js","../../../node_modules/ltx/lib/createElement.js","../../../node_modules/@xmpp/error/index.js","../../../node_modules/@xmpp/connection/index.js","../../../node_modules/@xmpp/connection/lib/StreamError.js","../../../node_modules/@xmpp/connection/lib/util.js","../../../node_modules/@xmpp/client-core/index.js","../../../node_modules/@xmpp/client-core/lib/Client.js","../../../node_modules/@xmpp/reconnect/index.js","../../../node_modules/@xmpp/websocket/lib/Connection.js","../../../node_modules/@xmpp/websocket/lib/Socket.js","../../../node_modules/@xmpp/websocket/lib/FramedParser.js","../../../node_modules/@xmpp/websocket/index.js","../../../node_modules/@xmpp/middleware/lib/Context.js","../../../node_modules/@xmpp/middleware/index.js","../../../node_modules/koa-compose/index.js","../../../node_modules/@xmpp/middleware/lib/IncomingContext.js","../../../node_modules/@xmpp/middleware/lib/OutgoingContext.js","../../../node_modules/@xmpp/stream-features/route.js","../../../node_modules/@xmpp/stream-features/index.js","../../../node_modules/@xmpp/iq/caller.js","../../../node_modules/@xmpp/id/index.js","../../../node_modules/@xmpp/middleware/lib/StanzaError.js","../../../node_modules/@xmpp/iq/callee.js","../../../node_modules/@xmpp/xml/lib/parse.js","../../../node_modules/@xmpp/resolve/lib/http.js","../../../node_modules/@xmpp/resolve/lib/alt-connections.js","../../../node_modules/@xmpp/resolve/resolve.js","../../../node_modules/@xmpp/resolve/index.js","../../../node_modules/saslmechanisms/main.js","../../../node_modules/saslmechanisms/lib/factory.js","../../../node_modules/@xmpp/sasl/index.js","../../../node_modules/@xmpp/base64/browser.js","../../../node_modules/@xmpp/sasl/lib/SASLError.js","../../../node_modules/@xmpp/resource-binding/index.js","../../../node_modules/@xmpp/session-establishment/index.js","../../../node_modules/sasl-anonymous/main.js","../../../node_modules/sasl-anonymous/lib/mechanism.js","../../../node_modules/@xmpp/sasl-anonymous/index.js","../../../node_modules/sasl-plain/main.js","../../../node_modules/sasl-plain/lib/mechanism.js","../../../node_modules/@xmpp/sasl-plain/index.js","../src/messaging/xmpp.ts","../src/messaging/Dialogs.ts","../src/messaging/Messages.ts","../src/messaging/ChatUtils.ts","../src/messaging/Helpers.ts","../src/messaging/StreamManagement.ts","../src/messaging/PrivacyList.ts","../src/messaging/MultiUserChat.ts","../src/messaging/Chat.ts","../src/videocalling_conference/janus.js","../src/videocalling_conference/JanusClient.ts","../src/videocalling_conference/ConferenceSession.ts","../src/videocalling_conference/ConferenceClient.ts","../src/Data.ts","../src/Meetings.ts","../src/Proxy.ts","../src/PushNotifications.ts","../src/Storage.ts","../src/Users.ts","../src/videocalling/WebRTCHelpers.ts","../src/videocalling/WebRTCPeerConnection.ts","../src/videocalling/WebRTCSession.ts","../src/videocalling/WebRTCSignalingProcessor.ts","../src/videocalling/WebRTCSignalingProvider.ts","../src/videocalling/WebRTCClient.ts","../src/Whiteboard.ts","../src/LinkPreview.ts","../src/ConnectyCube.ts","../src/index.ts"],"sourcesContent":["declare global {\n  interface Window {\n    adapter: any;\n  }\n}\n\nexport const base64Encode = (str: string): string =>\n  isBrowser\n    ? btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (_, p1) => String.fromCharCode(parseInt(p1, 16))))\n    : Buffer.from(str).toString('base64');\n\nexport const sdkVersion = 'define_sdk_version_replacer';\nexport const isBrowser: boolean = typeof window === 'object' && typeof document === 'object';\nexport const isNodeJS: boolean =\n  typeof process === 'object' && typeof process.versions === 'object' && !!process.versions.node;\nexport const isReactNative: boolean = false;\nexport const isExpo: boolean = false;\n\nlet fetchImpl;\nlet FormDataImpl;\n\nif (isNodeJS) {\n  import('node-fetch').then((nodeFetch) => {\n    fetchImpl = nodeFetch.default || nodeFetch;\n  });\n  import('form-data').then((FormDataNode) => {\n    FormDataImpl = FormDataNode.default || FormDataNode;\n  });\n} else {\n  fetchImpl = fetch;\n  FormDataImpl = FormData;\n}\n\nexport { fetchImpl, FormDataImpl };\n\nexport const navigator = isBrowser ? window.navigator : undefined;\nexport const mediaDevices = isBrowser && navigator ? navigator.mediaDevices : undefined;\nexport const MediaStream = isBrowser ? window.MediaStream : undefined;\nexport const MediaStreamTrack = isBrowser ? window.MediaStreamTrack : undefined;\nexport const RTCIceCandidate = isBrowser ? window.RTCIceCandidate : undefined;\nexport const RTCPeerConnection = isBrowser ? window.RTCPeerConnection : undefined;\nexport const RTCRtpReceiver = isBrowser ? window.RTCRtpReceiver : undefined;\nexport const RTCRtpSender = isBrowser ? window.RTCRtpSender : undefined;\nexport const RTCSessionDescription = isBrowser ? window.RTCSessionDescription : undefined;\n\nexport const isWebRTCAvailable: boolean = isBrowser ? Boolean(mediaDevices && window?.RTCPeerConnection) : false;\n\nexport const adapter = isBrowser ? window.adapter : undefined;\n","import { ForceParams } from './common';\nimport { ConnectyCubeUsers } from './users';\n\nexport enum AddressBookUserDataType {\n  COMPACT = 1,\n  FULL = 0,\n}\n\nexport namespace ConnectyCubeAddressBook {\n  export type Contact = { name: string; phone: string; destroy?: number | string };\n  // Request parameters type\n  export type UploadParams = { udid?: string } & ForceParams;\n  export type GetRegisteredUsersParams = boolean | { udid?: string; compact: AddressBookUserDataType | number }; // 1 - compact user data, 0 - full user data\n  // Response data types\n  export type UploadResponse = {\n    deleted: number;\n    rejected: Record<string | number, string[]>;\n    created: number;\n    updated: number;\n  };\n  export type GetRegisteredUsersResponse = {\n    items: Partial<ConnectyCubeUsers.User> & { address_book_name: string }[];\n  };\n}\n","import { DateOrTimestamp } from './common';\nimport { ConnectyCubeUsers } from './users';\n\nexport enum LoginProviderNames {\n  FACEBOOK = 'facebook',\n  TWITTER = 'twitter',\n  FIREBASE_PHONE = 'firebase_phone',\n  FIREBASE_EMAIL = 'firebase_email',\n}\n\nexport namespace ConnectyCubeAuth {\n  export type Session = {\n    id: number;\n    user_id: number;\n    application_id: string | number;\n    token: string;\n    ts: DateOrTimestamp;\n    created_at: DateOrTimestamp;\n    updated_at: DateOrTimestamp;\n    user?: ConnectyCubeUsers.User | null;\n  };\n  export type LoginProviderKeys = { token: string; secret?: string };\n  export type LoginFirebaseKeys = { project_id: string | number; access_token: string };\n  export type LoginByLogin = { login: string; password: string };\n  export type LoginByEmail = { email: string; password: string };\n  export type LoginByGuest = { guest: '1'; full_name: string };\n  // Login by social providers\n  export type LoginByFacebook = {\n    provider: LoginProviderNames.FACEBOOK;\n    keys: LoginProviderKeys;\n  };\n  export type LoginByTwitter = {\n    provider: LoginProviderNames.TWITTER;\n    keys: LoginProviderKeys;\n  };\n  export type LoginByFirebasePhone = {\n    provider: LoginProviderNames.FIREBASE_PHONE;\n    firebase_phone: LoginFirebaseKeys;\n  };\n  export type LoginByFirebaseEmail = {\n    provider: LoginProviderNames.FIREBASE_EMAIL;\n    firebase_email: LoginFirebaseKeys;\n  };\n  // Request parameters type\n  export type LoginParams =\n    | LoginByLogin\n    | LoginByEmail\n    | LoginByGuest\n    | LoginByFacebook\n    | LoginByTwitter\n    | LoginByFirebasePhone\n    | LoginByFirebaseEmail;\n  export type GeneratedSessionParams = {\n    application_id: string | number;\n    auth_key: string;\n    user?: LoginByLogin | LoginByEmail | LoginByGuest;\n    provider?: LoginProviderNames;\n    keys?: LoginProviderKeys;\n    firebase_phone?: LoginFirebaseKeys;\n    firebase_email?: LoginFirebaseKeys;\n  };\n  // Response data type\n  export type LoginRawResponse = { user: ConnectyCubeUsers.User; [key: string]: any };\n  export type GetSessionRawResponse = { session: Session; [key: string]: any };\n}\n","import WebRTCSession from '../videocalling/WebRTCSession';\nimport WebRTCSignalingProvider from '../videocalling/WebRTCSignalingProvider';\n\nexport const CallSignalingModuleIdentifier = 'WebRTCVideoChat';\n\nexport enum CallSignalingType {\n  CALL = 'call',\n  ACCEPT = 'accept',\n  REJECT = 'reject',\n  STOP = 'hangUp',\n  RESTART = 'iceRestart',\n  RESTART_ACCEPT = 'iceRestartAccept',\n  CANDIDATE = 'iceCandidates',\n}\nexport enum CallSessionConnectionState {\n  UNDEFINED = 0,\n  CONNECTING = 1,\n  CONNECTED = 2,\n  FAILED = 3,\n  DISCONNECTED = 4,\n  CLOSED = 5,\n  COMPLETED = 6,\n}\nexport enum CallSessionState {\n  NEW = 1,\n  ACTIVE = 2,\n  STOPPED = 3,\n  REJECTED = 4,\n  CLOSED = 5,\n}\nexport enum CallType {\n  VIDEO = 1,\n  AUDIO = 2,\n}\nexport enum CallEvent {\n  CALL = 'call',\n  ACCEPT = 'accept',\n  REJECT = 'reject',\n  STOP = 'stop',\n  INVALID = 'invalid',\n  NOT_ANSWER = 'not-answer',\n  REMOTE_STREAM = 'remote-stream',\n  CONNECTION_STATE = 'connection-state',\n  CLOSE = 'close',\n  STATS_REPORT = 'stats-report',\n  DEVICES = 'devices',\n}\nexport enum PeerConnectionState {\n  NEW = 1,\n  CONNECTING = 2,\n  CHECKING = 3,\n  CONNECTED = 4,\n  DISCONNECTED = 5,\n  FAILED = 6,\n  CLOSED = 7,\n  COMPLETED = 8,\n}\n\nexport namespace ConnectyCubeCalls {\n  export type UserInfo = {\n    maxBandwidth?: number;\n    bandwidth?: number;\n    [key: string]: any;\n  };\n  export type ExtensionParams = {\n    callType?: CallType;\n    callerID?: number;\n    iceCandidates?: RTCIceCandidateInit[];\n    opponentsIDs?: number[];\n    userInfo?: UserInfo;\n    sessionID?: string;\n    [key: string]: any;\n  };\n  export type Session = WebRTCSession;\n  export type SignalingProvider = WebRTCSignalingProvider;\n  export type SessionParams = {\n    ID: string | null;\n    initiatorID: number;\n    opponentsIDs: number[];\n    callType: CallType;\n    signalingProvider: SignalingProvider;\n    currentUserID: number;\n    maxBandwidth: number;\n  };\n  // Listeners\n  export type OnCallListener = (session: Session, userInfo: UserInfo) => void;\n  export type OnAcceptCallListener = (session: Session, userID: number, userInfo: UserInfo) => void;\n  export type OnRejectCallListener = (session: Session, userID: number, userInfo: UserInfo) => void;\n  export type OnStopCallListener = (session: Session, userID: number, userInfo: UserInfo) => void;\n  export type OnInvalidEventsListener = (session: Session, userID: number, userInfo: UserInfo) => void;\n  export type OnUserNotAnswerListener = (session: Session, userID: number) => void;\n  export type OnRemoteStreamListener = (session: Session, userID: number, stream: MediaStream) => void;\n  export type OnSessionConnectionStateChangedListener = (\n    session: Session,\n    userID: number,\n    connectionState: CallSessionConnectionState\n  ) => void;\n  export type OnSessionCloseListener = (session: Session) => void;\n  export type OnCallStatsReportListener = (session: Session, userID: number, stats: any, error: Error) => void;\n  export type OnDevicesChangeListener = ((this: MediaDevices, ev: Event) => any) | ((ev: Event) => any);\n  export type Listeners =\n    | OnCallListener\n    | OnAcceptCallListener\n    | OnRejectCallListener\n    | OnStopCallListener\n    | OnInvalidEventsListener\n    | OnUserNotAnswerListener\n    | OnRemoteStreamListener\n    | OnSessionConnectionStateChangedListener\n    | OnSessionCloseListener\n    | OnCallStatsReportListener\n    | OnDevicesChangeListener;\n  export type ListenerName =\n    | 'onCallListener'\n    | 'onAcceptCallListener'\n    | 'onRejectCallListener'\n    | 'onStopCallListener'\n    | 'onInvalidEventsListener'\n    | 'onUserNotAnswerListener'\n    | 'onRemoteStreamListener'\n    | 'onSessionConnectionStateChangedListener'\n    | 'onSessionCloseListener'\n    | 'onCallStatsReport'\n    | 'onDevicesChangeListener';\n}\n","import { Element, Node } from '@xmpp/xml';\nimport { ConnectyCubeDialogs } from './dialogs';\nimport { ConnectyCubeUsers } from './users';\nimport Connection from '@xmpp/connection';\n\nexport enum ChatType {\n  CHAT = 'chat',\n  GROUPCHAT = 'groupchat',\n}\nexport enum ChatEvent {\n  STATUS = 'status',\n  ERROR = 'error',\n  DISCONNECTED = 'disconnected',\n  RECONNECTED = 'reconnected',\n  MESSAGE = 'message',\n  SYSTEM_MESSAGE = 'system-message',\n  ERROR_MESSAGE = 'error-message',\n  TYPING_MESSAGE = 'typing-message',\n  UPDATE_MESSAGE = 'update-message',\n  DELETE_MESSAGE = 'delete-message',\n  REACTIONS_MESSAGE = 'reactions-message',\n  DELIVERED_MESSAGE = 'delivered-message',\n  READ_MESSAGE = 'read-message',\n  SENT_MESSAGE = 'sent-message',\n  USER_LAST_ACTIVITY = 'user-last-activity',\n  JOIN = 'join',\n  LEAVE = 'leave',\n  KICK = 'kick',\n}\nexport enum PrivacyListAction {\n  ALLOW = 'allow',\n  DENY = 'deny',\n}\nexport namespace ConnectyCubeChat {\n  export type XmlElement = Element;\n  export type XmlNode = Node;\n  export type StanzaCallback = (stanza: Element) => void;\n  export type StanzasCallbacks = { [stanzaId: string]: StanzaCallback };\n  export type ConnectionParams = { userId: number; password: string };\n  export type ConnectionStatus = keyof Connection.StatusEvents;\n  export type MessageParams = {\n    id?: string;\n    type?: ChatType | string;\n    body?: string | null;\n    extension?: any;\n    markable?: 1;\n  };\n  export type Message = {\n    id: string;\n    dialog_id: string | null;\n    recipient_id: string | number | null;\n    is_forwarded: boolean;\n    type: ChatType | string;\n    body: string | null;\n    extension: any;\n    delay: any;\n    markable?: 1;\n  };\n  export type SystemMessageParams = {\n    id?: string;\n    body?: string | null;\n    extension?: any;\n  };\n  export type SystemMessage = {\n    id: string;\n    body: string;\n    userId: number;\n    extension: any;\n  };\n  export type MessageStatusParams = {\n    messageId: string;\n    dialogId: string;\n    userId: number;\n  };\n  export type EditMessageParams = {\n    to: string | number;\n    dialogId: string;\n    body: string;\n    originMessageId: string;\n    extension?: any;\n    last?: boolean;\n  };\n  export type DeleteMessageParams = {\n    to: string;\n    dialogId: string;\n    messageId: string;\n  };\n  export type LastActivity = {\n    userId: number | null;\n    seconds: number;\n  };\n  export type SearchParams = {\n    search_text?: string;\n    start_date?: number | string | Date;\n    end_date?: number | string | Date;\n    chat_dialog_ids?: string | string[];\n  };\n  export type SearchResult = {\n    results: {\n      dialogs: ConnectyCubeDialogs.Dialog[];\n      messages: any[];\n      users: ConnectyCubeUsers.User[];\n    };\n    [key: string]: any;\n  };\n  export type UserJIDParams = {\n    userId?: number;\n    resource?: string;\n    jid?: string;\n    [key: string]: any;\n  };\n  // XMPP client events and listeners\n  export type XMPPClientEvent = string | symbol;\n  export type XMPPClientListener = (...args: any[]) => void;\n  export type XMPPClientListeners = Map<XMPPClientEvent, XMPPClientListener>;\n  // Chat listeners\n  export type OnChatStatusListener = (status: ConnectionStatus) => void;\n  export type OnChatConnectionErrorListener = (error: Error) => void;\n  export type OnChatDisconnectedListener = () => void;\n  export type OnChatReconnectedListener = () => void;\n  export type OnMessageListener = (userId: number, message: Message) => void;\n  export type OnMessageSystemListener = (message: SystemMessage) => void;\n  export type OnMessageErrorListener = (messageId: string, error: { code: number; info: string }) => void;\n  export type OnMessageTypingListener = (typing: boolean, userId: number, dialogId: string) => void;\n  export type OnMessageUpdateListener = (\n    messageId: string,\n    isLast: boolean,\n    updatedBody: string,\n    dialogId: string,\n    userId: number,\n    extraParams: object | null\n  ) => void;\n  export type OnMessageDeleteListener = (messageId: string, dialogId: string, userId: number) => void;\n  export type OnMessageReactionsListener = (\n    messageId: string,\n    userId: number,\n    dialogId: string,\n    add: string,\n    remove: string\n  ) => void;\n  export type OnMessageDeliveredListener = (messageId: string, dialogId: string, userId: number) => void;\n  export type OnMessageReadListener = (messageId: string, dialogId: string, userId: number) => void;\n  export type OnMessageSentListener = (lost: MessageParams | null, sent: MessageParams | null) => void;\n  export type OnLastUserActivityListener = (userId: LastActivity['userId'], seconds: LastActivity['seconds']) => void;\n  export type OnDialogJoinListener = (dialogId: string, userId: number) => void;\n  export type OnDialogLeaveListener = (dialogId: string, userId: number) => void;\n  export type OnDialogKickListener = (dialogId: string, initiatorId: number) => void;\n  export type Listeners =\n    | OnChatStatusListener\n    | OnChatConnectionErrorListener\n    | OnChatDisconnectedListener\n    | OnChatReconnectedListener\n    | OnMessageListener\n    | OnMessageSystemListener\n    | OnMessageErrorListener\n    | OnMessageTypingListener\n    | OnMessageUpdateListener\n    | OnMessageDeleteListener\n    | OnMessageReactionsListener\n    | OnMessageDeliveredListener\n    | OnMessageReadListener\n    | OnMessageSentListener\n    | OnLastUserActivityListener\n    | OnDialogJoinListener\n    | OnDialogLeaveListener\n    | OnDialogKickListener;\n  export type ListenerName =\n    | 'onChatStatusListener'\n    | 'onConnectionErrorListener'\n    | 'onDisconnectedListener'\n    | 'onReconnectListener'\n    | 'onMessageListener'\n    | 'onSystemMessageListener'\n    | 'onMessageErrorListener'\n    | 'onMessageTypingListener'\n    | 'onMessageUpdateListener'\n    | 'onMessageDeleteListener'\n    | 'onMessageReactionsListener'\n    | 'onDeliveredStatusListener'\n    | 'onReadStatusListener'\n    | 'onSentMessageCallback'\n    | 'onLastUserActivityListener'\n    | 'onJoinOccupant'\n    | 'onLeaveOccupant'\n    | 'onKickOccupant';\n  // PrivacyList\n  export type PrivacyListItem = {\n    user_id: string | number;\n    action: PrivacyListAction | string;\n    mutualBlock?: boolean;\n  };\n  export type PrivacyList = {\n    name: string;\n    items: PrivacyListItem[];\n  };\n  export type PrivacyListNames = {\n    default: string | null;\n    active: string | null;\n    names: string[];\n  };\n  export type PrivacyListItemParams = {\n    value: string;\n    action: string;\n    order: number;\n    isMutual: boolean;\n  };\n}\n","import { Auth } from '.';\nimport { Config } from '../config';\n\nexport enum ChatProtocol {\n  BOSH = 1,\n  WS = 2,\n}\nexport enum JanusDebugMode {\n  ALL = 'all',\n  TRACE = 'trace',\n  DEBUG = 'debug',\n  VDEBUG = 'vdebug',\n  LOG = 'log',\n  WARN = 'warn',\n  ERROR = 'error',\n}\n\nexport namespace ConnectyCubeConfig {\n  export type Object = Partial<Config>;\n  export type Credentials = {\n    appId: number | string;\n    authKey?: string;\n    token?: string;\n    systemApiKey?: string;\n    authSecret?: string;\n  };\n  export type Endpoints = { api: string; chat: string; muc?: string };\n  export type ChatProtocolURLs = { bosh?: string; websocket?: string; active: ChatProtocol | number };\n  export type ChatStreamManagement = { enable: boolean; acknowledgementTimeout?: number };\n  export type ChatReconnect = { enable: boolean; timeInterval: number };\n  export type Chat = {\n    streamManagement?: ChatStreamManagement;\n    reconnect?: ChatReconnect;\n  };\n  export type VideochatIceServer = {\n    urls: string | string[];\n    url?: string;\n    credential?: string;\n    username?: string;\n  };\n  export type Videochat = {\n    alwaysRelayCalls?: boolean;\n    answerTimeInterval?: number;\n    dialingTimeInterval?: number;\n    disconnectTimeInterval?: number;\n    statsReportTimeInterval?: number | null;\n    iceServers?: VideochatIceServer[];\n  };\n  export type JanusDebug = JanusDebugMode.ALL | JanusDebugMode[] | boolean;\n  export type Conference = {\n    server: string;\n    debug?: JanusDebug;\n  };\n  export type Whiteboard = {\n    server: string;\n  };\n  export type LinkPreview = {\n    server: string;\n  };\n  export type ApiRoutes = {\n    session: string;\n    login: string;\n    users: string;\n    chat: string;\n    blobs: string;\n    subscriptions: string;\n    events: string;\n    data: string;\n    addressbook: string;\n    meetings: string;\n    whiteboards: string;\n    unfurl: string;\n    calls: string;\n    type: string;\n  };\n  export type SessionHandlerResponse = () => void;\n  export type SessionRetryCallback = (session: Partial<Auth.Session>) => void;\n  export type SessionExpiredListener = (\n    handler: SessionHandlerResponse,\n    retry: SessionRetryCallback\n  ) => void | Promise<void>;\n  export type XMPPDataListener = (size: number) => number;\n  export type Listeners = {\n    sessionExpired?: SessionExpiredListener;\n    xmppDataWrite?: XMPPDataListener;\n    xmppDataRead?: XMPPDataListener;\n  };\n  export type Debug = { mode: number | boolean };\n  export type Options = {\n    creds?: Credentials;\n    endpoints?: Endpoints;\n    chatProtocol?: ChatProtocolURLs;\n    chat?: Chat;\n    videochat?: Videochat;\n    conference?: Conference;\n    whiteboard?: Whiteboard;\n    on?: Listeners;\n    timeout?: number;\n    debug?: Debug;\n  };\n}\n","import { DateOrTimestamp, SearchCondition } from './common';\n\nexport enum DataPermission {\n  CREATE = 'create',\n  READ = 'read',\n  UPDATE = 'update',\n  DELETE = 'delete',\n}\nexport enum DataPermissionAccess {\n  OPEN = 'open',\n  OWNER = 'owner',\n  NOT_ALLOWED = 'not_allowed',\n  OPEN_FOR_GROUPS = 'open_for_groups',\n  OPEN_FOR_USERS_IDS = 'open_for_users_ids',\n}\n\nexport namespace ConnectyCubeData {\n  export type PermissionOptions = {\n    access: DataPermissionAccess | string;\n    user_ids?: string[];\n    user_groups?: string[];\n  };\n  export type Permissions = Record<DataPermission | string, PermissionOptions>;\n  export type CreateRecord = Record<string, any> & {\n    permissions?: Permissions;\n  };\n  export type DataRecord = Record<string, any> & {\n    _id: string;\n    _parent_id: string | null;\n    created_at: DateOrTimestamp;\n    updated_at: DateOrTimestamp;\n    user_id: number;\n    permissions: Permissions;\n  };\n  // Request parameters type\n  export type CreateParams = CreateRecord | CreateRecord[];\n  export type ListParams =\n    | ({\n        sort_asc?: string;\n        sort_desc?: string;\n        skip?: number;\n        limit?: number;\n        count?: number;\n        output?: { include?: string[]; exclude?: string[] };\n        near?: string;\n      } & SearchCondition<any>)\n    | undefined;\n  export type ReadParams = { permissions: 1 };\n  export type UpdateOptions = {\n    [key: string]: any;\n    inc?: Record<string, number>;\n    pull?: Record<string, any>;\n    pull_with_filter?: Record<string, Record<string, any>>;\n    pull_all?: Record<string, any[]>;\n    pop?: Record<string, 1 | -1>;\n    push?: Record<string, any[]>;\n    add_to_set?: Record<string, any[]>;\n    update_by_index?: Record<string, Record<number, any>>;\n    search_criteria?: SearchCondition<any>;\n  };\n  // Response data types\n  export type ListResponse = { class_name: string; items: DataRecord[] };\n  export type ReadPermissionsResponse = { record_id: string; permissions: Permissions };\n  export type UpdateResponse = {\n    class_name: string;\n    skip?: number;\n    limit?: number;\n    total_found?: number;\n    not_found?: { ids: string[] };\n    items: DataRecord[];\n  };\n  export type DeleteResponse =\n    | {\n        SuccessfullyDeleted: { ids: string[] };\n        WrongPermissions: { ids: string[] };\n        NotFound: { ids: string[] };\n      }\n    | { total_deleted: number };\n}\n","import { ISODateString, SearchableProps, Timestamp } from './common';\nimport { ConnectyCubeUsers } from './users';\n\nexport enum DialogType {\n  PUBLIC = 1,\n  GROUP = 2,\n  PRIVATE = 3,\n  BROADCAST = 4,\n  MEETING = 5,\n}\nexport enum LastMessageMessageStatus {\n  SENT = 'sent',\n  DELIVERED = 'delivered',\n  READ = 'read',\n}\nexport enum DialogDateProp {\n  CREATED = 'created_at',\n  UPDATED = 'updated_at',\n  LAST_MESSAGE = 'last_message_date_sent',\n}\n\nexport namespace ConnectyCubeDialogs {\n  export type Dialog = {\n    _id: string;\n    name: string;\n    description: string | null;\n    photo: string | null;\n    type: DialogType | number;\n    user_id: number;\n    created_at: ISODateString;\n    updated_at: ISODateString;\n    xmpp_room_jid?: string | null;\n    admins_ids?: number[];\n    last_message: string | null;\n    last_message_date_sent?: Timestamp;\n    last_message_id: string | null;\n    last_message_user_id: number | null;\n    last_message_status: LastMessageMessageStatus | string | null;\n    occupants_ids: number[];\n    occupants_count?: number;\n    pinned_messages_ids?: string[];\n    unread_messages_count: number;\n    extensions?: { [key: string]: any };\n    permissions?: { allow_preview: boolean };\n  };\n  // Request parameters type\n  export type ListParams = SearchableProps<Dialog> & {\n    skip?: number;\n    limit?: number;\n    count?: number;\n    sort_asc?: DialogDateProp | string;\n    sort_desc?: DialogDateProp | string;\n  };\n  export type CreateParams = {\n    type: DialogType;\n    occupants_ids?: (string | number)[] | string;\n    admins_ids?: (string | number)[] | string;\n    name?: string;\n    photo?: string | null;\n    description?: string;\n    extensions?: { [key: string]: any };\n    permissions?: { allow_preview: boolean };\n  };\n  export type UpdateParams = {\n    push_all?: {\n      occupants_ids?: (string | number)[];\n      admins_ids?: (string | number)[];\n      pinned_messages_ids?: string[];\n    };\n    pull_all?: {\n      occupants_ids?: (string | number)[];\n      admins_ids?: (string | number)[];\n      pinned_messages_ids?: string[];\n    };\n    name?: string;\n    photo?: string | null;\n    description?: string;\n    extensions?: { [key: string]: any };\n    permissions?: { allow_preview: boolean };\n  };\n  export type GetPublicOccupantsParams = {\n    limit?: number;\n    skip?: number;\n  };\n  // Response data types\n  export type ListResponse = {\n    total_entries: number;\n    skip: number;\n    limit: number;\n    items: Dialog[];\n  };\n  export type DeleteResponse = {\n    SuccessfullyDeleted: { ids: string[] };\n    NotFound: { ids: string[] };\n    WrongPermissions: { ids: string[] };\n  };\n  export type GetNotificationsSettingsResponse = { notifications: { enabled: number | string } };\n  export type UpdateNotificationsSettingsResponse = { notifications: { enabled: number | string } };\n  export type GetPublicOccupantsResponse = { items: ConnectyCubeUsers.User[] };\n}\n","import ConferenceSession from '../videocalling_conference/ConferenceSession';\n\nexport enum DeviceInputType {\n  VIDEO = 'videoinput',\n  AUDIO = 'audioinput',\n}\nexport enum JanusEvent {\n  PARTICIPANT_JOINED = 'participant_joined',\n  PARTICIPANT_LEFT = 'participant_left',\n  LOCAL_STREAM = 'local_stream',\n  REMOTE_STREAM = 'remote_stream',\n  REMOTE_TRACKS_UPDATED = 'remote_tracks_updated',\n  DATA_CHANNEL_OPEN = 'data_channel_open',\n  DATA_CHANNEL_MESSAGE = 'data_channel_message',\n  ERROR = 'error',\n}\nexport enum JanusCallType {\n  VIDEO = 'video',\n  AUDIO = 'audio',\n}\nexport enum JanusMediaTrackReason {\n  CREATED = 'created',\n  ENDED = 'ended',\n  MUTE = 'mute',\n  UNMUTE = 'unmute',\n}\nexport enum ConferenceEvent {\n  JOIN = 'join',\n  LEFT = 'left',\n  SLOW_LINK = 'slow-link',\n  REMOTE_TRACKS_UPDATED = 'remote-tracks',\n  REMOTE_STREAM = 'remote-stream',\n  REMOTE_CONNECTION_STATE = 'remote-connection-state',\n  DATA_CHANNEL_OPENED = 'data-channel-opened',\n  DATA_CHANNEL_MESSAGE = 'data-channel-message',\n  SESSION_CONNECTION_STATE = 'session-connection-state',\n  ERROR = 'error',\n}\n\nexport namespace ConnectyCubeJanus {\n  export interface SuccessErrorCallbacks {\n    success?: (...args: any[]) => void;\n    error?: (error: any) => void;\n  }\n  export interface InitCallbacks extends SuccessErrorCallbacks {\n    destroyed?: () => void;\n    timeoutSessionCallback?: () => void;\n  }\n  export interface PluginCallbacks extends SuccessErrorCallbacks {\n    localStream?: MediaStream;\n    displayName?: string;\n    iceState?: (iceState: any) => void;\n    slowLink?: (uplink: any, nacks: any) => void;\n    consentDialog?: (on: any) => void;\n    mediaState?: (medium: any, on: any) => void;\n    webrtcState?: (on: any) => void;\n    oncleanup?: () => void;\n  }\n  export type Session = ConferenceSession;\n  export interface RequestCallbacks extends SuccessErrorCallbacks {\n    displayName?: string;\n  }\n  // Listeners\n  export type OnParticipantJoinedListener = (\n    session: Session,\n    userId: number,\n    userName: string,\n    isExist: boolean\n  ) => void;\n  export type OnParticipantLeftListener = (session: Session, ...args: any[]) => void;\n  export type OnSlowLinkListener = (session: Session, userId: number | null, uplink: any, nacks: any) => void;\n  export type OnRemoteStreamListener = (session: Session, userId: number, stream: MediaStream) => void;\n  export type OnRemoteTracksUpdatedListener = (\n    session: Session,\n    userId: number,\n    track: MediaStreamTrack,\n    eventType: any\n  ) => void;\n  export type OnRemoteConnectionStateChangedListener = (session: Session, userId: number, iceState: any) => void;\n  export type OnDataChannelOpenedListener = (session: Session, label: any) => void;\n  export type OnDataChannelMessageListener = (session: Session, label: any, data: any) => void;\n  export type OnSessionConnectionStateChangedListener = (session: Session, iceState: any) => void;\n  export type OnErrorListener = (session: Session, error: any) => void;\n  export type Listeners =\n    | OnParticipantJoinedListener\n    | OnParticipantLeftListener\n    | OnSlowLinkListener\n    | OnRemoteStreamListener\n    | OnRemoteTracksUpdatedListener\n    | OnRemoteConnectionStateChangedListener\n    | OnDataChannelOpenedListener\n    | OnDataChannelMessageListener\n    | OnSessionConnectionStateChangedListener\n    | OnErrorListener;\n  export type ListenerName =\n    | 'onParticipantJoinedListener'\n    | 'onParticipantLeftListener'\n    | 'onSlowLinkListener'\n    | 'onRemoteStreamListener'\n    | 'onRemoteTracksUpdatedListener'\n    | 'onRemoteConnectionStateChangedListener'\n    | 'onDataChannelOpenedListener'\n    | 'onDataChannelMessageListener'\n    | 'onSessionConnectionStateChangedListener'\n    | 'onErrorListener';\n}\n","export enum MediaType {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  NONE = 'none',\n}\n\nexport namespace ConnectyCubeMedia {\n  export interface ElementOptions {\n    muted?: boolean;\n    mirror?: boolean;\n  }\n  export interface ElementParams {\n    elementId?: string;\n    options?: ElementOptions;\n  }\n  export interface DisplayParams extends DisplayMediaStreamOptions, ElementParams {}\n  export interface UserParams extends MediaStreamConstraints, ElementParams {}\n  export type DeviceIdOrTrackConstraints = MediaTrackConstraints | string;\n  export type TrackConstraintsOrDeviceIds = {\n    audio?: DeviceIdOrTrackConstraints;\n    video?: DeviceIdOrTrackConstraints;\n  };\n}\n","import { DateOrTimestamp, SearchCondition } from './common';\n\nexport enum MeetingDateMetric {\n  MINUTES = 'minutes',\n  HOURS = 'hours',\n  DAYS = 'days',\n  WEEK = 'weeks',\n}\n\nexport namespace ConnectyCubeMeetings {\n  export type Attendee = { id?: number; email?: string };\n  export type Meeting = {\n    _id: string;\n    name?: string;\n    start_date?: DateOrTimestamp;\n    end_date?: DateOrTimestamp;\n    attendees?: Attendee[];\n    record?: boolean | null;\n    chat_dialog_id?: string | null;\n    created_at?: DateOrTimestamp;\n    updated_at?: DateOrTimestamp;\n    host_id?: number;\n    public?: boolean;\n    scheduled?: boolean;\n    notify?: boolean;\n    notify_before?: {\n      metric: MeetingDateMetric | string;\n      value: number; // 'minutes' range [0 - 55], 'hours' range [1 - 24], 'days' range [1 - 30], 'weeks' range [1 - 4]\n    };\n    timezone?: {\n      offset: number; // Minutes UTC offset\n      name: string; // Timezone Name\n    };\n  };\n  export type Recording = {\n    _id: string;\n    room_id: string;\n    participants_ids: number[];\n    updated_at: string;\n    created_at: string;\n    download_url: string;\n    participants_count: number;\n    duration: number;\n    size: number;\n  };\n  // Request parameters type\n  export type GetParams = {\n    _id?: string;\n    limit?: number;\n    offset?: number;\n    start_at?: SearchCondition<DateOrTimestamp>;\n    end_at?: SearchCondition<DateOrTimestamp>;\n    updated_at?: SearchCondition<DateOrTimestamp>;\n    created_at?: SearchCondition<DateOrTimestamp>;\n    scheduled?: SearchCondition<boolean>;\n  };\n  export type CreateParams = {\n    name?: string;\n    start_date?: DateOrTimestamp;\n    end_date?: DateOrTimestamp;\n    attendees?: Attendee[];\n    chat?: boolean;\n    record?: boolean;\n    public?: boolean;\n    scheduled?: boolean;\n    notify?: boolean;\n    notify_before?: {\n      metric: MeetingDateMetric | string;\n      value: number; // 'minutes' range [0 - 55], 'hours' range [1 - 24], 'days' range [1 - 30], 'weeks' range [1 - 4]\n    };\n    timezone?: {\n      offset: number; // Minutes UTC offset\n      name: string; // Timezone Name\n    };\n  };\n  export type UpdateParams = {\n    name: string;\n    start_date: DateOrTimestamp;\n    end_date: DateOrTimestamp;\n    attendees: Attendee[];\n    record?: boolean;\n    public?: boolean;\n    scheduled?: boolean;\n    notify?: boolean;\n    notify_before?: {\n      metric: MeetingDateMetric | string;\n      value: number; // 'minutes' range [0 - 55], 'hours' range [1 - 24], 'days' range [1 - 30], 'weeks' range [1 - 4]\n    };\n    timezone?: {\n      offset: number; // Minutes UTC offset\n      name: string; // Timezone Name\n    };\n  };\n}\n","import { ConnectyCubeConfig } from './config';\nimport { ConnectyCubeAuth } from './auth';\n\nexport enum ProxyMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  PATCH = 'PATCH',\n  DELETE = 'DELETE',\n  HEAD = 'HEAD',\n}\nexport enum ProxyType {\n  JSON = 'json',\n  TEXT = 'text',\n}\n\nexport namespace ConnectyCubeProxy {\n  export type Params = {\n    url: string;\n    type?: ProxyMethod;\n    data?: any;\n    contentType?: boolean;\n    dataType?: ProxyType;\n    useArrayQuery?: boolean;\n    fileToCustomObject?: boolean;\n    authKey?: string;\n    abort_id?: string | number;\n  };\n  export type AbortControllersMap = {\n    [key: string | number]: {\n      controllers: AbortController[];\n      doneRequestsCount?: number;\n    };\n  };\n  export type SDKInstance = {\n    config: ConnectyCubeConfig.Object;\n    session: Partial<ConnectyCubeAuth.Session> | null;\n  };\n  export type ErrorObject = {\n    code?: number;\n    info?: { errors?: { base?: string[] } };\n  };\n}\n","import { DateOrTimestamp } from './common';\n\nexport enum NotificationChannel {\n  APNS = 'apns',\n  VOIP = 'apns_voip',\n  GCM = 'gcm',\n  WEB = 'web',\n}\nexport enum DevicePlatform {\n  IOS = 'ios',\n  ANDROID = 'android',\n  WEB = 'web',\n}\nexport enum PushEnvironment {\n  DEV = 'development',\n  PROD = 'production',\n}\n\nexport namespace ConnectyCubePushNotifications {\n  export type Subscription = {\n    subscription: {\n      id: number | string;\n      notification_channel: {\n        name: NotificationChannel | string;\n      };\n      device: {\n        udid: string;\n        platform: {\n          name: DevicePlatform | string;\n        };\n      };\n    };\n  };\n  export type Event = {\n    event: {\n      id: number;\n      event_type: string | null;\n      message: string | null;\n      date: DateOrTimestamp;\n      period: DateOrTimestamp;\n      name: string | null;\n      occured_count?: number;\n      created_at?: DateOrTimestamp;\n      updated_at?: DateOrTimestamp;\n      end_date?: DateOrTimestamp;\n      active?: boolean | null;\n      application_id: number | null;\n      user_id: number | null;\n      kind: string | null;\n      environment: PushEnvironment | null;\n      tag_query?: any;\n      notification_channel?: {\n        name?: NotificationChannel | null;\n      };\n    };\n  };\n  export type PushTokenBaseParams = {\n    environment: PushEnvironment | string;\n  };\n  export type PushTokenMobileParams = PushTokenBaseParams & {\n    client_identification_sequence: string;\n    bundle_identifier?: string;\n  };\n  export type PushTokenWebParams = PushTokenBaseParams & {\n    web_endpoint: string;\n    web_auth: string;\n    web_p256dh: string;\n  };\n  // Request parameters type\n  export type SubscriptionsCreateParams = {\n    notification_channel: NotificationChannel | string;\n    push_token: PushTokenMobileParams | PushTokenWebParams;\n    device: {\n      platform: DevicePlatform | string;\n      udid: string;\n    };\n  };\n  export type EventsCreateParams = {\n    notification_type: 'push' | string;\n    push_type: NotificationChannel | string;\n    environment: PushEnvironment | string;\n    event_type?: 'one_shot' | string;\n    message?: string | null;\n    user?: {\n      ids: string;\n      tags?: {\n        any?: string;\n        all?: string;\n        exclude?: string;\n      };\n    };\n    external_user?: { ids: string };\n  };\n}\n","import { sdkVersion } from './platform';\nimport { JanusDebugMode, Config as ConnectyCubeConfig } from './types';\n\nexport class Config {\n  private static instance: Config;\n\n  public version: string = sdkVersion;\n  public creds: ConnectyCubeConfig.Credentials = { appId: '', authKey: '' };\n  public endpoints: ConnectyCubeConfig.Endpoints = {\n    api: 'api.connectycube.com',\n    chat: 'chat.connectycube.com',\n    muc: 'muc.chat.connectycube.com',\n  };\n  public chatProtocol: ConnectyCubeConfig.ChatProtocolURLs = {\n    bosh: 'https://chat.connectycube.com:5281',\n    websocket: 'wss://chat.connectycube.com:5291',\n    active: 2,\n  };\n  public chat: ConnectyCubeConfig.Chat = {\n    streamManagement: { enable: false },\n    reconnect: { enable: true, timeInterval: 5 },\n  };\n  public videochat: ConnectyCubeConfig.Videochat = {\n    alwaysRelayCalls: false,\n    answerTimeInterval: 60,\n    dialingTimeInterval: 5,\n    disconnectTimeInterval: 30,\n    statsReportTimeInterval: null,\n    iceServers: [\n      { urls: 'stun:stun.l.google.com:19302' },\n      { urls: 'stun:turn.connectycube.com' },\n      {\n        urls: 'turn:turn.connectycube.com:5349?transport=udp',\n        username: 'connectycube',\n        credential: '4c29501ca9207b7fb9c4b4b6b04faeb1',\n      },\n      {\n        urls: 'turn:turn.connectycube.com:5349?transport=tcp',\n        username: 'connectycube',\n        credential: '4c29501ca9207b7fb9c4b4b6b04faeb1',\n      },\n    ],\n  };\n  public conference: ConnectyCubeConfig.Conference = {\n    server: 'wss://janus.connectycube.com:8989',\n    debug: JanusDebugMode.ALL,\n  };\n  public whiteboard: ConnectyCubeConfig.Whiteboard = { server: 'https://whiteboard.connectycube.com' };\n  public linkpreview: ConnectyCubeConfig.LinkPreview = { server: 'https://linkpreview.connectycube.com' };\n  readonly urls: ConnectyCubeConfig.ApiRoutes = {\n    session: 'session',\n    login: 'login',\n    users: 'users',\n    chat: 'chat',\n    blobs: 'blobs',\n    subscriptions: 'subscriptions',\n    events: 'events',\n    data: 'data',\n    addressbook: 'address_book',\n    meetings: 'meetings',\n    whiteboards: 'whiteboards',\n    unfurl: 'unfurl',\n    calls: 'calls',\n    type: '.json',\n  };\n  public on: ConnectyCubeConfig.Listeners = {\n    sessionExpired: undefined,\n    xmppDataWrite: undefined,\n    xmppDataRead: undefined,\n  };\n  public timeout: number | null = null;\n  public debug: ConnectyCubeConfig.Debug = { mode: 1 };\n\n  private constructor() {}\n\n  public static getInstance(): Config {\n    if (!Config.instance) {\n      Config.instance = new Config();\n    }\n    return Config.instance;\n  }\n\n  public set(options: ConnectyCubeConfig.Options): void {\n    if (options.endpoints && options.endpoints.chat) {\n      this.endpoints.muc = `muc.${options.endpoints.chat}`;\n      this.chatProtocol.bosh = `https://${options.endpoints.chat}:5281`;\n      this.chatProtocol.websocket = `wss://${options.endpoints.chat}:5291`;\n    }\n\n    Object.keys(options).forEach((key: string) => {\n      if (key !== 'set' && this.hasOwnProperty(key)) {\n        const optionValue = options[key as keyof ConnectyCubeConfig.Options];\n\n        if (typeof optionValue === 'object' && optionValue !== null) {\n          Object.keys(optionValue).forEach((nextKey) => {\n            if (this[key as keyof Config]?.hasOwnProperty(nextKey)) {\n              this[key as keyof Config][nextKey] = optionValue[nextKey];\n            }\n          });\n        } else {\n          (this[key as keyof Config] as Config[keyof Config]) = optionValue as Config[keyof Config];\n        }\n      }\n    });\n  }\n}\n\nexport default Config.getInstance();\n","import { isBrowser, isExpo, isNodeJS, isReactNative } from './platform';\nimport config from './config';\nimport { Config } from './types';\n\nexport default class Utils {\n  static loggers: Array<(args: any[]) => void> = [];\n\n  static env = {\n    isReactNative,\n    isBrowser,\n    isNodeJS,\n    isExpo,\n  };\n\n  static safeCallbackCall(cb: (...args: any[]) => void = () => {}): (...args: any[]) => void {\n    return (...args: any[]) => {\n      if (typeof cb === 'function') {\n        try {\n          cb(...args);\n        } catch (err) {\n          console.error('Error in listener:', err, `Check the code:\\n>>>\\n${cb.toString()}\\n<<<`);\n        }\n      }\n    };\n  }\n\n  static getUrl(base: Config.ApiRoutes[keyof Config.ApiRoutes], res?: string | number, ext?: string | number): string {\n    const resource = res ? `/${res}` : '';\n    const extension = ext ? `/${ext}` : '';\n    return `https://${config.endpoints.api}/${base}${resource}${extension}${config.urls.type}`;\n  }\n\n  static isArray(arg: any): arg is any[] {\n    return Array.isArray(arg);\n  }\n\n  static isObject(obj: any): boolean {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n  }\n\n  static getBsonObjectId(): string {\n    // The object for type MongoDB.Bson.ObjectId\n    // http://docs.mongodb.org/manual/reference/object-id/\n    const ObjectId = {\n      machine: Math.floor(Math.random() * 16777216).toString(16),\n      pid: Math.floor(Math.random() * 32767).toString(16),\n      increment: 0,\n    };\n    const timestamp = Math.floor(Date.now() / 1000).toString(16);\n    const increment = (ObjectId.increment++).toString(16);\n\n    if (parseInt(increment, 16) > 0xffffff) {\n      ObjectId.increment = 0;\n    }\n\n    return (\n      timestamp.padStart(8, '0') +\n      ObjectId.machine.padStart(6, '0') +\n      ObjectId.pid.padStart(4, '0') +\n      increment.padStart(6, '0')\n    );\n  }\n\n  static DLog(...args: any[]): void {\n    if (Utils.loggers.length > 0) {\n      Utils.loggers.forEach((logger) => logger(args));\n      return;\n    }\n\n    const consoleLoggerFunction = () => {\n      return (args: any[]) => {\n        console.log(...args);\n      };\n    };\n\n    if (typeof config.debug === 'object') {\n      const modes = Array.isArray(config.debug.mode) ? config.debug.mode : [config.debug.mode];\n      modes.forEach((mode) => {\n        if (mode === 1) {\n          Utils.loggers.push(consoleLoggerFunction());\n        }\n      });\n    }\n\n    Utils.loggers.forEach((logger) => logger(args));\n  }\n\n  static callTrafficUsageCallback(callbackName: 'xmppDataRead' | 'xmppDataWrite', data: any): void {\n    if (typeof config.on[callbackName] === 'function') {\n      const getStringSize = (str: string): number => new Blob([str]).size;\n      const getDataSize = (data: any = {}): number => {\n        const { body: b, headers: h } = data;\n        let size = 0;\n        if (b) {\n          size += getStringSize(typeof b === 'string' ? b : JSON.stringify(b));\n        }\n        if (h) {\n          size += getStringSize(JSON.stringify(h));\n        }\n        return size;\n      };\n\n      config.on[callbackName](getDataSize(data));\n    }\n  }\n\n  static cloneObject<T>(obj: T = {} as T, escapeNull: boolean = false): T {\n    try {\n      const json = JSON.stringify(obj);\n      const jsonObject = escapeNull ? json.replace(/null/g, '\"\"') : json;\n\n      return JSON.parse(jsonObject);\n    } catch {\n      return obj;\n    }\n  }\n}\n","import ProxyService from './Proxy';\nimport Utils from './Utils';\nimport config from './config';\nimport { AddressBook, ProxyMethod } from './types';\n\nexport default class AddressBookService {\n  public proxy: ProxyService;\n  readonly route = config.urls.addressbook;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async uploadAddressBook(\n    list: AddressBook.Contact[] = [],\n    params: AddressBook.UploadParams = {}\n  ): Promise<AddressBook.UploadResponse> {\n    if (!Utils.isArray(list)) {\n      throw new Error('First parameter must be an Array.');\n    }\n\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: { contacts: list, ...params },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async get(udid?: string): Promise<AddressBook.Contact[]> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route),\n      data: udid ? { udid } : undefined,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getRegisteredUsers(\n    params: AddressBook.GetRegisteredUsersParams = false\n  ): Promise<AddressBook.GetRegisteredUsersResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, 'registered_users'),\n      data: typeof params === 'boolean' ? { compact: params ? 1 : 0 } : params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import ProxyService from './Proxy';\nimport Utils from './Utils';\nimport config from './config';\nimport { Auth, Users, ProxyMethod, ProxyType, EmptyResponse } from './types';\n\nexport default class AuthService {\n  public proxy: ProxyService;\n\n  readonly routes = {\n    session: config.urls.session,\n    login: config.urls.login,\n  };\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public setSession = (session: Partial<Auth.Session>): void => {\n    this.proxy.setSession(session);\n  };\n\n  public getSession = async (): Promise<Auth.Session> => {\n    try {\n      const ajaxParams = {\n        type: ProxyMethod.GET,\n        url: Utils.getUrl(this.routes.session),\n      };\n      const response = await this.proxy.ajax<Auth.GetSessionRawResponse>(ajaxParams);\n      return response.session;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  public createSession = async (params: Auth.LoginParams | {} = {}): Promise<Auth.Session> => {\n    if (config.creds.appId === '' || config.creds.authKey === '') {\n      throw new Error('Cannot create a new session without \"appId\" and \"authKey\"');\n    }\n\n    try {\n      const ajaxParams = {\n        type: ProxyMethod.POST,\n        url: Utils.getUrl(this.routes.session),\n        data: this.generateCreateSessionParams(params),\n      };\n      const response = await this.proxy.ajax<Auth.GetSessionRawResponse>(ajaxParams);\n      this.proxy.setSession(response.session);\n      this.proxy.setCurrentUserId(response.session.user_id);\n      return response.session;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  public destroySession = async (): Promise<EmptyResponse> => {\n    try {\n      const ajaxParams = {\n        type: ProxyMethod.DELETE,\n        url: Utils.getUrl(this.routes.session),\n        dataType: ProxyType.TEXT,\n      };\n      await this.proxy.ajax(ajaxParams);\n      this.proxy.setSession(null);\n      this.proxy.setCurrentUserId(null);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  public login = async (params: Auth.LoginParams): Promise<Users.User> => {\n    try {\n      const ajaxParams = {\n        type: ProxyMethod.POST,\n        url: Utils.getUrl(this.routes.login),\n        data: params,\n      };\n      const { user } = await this.proxy.ajax<Auth.LoginRawResponse>(ajaxParams);\n      this.proxy.setCurrentUserId(user.id);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  public logout = async (): Promise<EmptyResponse> => {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.routes.login),\n      dataType: ProxyType.TEXT,\n    };\n    this.proxy.setCurrentUserId(null);\n    return this.proxy.ajax(ajaxParams);\n  };\n\n  private generateCreateSessionParams(params: Auth.LoginParams | {} = {}): Auth.GeneratedSessionParams {\n    const message: Auth.GeneratedSessionParams = {\n      application_id: config.creds.appId,\n      auth_key: config.creds.authKey,\n    };\n\n    if ('guest' in params) {\n      message.user = params;\n    } else if ('login' in params && 'password' in params) {\n      message.user = { login: params.login, password: params.password };\n    } else if ('email' in params && 'password' in params) {\n      message.user = { email: params.email, password: params.password };\n    } else if ('provider' in params) {\n      message.provider = params.provider;\n      if ('keys' in params) {\n        message.keys = params.keys;\n      }\n      if ('firebase_phone' in params) {\n        message.firebase_phone = params.firebase_phone;\n      }\n      if ('firebase_email' in params) {\n        message.firebase_email = params.firebase_email;\n      }\n    }\n\n    return message;\n  }\n}\n","\"use strict\";\n\nmodule.exports = class TimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"TimeoutError\";\n  }\n};\n","\"use strict\";\n\nmodule.exports = function delay(ms) {\n  let timeout;\n  const promise = new Promise((resolve) => {\n    timeout = setTimeout(resolve, ms);\n  });\n  promise.timeout = timeout;\n  return promise;\n};\n","\"use strict\";\n\nconst TimeoutError = require(\"./TimeoutError\");\nconst delay = require(\"./delay\");\n\nmodule.exports = function timeout(promise, ms) {\n  const promiseDelay = delay(ms);\n\n  function cancelDelay() {\n    clearTimeout(promiseDelay.timeout);\n  }\n\n  return Promise.race([\n    promise.finally(cancelDelay),\n    promiseDelay.then(() => {\n      throw new TimeoutError();\n    }),\n  ]);\n};\n","\"use strict\";\n\nconst TimeoutError = require(\"./TimeoutError\");\n\nmodule.exports = function promise(EE, event, rejectEvent = \"error\", timeout) {\n  return new Promise((resolve, reject) => {\n    let timeoutId;\n\n    const cleanup = () => {\n      clearTimeout(timeoutId);\n      EE.removeListener(event, onEvent);\n      EE.removeListener(rejectEvent, onError);\n    };\n\n    function onError(reason) {\n      reject(reason);\n      cleanup();\n    }\n\n    function onEvent(value) {\n      resolve(value);\n      cleanup();\n    }\n\n    EE.once(event, onEvent);\n    if (rejectEvent) {\n      EE.once(rejectEvent, onError);\n    }\n\n    if (timeout) {\n      timeoutId = setTimeout(() => {\n        cleanup();\n        reject(new TimeoutError());\n      }, timeout);\n    }\n  });\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\n\nmodule.exports = function Deferred() {\n  this.promise = new Promise((resolve, reject) => {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n};\n","\"use strict\";\n\nconst timeout = require(\"./lib/timeout\");\nconst delay = require(\"./lib/delay\");\nconst TimeoutError = require(\"./lib/TimeoutError\");\nconst promise = require(\"./lib/promise\");\nconst EventEmitter = require(\"events\");\nconst Deferred = require(\"./lib/Deferred\");\n\nexports.EventEmitter = EventEmitter;\nexports.timeout = timeout;\nexports.delay = delay;\nexports.TimeoutError = TimeoutError;\nexports.promise = promise;\nexports.Deferred = Deferred;\n","\"use strict\";\n\nmodule.exports.detect = function detect(local) {\n  if (!local) {\n    return false;\n  }\n\n  // Remove all escaped sequences\n  const tmp = local\n    .replaceAll(String.raw`\\20`, \"\")\n    .replaceAll(String.raw`\\22`, \"\")\n    .replaceAll(String.raw`\\26`, \"\")\n    .replaceAll(String.raw`\\27`, \"\")\n    .replaceAll(String.raw`\\2f`, \"\")\n    .replaceAll(String.raw`\\3a`, \"\")\n    .replaceAll(String.raw`\\3c`, \"\")\n    .replaceAll(String.raw`\\3e`, \"\")\n    .replaceAll(String.raw`\\40`, \"\")\n    .replaceAll(String.raw`\\5c`, \"\");\n\n  // Detect if we have unescaped sequences\n  const search = tmp.search(/[ \"&'/:<>@\\\\]/g);\n  if (search === -1) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Escape the local part of a JID.\n *\n * @see http://xmpp.org/extensions/xep-0106.html\n * @param String local local part of a jid\n * @return An escaped local part\n */\nmodule.exports.escape = function escape(local) {\n  if (local === null) {\n    return null;\n  }\n\n  return local\n    .replaceAll(/^\\s+|\\s+$/g, \"\")\n    .replaceAll(\"\\\\\", String.raw`\\5c`)\n    .replaceAll(\" \", String.raw`\\20`)\n    .replaceAll('\"', String.raw`\\22`)\n    .replaceAll(\"&\", String.raw`\\26`)\n    .replaceAll(\"'\", String.raw`\\27`)\n    .replaceAll(\"/\", String.raw`\\2f`)\n    .replaceAll(\":\", String.raw`\\3a`)\n    .replaceAll(\"<\", String.raw`\\3c`)\n    .replaceAll(\">\", String.raw`\\3e`)\n    .replaceAll(\"@\", String.raw`\\40`);\n};\n\n/**\n * Unescape a local part of a JID.\n *\n * @see http://xmpp.org/extensions/xep-0106.html\n * @param String local local part of a jid\n * @return unescaped local part\n */\nmodule.exports.unescape = function unescape(local) {\n  if (local === null) {\n    return null;\n  }\n\n  return local\n    .replaceAll(String.raw`\\20`, \" \")\n    .replaceAll(String.raw`\\22`, '\"')\n    .replaceAll(String.raw`\\26`, \"&\")\n    .replaceAll(String.raw`\\27`, \"'\")\n    .replaceAll(String.raw`\\2f`, \"/\")\n    .replaceAll(String.raw`\\3a`, \":\")\n    .replaceAll(String.raw`\\3c`, \"<\")\n    .replaceAll(String.raw`\\3e`, \">\")\n    .replaceAll(String.raw`\\40`, \"@\")\n    .replaceAll(String.raw`\\5c`, \"\\\\\");\n};\n","\"use strict\";\n\nconst escaping = require(\"./escaping\");\n\n/**\n * JID implements\n * - XMPP addresses according to RFC6122\n * - XEP-0106: JID Escaping\n *\n * @see http://tools.ietf.org/html/rfc6122#section-2\n * @see http://xmpp.org/extensions/xep-0106.html\n */\nclass JID {\n  constructor(local, domain, resource) {\n    if (typeof domain !== \"string\" || !domain) {\n      throw new TypeError(`Invalid domain.`);\n    }\n\n    this.setDomain(domain);\n    this.setLocal(typeof local === \"string\" ? local : \"\");\n    this.setResource(typeof resource === \"string\" ? resource : \"\");\n  }\n\n  [Symbol.toPrimitive](hint) {\n    if (hint === \"number\") {\n      return NaN;\n    }\n\n    return this.toString();\n  }\n\n  toString(unescape) {\n    let s = this._domain;\n    if (this._local) {\n      s = this.getLocal(unescape) + \"@\" + s;\n    }\n\n    if (this._resource) {\n      s = s + \"/\" + this._resource;\n    }\n\n    return s;\n  }\n\n  /**\n   * Convenience method to distinguish users\n   * */\n  bare() {\n    if (this._resource) {\n      return new JID(this._local, this._domain, null);\n    }\n\n    return this;\n  }\n\n  /**\n   * Comparison function\n   * */\n  equals(other) {\n    return (\n      this._local === other._local &&\n      this._domain === other._domain &&\n      this._resource === other._resource\n    );\n  }\n\n  /**\n   * http://xmpp.org/rfcs/rfc6122.html#addressing-localpart\n   * */\n  setLocal(local, escape) {\n    escape = escape || escaping.detect(local);\n\n    if (escape) {\n      local = escaping.escape(local);\n    }\n\n    this._local = local && local.toLowerCase();\n    return this;\n  }\n\n  getLocal(unescape = false) {\n    let local = null;\n\n    local = unescape ? escaping.unescape(this._local) : this._local;\n\n    return local;\n  }\n\n  /**\n   * http://xmpp.org/rfcs/rfc6122.html#addressing-domain\n   */\n  setDomain(domain) {\n    this._domain = domain.toLowerCase();\n    return this;\n  }\n\n  getDomain() {\n    return this._domain;\n  }\n\n  /**\n   * http://xmpp.org/rfcs/rfc6122.html#addressing-resourcepart\n   */\n  setResource(resource) {\n    this._resource = resource;\n    return this;\n  }\n\n  getResource() {\n    return this._resource;\n  }\n}\n\nObject.defineProperty(JID.prototype, \"local\", {\n  get: JID.prototype.getLocal,\n  set: JID.prototype.setLocal,\n});\n\nObject.defineProperty(JID.prototype, \"domain\", {\n  get: JID.prototype.getDomain,\n  set: JID.prototype.setDomain,\n});\n\nObject.defineProperty(JID.prototype, \"resource\", {\n  get: JID.prototype.getResource,\n  set: JID.prototype.setResource,\n});\n\nmodule.exports = JID;\n","\"use strict\";\n\nconst JID = require(\"./lib/JID\");\nconst escaping = require(\"./lib/escaping\");\nconst parse = require(\"./lib/parse\");\n\nfunction jid(...args) {\n  if (!args[1] && !args[2]) {\n    return parse(...args);\n  }\n\n  return new JID(...args);\n}\n\nmodule.exports = jid.bind();\nmodule.exports.jid = jid;\nmodule.exports.JID = JID;\nmodule.exports.equal = function equal(a, b) {\n  return a.equals(b);\n};\n\nmodule.exports.detectEscape = escaping.detect;\nmodule.exports.escapeLocal = escaping.escape;\nmodule.exports.unescapeLocal = escaping.unescape;\nmodule.exports.parse = parse;\n","\"use strict\";\n\nconst JID = require(\"../lib/JID\");\n\nmodule.exports = function parse(s) {\n  let local;\n  let resource;\n\n  const resourceStart = s.indexOf(\"/\");\n  if (resourceStart !== -1) {\n    resource = s.slice(resourceStart + 1);\n    s = s.slice(0, resourceStart);\n  }\n\n  const atStart = s.indexOf(\"@\");\n  if (atStart !== -1) {\n    local = s.slice(0, atStart);\n    s = s.slice(atStart + 1);\n  }\n\n  return new JID(local, s, resource);\n};\n","'use strict';\n\nconst escapeXMLTable = {\n  \"&\": \"&amp;\",\n  \"<\": \"&lt;\",\n  \">\": \"&gt;\",\n  '\"': \"&quot;\",\n  \"'\": \"&apos;\",\n};\n\nfunction escapeXMLReplace(match) {\n  return escapeXMLTable[match];\n}\n\nconst unescapeXMLTable = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&quot;\": '\"',\n  \"&apos;\": \"'\",\n};\n\nfunction unescapeXMLReplace(match) {\n  if (match[1] === \"#\") {\n    const num =\n      match[2] === \"x\"\n        ? parseInt(match.slice(3), 16)\n        : parseInt(match.slice(2), 10);\n    // https://www.w3.org/TR/xml/#NT-Char defines legal XML characters:\n    // #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n    if (\n      num === 0x9 ||\n      num === 0xa ||\n      num === 0xd ||\n      (num >= 0x20 && num <= 0xd7ff) ||\n      (num >= 0xe000 && num <= 0xfffd) ||\n      (num >= 0x10000 && num <= 0x10ffff)\n    ) {\n      return String.fromCodePoint(num);\n    }\n    throw new Error(\"Illegal XML character 0x\" + num.toString(16));\n  }\n  if (unescapeXMLTable[match]) {\n    return unescapeXMLTable[match] || match;\n  }\n  throw new Error(\"Illegal XML entity \" + match);\n}\n\nfunction escapeXML(s) {\n  return s.replace(/[\"&'<>]/g, escapeXMLReplace);\n}\n\nfunction unescapeXML(s) {\n  let result = \"\";\n  let start = -1;\n  let end = -1;\n  let previous = 0;\n  while (\n    (start = s.indexOf(\"&\", previous)) !== -1 &&\n    (end = s.indexOf(\";\", start + 1)) !== -1\n  ) {\n    result =\n      result +\n      s.slice(previous, start) +\n      unescapeXMLReplace(s.slice(start, end + 1));\n    previous = end + 1;\n  }\n\n  // shortcut if loop never entered:\n  // return the original string without creating new objects\n  if (previous === 0) return s;\n\n  // push the remaining characters\n  result = result + s.substring(previous);\n\n  return result;\n}\n\nfunction escapeXMLText(s) {\n  return s.replace(/[&<>]/g, escapeXMLReplace);\n}\n\nfunction unescapeXMLText(s) {\n  return s.replace(/&(amp|#38|lt|#60|gt|#62);/g, unescapeXMLReplace);\n}\n\nexports.escapeXML = escapeXML;\nexports.escapeXMLText = escapeXMLText;\nexports.unescapeXML = unescapeXML;\nexports.unescapeXMLText = unescapeXMLText;\n","'use strict';\n\nvar escape = require('./escape.js');\n\n/**\n * Element\n *\n * Attributes are in the element.attrs object. Children is a list of\n * either other Elements or Strings for text content.\n **/\nclass Element {\n  constructor(name, attrs) {\n    this.name = name;\n    this.parent = null;\n    this.children = [];\n    this.attrs = {};\n    this.setAttrs(attrs);\n  }\n\n  /* Accessors */\n\n  /**\n   * if (element.is('message', 'jabber:client')) ...\n   **/\n  is(name, xmlns) {\n    return this.getName() === name && (!xmlns || this.getNS() === xmlns);\n  }\n\n  /* without prefix */\n  getName() {\n    const idx = this.name.indexOf(\":\");\n    return idx >= 0 ? this.name.slice(idx + 1) : this.name;\n  }\n\n  /**\n   * retrieves the namespace of the current element, upwards recursively\n   **/\n  getNS() {\n    const idx = this.name.indexOf(\":\");\n    if (idx >= 0) {\n      const prefix = this.name.slice(0, idx);\n      return this.findNS(prefix);\n    }\n    return this.findNS();\n  }\n\n  /**\n   * find the namespace to the given prefix, upwards recursively\n   **/\n  findNS(prefix) {\n    if (!prefix) {\n      /* default namespace */\n      if (this.attrs.xmlns) {\n        return this.attrs.xmlns;\n      } else if (this.parent) {\n        return this.parent.findNS();\n      }\n    } else {\n      /* prefixed namespace */\n      const attr = \"xmlns:\" + prefix;\n      if (this.attrs[attr]) {\n        return this.attrs[attr];\n      } else if (this.parent) {\n        return this.parent.findNS(prefix);\n      }\n    }\n  }\n\n  /**\n   * Recursiverly gets all xmlns defined, in the form of {url:prefix}\n   **/\n  getXmlns() {\n    let namespaces = {};\n\n    if (this.parent) {\n      namespaces = this.parent.getXmlns();\n    }\n\n    for (const attr in this.attrs) {\n      const m = attr.match(\"xmlns:?(.*)\");\n      // eslint-disable-next-line  no-prototype-builtins\n      if (this.attrs.hasOwnProperty(attr) && m) {\n        namespaces[this.attrs[attr]] = m[1];\n      }\n    }\n    return namespaces;\n  }\n\n  setAttrs(attrs) {\n    if (typeof attrs === \"string\") {\n      this.attrs.xmlns = attrs;\n    } else if (attrs) {\n      Object.assign(this.attrs, attrs);\n    }\n  }\n\n  /**\n   * xmlns can be null, returns the matching attribute.\n   **/\n  getAttr(name, xmlns) {\n    if (!xmlns) {\n      return this.attrs[name];\n    }\n\n    const namespaces = this.getXmlns();\n\n    if (!namespaces[xmlns]) {\n      return null;\n    }\n\n    return this.attrs[[namespaces[xmlns], name].join(\":\")];\n  }\n\n  /**\n   * xmlns can be null\n   **/\n  getChild(name, xmlns) {\n    return this.getChildren(name, xmlns)[0];\n  }\n\n  /**\n   * xmlns can be null\n   **/\n  getChildren(name, xmlns) {\n    const result = [];\n    for (const child of this.children) {\n      if (\n        child.getName &&\n        child.getName() === name &&\n        (!xmlns || child.getNS() === xmlns)\n      ) {\n        result.push(child);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * xmlns and recursive can be null\n   **/\n  getChildByAttr(attr, val, xmlns, recursive) {\n    return this.getChildrenByAttr(attr, val, xmlns, recursive)[0];\n  }\n\n  /**\n   * xmlns and recursive can be null\n   **/\n  getChildrenByAttr(attr, val, xmlns, recursive) {\n    let result = [];\n    for (const child of this.children) {\n      if (\n        child.attrs &&\n        child.attrs[attr] === val &&\n        (!xmlns || child.getNS() === xmlns)\n      ) {\n        result.push(child);\n      }\n      if (recursive && child.getChildrenByAttr) {\n        result.push(child.getChildrenByAttr(attr, val, xmlns, true));\n      }\n    }\n    if (recursive) {\n      result = result.flat();\n    }\n    return result;\n  }\n\n  getChildrenByFilter(filter, recursive) {\n    let result = [];\n    for (const child of this.children) {\n      if (filter(child)) {\n        result.push(child);\n      }\n      if (recursive && child.getChildrenByFilter) {\n        result.push(child.getChildrenByFilter(filter, true));\n      }\n    }\n    if (recursive) {\n      result = result.flat();\n    }\n    return result;\n  }\n\n  getText() {\n    let text = \"\";\n    for (const child of this.children) {\n      if (typeof child === \"string\" || typeof child === \"number\") {\n        text += child;\n      }\n    }\n    return text;\n  }\n\n  getChildText(name, xmlns) {\n    const child = this.getChild(name, xmlns);\n    return child ? child.getText() : null;\n  }\n\n  /**\n   * Return all direct descendents that are Elements.\n   * This differs from `getChildren` in that it will exclude text nodes,\n   * processing instructions, etc.\n   */\n  getChildElements() {\n    return this.getChildrenByFilter((child) => {\n      return child instanceof Element;\n    });\n  }\n\n  /* Builder */\n\n  /** returns uppermost parent */\n  root() {\n    if (this.parent) {\n      return this.parent.root();\n    }\n    return this;\n  }\n\n  /** just parent or itself */\n  up() {\n    if (this.parent) {\n      return this.parent;\n    }\n    return this;\n  }\n\n  /** create child node and return it */\n  c(name, attrs) {\n    return this.cnode(new Element(name, attrs));\n  }\n\n  cnode(child) {\n    this.children.push(child);\n    if (typeof child === \"object\") {\n      child.parent = this;\n    }\n    return child;\n  }\n\n  append(...nodes) {\n    for (const node of nodes) {\n      this.children.push(node);\n      if (typeof node === \"object\") {\n        node.parent = this;\n      }\n    }\n  }\n\n  prepend(...nodes) {\n    for (const node of nodes) {\n      this.children.unshift(node);\n      if (typeof node === \"object\") {\n        node.parent = this;\n      }\n    }\n  }\n\n  /** add text node and return element */\n  t(text) {\n    this.children.push(text);\n    return this;\n  }\n\n  /* Manipulation */\n\n  /**\n   * Either:\n   *   el.remove(childEl)\n   *   el.remove('author', 'urn:...')\n   */\n  remove(el, xmlns) {\n    const filter =\n      typeof el === \"string\"\n        ? (child) => {\n            /* 1st parameter is tag name */\n            return !(child.is && child.is(el, xmlns));\n          }\n        : (child) => {\n            /* 1st parameter is element */\n            return child !== el;\n          };\n\n    this.children = this.children.filter(filter);\n\n    return this;\n  }\n\n  text(val) {\n    if (val && this.children.length === 1) {\n      this.children[0] = val;\n      return this;\n    }\n    return this.getText();\n  }\n\n  attr(attr, val) {\n    if (typeof val !== \"undefined\" || val === null) {\n      if (!this.attrs) {\n        this.attrs = {};\n      }\n      this.attrs[attr] = val;\n      return this;\n    }\n    return this.attrs[attr];\n  }\n\n  /* Serialization */\n\n  toString() {\n    let s = \"\";\n    this.write((c) => {\n      s += c;\n    });\n    return s;\n  }\n\n  _addChildren(writer) {\n    writer(\">\");\n    for (const child of this.children) {\n      /* Skip null/undefined */\n      if (child != null) {\n        if (child.write) {\n          child.write(writer);\n        } else if (typeof child === \"string\") {\n          writer(escape.escapeXMLText(child));\n        } else if (child.toString) {\n          writer(escape.escapeXMLText(child.toString(10)));\n        }\n      }\n    }\n    writer(\"</\");\n    writer(this.name);\n    writer(\">\");\n  }\n\n  write(writer) {\n    writer(\"<\");\n    writer(this.name);\n    for (const k in this.attrs) {\n      const v = this.attrs[k];\n      // === null || undefined\n      if (v != null) {\n        writer(\" \");\n        writer(k);\n        writer('=\"');\n        writer(escape.escapeXML(typeof v === \"string\" ? v : v.toString(10)));\n        writer('\"');\n      }\n    }\n    if (this.children.length === 0) {\n      writer(\"/>\");\n    } else {\n      this._addChildren(writer);\n    }\n  }\n}\n\nElement.prototype.tree = Element.prototype.root;\n\nmodule.exports = Element;\n","\"use strict\";\n\nmodule.exports = class XMLError extends Error {\n  constructor(...args) {\n    super(...args);\n    this.name = \"XMLError\";\n  }\n};\n","\"use strict\";\n\nconst LtxParser = require(\"ltx/lib/parsers/ltx.js\");\nconst Element = require(\"ltx/lib/Element.js\");\nconst EventEmitter = require(\"events\");\nconst XMLError = require(\"./XMLError\");\n\nclass Parser extends EventEmitter {\n  constructor() {\n    super();\n    const parser = new LtxParser();\n    this.root = null;\n    this.cursor = null;\n\n    parser.on(\"startElement\", this.onStartElement.bind(this));\n    parser.on(\"endElement\", this.onEndElement.bind(this));\n    parser.on(\"text\", this.onText.bind(this));\n\n    this.parser = parser;\n  }\n\n  onStartElement(name, attrs) {\n    const element = new Element(name, attrs);\n\n    const { root, cursor } = this;\n\n    if (!root) {\n      this.root = element;\n      this.emit(\"start\", element);\n    } else if (cursor !== root) {\n      cursor.append(element);\n    }\n\n    this.cursor = element;\n  }\n\n  onEndElement(name) {\n    const { root, cursor } = this;\n    if (name !== cursor.name) {\n      // <foo></bar>\n      this.emit(\"error\", new XMLError(`${cursor.name} must be closed.`));\n      return;\n    }\n\n    if (cursor === root) {\n      this.emit(\"end\", root);\n      return;\n    }\n\n    if (!cursor.parent) {\n      cursor.parent = root;\n      this.emit(\"element\", cursor);\n      this.cursor = root;\n      return;\n    }\n\n    this.cursor = cursor.parent;\n  }\n\n  onText(str) {\n    const { cursor } = this;\n    if (!cursor) {\n      this.emit(\"error\", new XMLError(`${str} must be a child.`));\n      return;\n    }\n\n    cursor.t(str);\n  }\n\n  write(data) {\n    this.parser.write(data);\n  }\n\n  end(data) {\n    if (data) {\n      this.parser.write(data);\n    }\n  }\n}\n\nParser.XMLError = XMLError;\n\nmodule.exports = Parser;\n","'use strict';\n\nvar events = require('events');\nvar escape = require('../escape.js');\n\nconst STATE_TEXT = 0;\nconst STATE_IGNORE_COMMENT = 1;\nconst STATE_IGNORE_INSTRUCTION = 2;\nconst STATE_TAG_NAME = 3;\nconst STATE_TAG = 4;\nconst STATE_ATTR_NAME = 5;\nconst STATE_ATTR_EQ = 6;\nconst STATE_ATTR_QUOT = 7;\nconst STATE_ATTR_VALUE = 8;\nconst STATE_CDATA = 9;\nconst STATE_IGNORE_CDATA = 10;\n\nclass SaxLtx extends events.EventEmitter {\n  constructor() {\n    super();\n    let state = STATE_TEXT;\n    let remainder;\n    let parseRemainder;\n    let tagName;\n    let attrs;\n    let endTag;\n    let selfClosing;\n    let attrQuote;\n    let attrQuoteChar;\n    let recordStart = 0;\n    let attrName;\n\n    this._handleTagOpening = function _handleTagOpening(\n      endTag,\n      tagName,\n      attrs\n    ) {\n      if (!endTag) {\n        this.emit(\"startElement\", tagName, attrs);\n        if (selfClosing) {\n          this.emit(\"endElement\", tagName, true);\n        }\n      } else {\n        this.emit(\"endElement\", tagName, false);\n      }\n    };\n\n    this.write = function write(data) {\n      if (typeof data !== \"string\") {\n        data = data.toString();\n      }\n      let pos = 0;\n\n      /* Anything from previous write()? */\n      if (remainder) {\n        data = remainder + data;\n        pos += !parseRemainder ? remainder.length : 0;\n        parseRemainder = false;\n        remainder = null;\n      }\n\n      function endRecording() {\n        if (typeof recordStart === \"number\") {\n          const recorded = data.slice(recordStart, pos);\n          recordStart = undefined;\n          return recorded;\n        }\n      }\n\n      for (; pos < data.length; pos++) {\n        switch (state) {\n          case STATE_TEXT: {\n            // if we're looping through text, fast-forward using indexOf to\n            // the next '<' character\n            const lt = data.indexOf(\"<\", pos);\n            if (lt !== -1 && pos !== lt) {\n              pos = lt;\n            }\n\n            break;\n          }\n          case STATE_ATTR_VALUE: {\n            // if we're looping through an attribute, fast-forward using\n            // indexOf to the next end quote character\n            const quot = data.indexOf(attrQuoteChar, pos);\n            if (quot !== -1) {\n              pos = quot;\n            }\n\n            break;\n          }\n          case STATE_IGNORE_COMMENT: {\n            // if we're looping through a comment, fast-forward using\n            // indexOf to the first end-comment character\n            const endcomment = data.indexOf(\"-->\", pos);\n            if (endcomment !== -1) {\n              pos = endcomment + 2; // target the '>' character\n            }\n\n            break;\n          }\n          case STATE_IGNORE_CDATA: {\n            // if we're looping through a CDATA, fast-forward using\n            // indexOf to the first end-CDATA character ]]>\n            const endCDATA = data.indexOf(\"]]>\", pos);\n            if (endCDATA !== -1) {\n              pos = endCDATA + 2; // target the '>' character\n            }\n\n            break;\n          }\n          // No default\n        }\n\n        const c = data.charCodeAt(pos);\n        switch (state) {\n          case STATE_TEXT:\n            if (c === 60 /* < */) {\n              const text = endRecording();\n              if (text) {\n                this.emit(\"text\", escape.unescapeXML(text));\n              }\n              state = STATE_TAG_NAME;\n              recordStart = pos + 1;\n              attrs = {};\n            }\n            break;\n          case STATE_CDATA:\n            if (c === 93 /* ] */) {\n              if (data.substr(pos + 1, 2) === \"]>\") {\n                const cData = endRecording();\n                if (cData) {\n                  this.emit(\"text\", cData);\n                }\n                state = STATE_TEXT;\n              } else if (data.length < pos + 2) {\n                parseRemainder = true;\n                pos = data.length;\n              }\n            }\n            break;\n          case STATE_TAG_NAME:\n            if (c === 47 /* / */ && recordStart === pos) {\n              recordStart = pos + 1;\n              endTag = true;\n            } else if (c === 33 /* ! */) {\n              if (data.substr(pos + 1, 7) === \"[CDATA[\") {\n                recordStart = pos + 8;\n                state = STATE_CDATA;\n              } else if (\n                data.length < pos + 8 &&\n                \"[CDATA[\".startsWith(data.slice(pos + 1))\n              ) {\n                // We potentially have CDATA, but the chunk is ending; stop here and let the next write() decide\n                parseRemainder = true;\n                pos = data.length;\n              } else {\n                recordStart = undefined;\n                state = STATE_IGNORE_COMMENT;\n              }\n            } else if (c === 63 /* ? */) {\n              recordStart = undefined;\n              state = STATE_IGNORE_INSTRUCTION;\n            } else if (c <= 32 || c === 47 /* / */ || c === 62 /* > */) {\n              tagName = endRecording();\n              pos--;\n              state = STATE_TAG;\n            }\n            break;\n          case STATE_IGNORE_COMMENT:\n            if (c === 62 /* > */) {\n              const prevFirst = data.charCodeAt(pos - 1);\n              const prevSecond = data.charCodeAt(pos - 2);\n              if (\n                (prevFirst === 45 /* - */ && prevSecond === 45) /* - */ ||\n                (prevFirst === 93 /* ] */ && prevSecond === 93) /* ] */\n              ) {\n                state = STATE_TEXT;\n              }\n            }\n            break;\n          case STATE_IGNORE_INSTRUCTION:\n            if (c === 62 /* > */) {\n              const prev = data.charCodeAt(pos - 1);\n              if (prev === 63 /* ? */) {\n                state = STATE_TEXT;\n              }\n            }\n            break;\n          case STATE_TAG:\n            if (c === 62 /* > */) {\n              this._handleTagOpening(endTag, tagName, attrs);\n              tagName = undefined;\n              attrs = undefined;\n              endTag = undefined;\n              selfClosing = undefined;\n              state = STATE_TEXT;\n              recordStart = pos + 1;\n            } else if (c === 47 /* / */) {\n              selfClosing = true;\n            } else if (c > 32) {\n              recordStart = pos;\n              state = STATE_ATTR_NAME;\n            }\n            break;\n          case STATE_ATTR_NAME:\n            if (c <= 32 || c === 61 /* = */) {\n              attrName = endRecording();\n              pos--;\n              state = STATE_ATTR_EQ;\n            }\n            break;\n          case STATE_ATTR_EQ:\n            if (c === 61 /* = */) {\n              state = STATE_ATTR_QUOT;\n            }\n            break;\n          case STATE_ATTR_QUOT:\n            if (c === 34 /* \" */ || c === 39 /* ' */) {\n              attrQuote = c;\n              attrQuoteChar = c === 34 ? '\"' : \"'\";\n              state = STATE_ATTR_VALUE;\n              recordStart = pos + 1;\n            }\n            break;\n          case STATE_ATTR_VALUE:\n            if (c === attrQuote) {\n              const value = escape.unescapeXML(endRecording());\n              attrs[attrName] = value;\n              attrName = undefined;\n              state = STATE_TAG;\n            }\n            break;\n        }\n      }\n\n      if (typeof recordStart === \"number\" && recordStart <= data.length) {\n        remainder = data.slice(recordStart);\n        recordStart = 0;\n      }\n    };\n  }\n\n  end(data) {\n    if (data) {\n      this.write(data);\n    }\n\n    /* Uh, yeah */\n    this.write = function write() {};\n  }\n}\n\nmodule.exports = SaxLtx;\n","\"use strict\";\n\nconst Element = require(\"ltx/lib/Element.js\");\nconst createElement = require(\"ltx/lib/createElement.js\");\nconst Parser = require(\"./lib/Parser.js\");\nconst {\n  escapeXML,\n  unescapeXML,\n  escapeXMLText,\n  unescapeXMLText,\n} = require(\"ltx/lib/escape.js\");\nconst XMLError = require(\"./lib/XMLError.js\");\n\nfunction xml(...args) {\n  return createElement(...args);\n}\n\nmodule.exports = xml;\n\nObject.assign(module.exports, {\n  Element,\n  createElement,\n  Parser,\n  escapeXML,\n  unescapeXML,\n  escapeXMLText,\n  unescapeXMLText,\n  XMLError,\n});\n","'use strict';\n\nvar Element = require('./Element.js');\n\nfunction append(el, child) {\n  if (Array.isArray(child)) {\n    for (const c of child) append(el, c);\n    return;\n  }\n\n  if (child === \"\" || child == null || child === true || child === false) {\n    return;\n  }\n\n  el.cnode(child);\n}\n\n/**\n * JSX compatible API, use this function as pragma\n * https://facebook.github.io/jsx/\n *\n * @param  {string} name  name of the element\n * @param  {object} attrs object of attribute key/value pairs\n * @return {Element}      Element\n */\nfunction createElement(name, attrs, ...children) {\n  if (typeof attrs === \"object\" && attrs !== null) {\n    // __self and __source are added by babel in development\n    // https://github.com/facebook/react/pull/4596\n    // https://babeljs.io/docs/en/babel-preset-react#development\n    // https://babeljs.io/docs/en/babel-plugin-transform-react-jsx-source\n    delete attrs.__source;\n    delete attrs.__self;\n\n    for (const [key, value] of Object.entries(attrs)) {\n      if (value == null) delete attrs[key];\n      else attrs[key] = value.toString(10);\n    }\n  }\n\n  const el = new Element(name, attrs);\n\n  for (const child of children) {\n    append(el, child);\n  }\n\n  return el;\n}\n\nmodule.exports = createElement;\n","\"use strict\";\n\n// https://xmpp.org/rfcs/rfc6120.html#rfc.section.4.9.2\n\nclass XMPPError extends Error {\n  constructor(condition, text, application) {\n    super(condition + (text ? ` - ${text}` : \"\"));\n    this.name = \"XMPPError\";\n    this.condition = condition;\n    this.text = text;\n    this.application = application;\n  }\n\n  static fromElement(element) {\n    const [condition, second, third] = element.getChildElements();\n    let text;\n    let application;\n\n    if (second) {\n      if (second.is(\"text\")) {\n        text = second;\n      } else if (second) {\n        application = second;\n      }\n\n      if (third) application = third;\n    }\n\n    const error = new this(\n      condition.name,\n      text ? text.text() : \"\",\n      application,\n    );\n    error.element = element;\n    return error;\n  }\n}\n\nmodule.exports = XMPPError;\n","\"use strict\";\n\nconst { EventEmitter, promise } = require(\"@xmpp/events\");\nconst jid = require(\"@xmpp/jid\");\nconst xml = require(\"@xmpp/xml\");\nconst StreamError = require(\"./lib/StreamError\");\nconst { parseHost, parseService } = require(\"./lib/util\");\n\nconst NS_STREAM = \"urn:ietf:params:xml:ns:xmpp-streams\";\nconst NS_JABBER_STREAM = \"http://etherx.jabber.org/streams\";\n\nclass Connection extends EventEmitter {\n  constructor(options = {}) {\n    super();\n    this.jid = null;\n    this.timeout = 2000;\n    this.options = options;\n    this.socketListeners = Object.create(null);\n    this.parserListeners = Object.create(null);\n    this.status = \"offline\";\n    this.socket = null;\n    this.parser = null;\n    this.root = null;\n  }\n\n  _reset() {\n    this.jid = null;\n    this.status = \"offline\";\n    this._detachSocket();\n    this._detachParser();\n  }\n\n  async _streamError(condition, children) {\n    try {\n      await this.send(\n        // prettier-ignore\n        xml('stream:error', {}, [\n          xml(condition, {xmlns: NS_STREAM}, children),\n        ]),\n      );\n    } catch {}\n\n    return this._end();\n  }\n\n  _onData(data) {\n    const str = data.toString(\"utf8\");\n    this.emit(\"input\", str);\n    this.parser.write(str);\n  }\n\n  _onParserError(error) {\n    // https://xmpp.org/rfcs/rfc6120.html#streams-error-conditions-bad-format\n    // \"This error can be used instead of the more specific XML-related errors,\n    // such as <bad-namespace-prefix/>, <invalid-xml/>, <not-well-formed/>, <restricted-xml/>,\n    // and <unsupported-encoding/>. However, the more specific errors are RECOMMENDED.\"\n    this._streamError(\"bad-format\");\n    this._detachParser();\n    this.emit(\"error\", error);\n  }\n\n  _attachSocket(socket) {\n    this.socket = socket;\n    const listeners = this.socketListeners;\n\n    listeners.data = this._onData.bind(this);\n\n    listeners.close = (dirty, event) => {\n      this._reset();\n      this._status(\"disconnect\", { clean: !dirty, event });\n    };\n\n    listeners.connect = () => {\n      this._status(\"connect\");\n    };\n\n    listeners.error = (error) => {\n      this.emit(\"error\", error);\n    };\n\n    this.socket.on(\"close\", listeners.close);\n    this.socket.on(\"data\", listeners.data);\n    this.socket.on(\"error\", listeners.error);\n    this.socket.on(\"connect\", listeners.connect);\n  }\n\n  _detachSocket() {\n    const { socketListeners, socket } = this;\n    for (const k of Object.getOwnPropertyNames(socketListeners)) {\n      socket.removeListener(k, socketListeners[k]);\n      delete socketListeners[k];\n    }\n    this.socket = null;\n    return socket;\n  }\n\n  _onElement(element) {\n    const isStreamError = element.is(\"error\", NS_JABBER_STREAM);\n\n    if (isStreamError) {\n      this._onStreamError(element);\n    }\n\n    this.emit(\"element\", element);\n    this.emit(this.isStanza(element) ? \"stanza\" : \"nonza\", element);\n\n    if (isStreamError) {\n      // \"Stream Errors Are Unrecoverable\"\n      // \"The entity that receives the stream error then SHALL close the stream\"\n      this._end();\n    }\n  }\n\n  // https://xmpp.org/rfcs/rfc6120.html#streams-error\n  _onStreamError(element) {\n    const error = StreamError.fromElement(element);\n\n    if (error.condition === \"see-other-host\") {\n      return this._onSeeOtherHost(error);\n    }\n\n    this.emit(\"error\", error);\n  }\n\n  // https://xmpp.org/rfcs/rfc6120.html#streams-error-conditions-see-other-host\n  async _onSeeOtherHost(error) {\n    const { protocol } = parseService(this.options.service);\n\n    const host = error.element.getChildText(\"see-other-host\");\n    const { port } = parseHost(host);\n\n    let service;\n    service = port\n      ? `${protocol || \"xmpp:\"}//${host}`\n      : (protocol ? `${protocol}//` : \"\") + host;\n\n    try {\n      await promise(this, \"disconnect\");\n      const { domain, lang } = this.options;\n      await this.connect(service);\n      await this.open({ domain, lang });\n    } catch (err) {\n      this.emit(\"error\", err);\n    }\n  }\n\n  _attachParser(parser) {\n    this.parser = parser;\n    const listeners = this.parserListeners;\n\n    listeners.element = this._onElement.bind(this);\n    listeners.error = this._onParserError.bind(this);\n\n    listeners.end = (element) => {\n      this._detachParser();\n      this._status(\"close\", element);\n    };\n\n    listeners.start = (element) => {\n      this._status(\"open\", element);\n    };\n\n    this.parser.on(\"error\", listeners.error);\n    this.parser.on(\"element\", listeners.element);\n    this.parser.on(\"end\", listeners.end);\n    this.parser.on(\"start\", listeners.start);\n  }\n\n  _detachParser() {\n    const listeners = this.parserListeners;\n    for (const k of Object.getOwnPropertyNames(listeners)) {\n      this.parser.removeListener(k, listeners[k]);\n      delete listeners[k];\n    }\n    this.parser = null;\n  }\n\n  _jid(id) {\n    this.jid = jid(id);\n    return this.jid;\n  }\n\n  _status(status, ...args) {\n    this.status = status;\n    this.emit(\"status\", status, ...args);\n    this.emit(status, ...args);\n  }\n\n  async _end() {\n    let el;\n    try {\n      el = await this.close();\n    } catch {}\n\n    try {\n      await this.disconnect();\n    } catch {}\n\n    return el;\n  }\n\n  /**\n   * Opens the socket then opens the stream\n   */\n  async start() {\n    if (this.status !== \"offline\") {\n      throw new Error(\"Connection is not offline\");\n    }\n\n    const { service, domain, lang } = this.options;\n\n    await this.connect(service);\n\n    const promiseOnline = promise(this, \"online\");\n\n    await this.open({ domain, lang });\n\n    return promiseOnline;\n  }\n\n  /**\n   * Connects the socket\n   */\n  async connect(service) {\n    this._status(\"connecting\", service);\n    const socket = new this.Socket();\n    this._attachSocket(socket);\n    // The 'connect' status is set by the socket 'connect' listener\n    socket.connect(this.socketParameters(service));\n    return promise(socket, \"connect\");\n  }\n\n  /**\n   * Disconnects the socket\n   * https://xmpp.org/rfcs/rfc6120.html#streams-close\n   * https://tools.ietf.org/html/rfc7395#section-3.6\n   */\n  async disconnect(timeout = this.timeout) {\n    if (this.socket) this._status(\"disconnecting\");\n\n    this.socket.end();\n\n    // The 'disconnect' status is set by the socket 'close' listener\n    await promise(this.socket, \"close\", \"error\", timeout);\n  }\n\n  /**\n   * Opens the stream\n   */\n  async open(options) {\n    this._status(\"opening\");\n\n    if (typeof options === \"string\") {\n      options = { domain: options };\n    }\n\n    const { domain, lang, timeout = this.timeout } = options;\n\n    const headerElement = this.headerElement();\n    headerElement.attrs.to = domain;\n    headerElement.attrs[\"xml:lang\"] = lang;\n    this.root = headerElement;\n\n    this._attachParser(new this.Parser());\n\n    await this.write(this.header(headerElement));\n    return promise(this, \"open\", \"error\", timeout);\n  }\n\n  /**\n   * Closes the stream then closes the socket\n   * https://xmpp.org/rfcs/rfc6120.html#streams-close\n   * https://tools.ietf.org/html/rfc7395#section-3.6\n   */\n  async stop() {\n    const el = await this._end();\n    if (this.status !== \"offline\") this._status(\"offline\", el);\n    return el;\n  }\n\n  /**\n   * Closes the stream and wait for the server to close it\n   * https://xmpp.org/rfcs/rfc6120.html#streams-close\n   * https://tools.ietf.org/html/rfc7395#section-3.6\n   */\n  async close(timeout = this.timeout) {\n    const fragment = this.footer(this.footerElement());\n\n    const p = Promise.all([\n      promise(this.parser, \"end\", \"error\", timeout),\n      this.write(fragment),\n    ]);\n\n    if (this.parser && this.socket) this._status(\"closing\");\n    const [el] = await p;\n    this.root = null;\n    return el;\n    // The 'close' status is set by the parser 'end' listener\n  }\n\n  /**\n   * Restart the stream\n   * https://xmpp.org/rfcs/rfc6120.html#streams-negotiation-restart\n   */\n  async restart() {\n    this._detachParser();\n    const { domain, lang } = this.options;\n    return this.open({ domain, lang });\n  }\n\n  async send(element) {\n    element.parent = this.root;\n    await this.write(element.toString());\n    this.emit(\"send\", element);\n  }\n\n  sendReceive(element, timeout = this.timeout) {\n    return Promise.all([\n      this.send(element),\n      promise(this, \"element\", \"error\", timeout),\n    ]).then(([, el]) => el);\n  }\n\n  write(string) {\n    return new Promise((resolve, reject) => {\n      // https://xmpp.org/rfcs/rfc6120.html#streams-close\n      // \"Refrain from sending any further data over its outbound stream to the other entity\"\n      if (this.status === \"closing\") {\n        reject(new Error(\"Connection is closing\"));\n        return;\n      }\n\n      this.socket.write(string, (err) => {\n        if (err) {\n          return reject(err);\n        }\n\n        this.emit(\"output\", string);\n        resolve();\n      });\n    });\n  }\n\n  isStanza(element) {\n    const { name } = element;\n    return name === \"iq\" || name === \"message\" || name === \"presence\";\n  }\n\n  isNonza(element) {\n    return !this.isStanza(element);\n  }\n\n  // Override\n  header(el) {\n    return el.toString();\n  }\n\n  // Override\n  headerElement() {\n    return new xml.Element(\"\", {\n      version: \"1.0\",\n      xmlns: this.NS,\n    });\n  }\n\n  // Override\n  footer(el) {\n    return el.toString();\n  }\n\n  // Override\n  footerElement() {}\n\n  // Override\n  socketParameters() {}\n}\n\n// Overrirde\nConnection.prototype.NS = \"\";\nConnection.prototype.Socket = null;\nConnection.prototype.Parser = null;\n\nmodule.exports = Connection;\n","\"use strict\";\n\nconst XMPPError = require(\"@xmpp/error\");\n\n// https://xmpp.org/rfcs/rfc6120.html#streams-error\n\nclass StreamError extends XMPPError {\n  constructor(...args) {\n    super(...args);\n    this.name = \"StreamError\";\n  }\n}\n\nmodule.exports = StreamError;\n","\"use strict\";\n\nfunction parseURI(URI) {\n  let { port, hostname, protocol } = new URL(URI);\n  // https://github.com/nodejs/node/issues/12410#issuecomment-294138912\n  if (hostname === \"[::1]\") {\n    hostname = \"::1\";\n  }\n\n  return { port, hostname, protocol };\n}\n\nfunction parseHost(host) {\n  const { port, hostname } = parseURI(`http://${host}`);\n  return { port, hostname };\n}\n\nfunction parseService(service) {\n  return service.includes(\"://\") ? parseURI(service) : parseHost(service);\n}\n\nObject.assign(module.exports, { parseURI, parseHost, parseService });\n","\"use strict\";\n\nconst Client = require(\"./lib/Client\");\nconst xml = require(\"@xmpp/xml\");\nconst jid = require(\"@xmpp/jid\");\n\nmodule.exports.Client = Client;\nmodule.exports.xml = xml;\nmodule.exports.jid = jid;\n","\"use strict\";\n\nconst Connection = require(\"@xmpp/connection\");\n\nclass Client extends Connection {\n  constructor(options) {\n    super(options);\n    this.transports = [];\n  }\n\n  send(element, ...args) {\n    return this.Transport.prototype.send.call(this, element, ...args);\n  }\n\n  sendMany(...args) {\n    return this.Transport.prototype.sendMany.call(this, ...args);\n  }\n\n  _findTransport(service) {\n    return this.transports.find((Transport) => {\n      try {\n        return Transport.prototype.socketParameters(service) !== undefined;\n      } catch {\n        return false;\n      }\n    });\n  }\n\n  connect(service) {\n    const Transport = this._findTransport(service);\n\n    if (!Transport) {\n      throw new Error(\"No compatible connection method found.\");\n    }\n\n    this.Transport = Transport;\n    this.Socket = Transport.prototype.Socket;\n    this.Parser = Transport.prototype.Parser;\n\n    return super.connect(service);\n  }\n\n  socketParameters(...args) {\n    return this.Transport.prototype.socketParameters(...args);\n  }\n\n  header(...args) {\n    return this.Transport.prototype.header(...args);\n  }\n\n  headerElement(...args) {\n    return this.Transport.prototype.headerElement(...args);\n  }\n\n  footer(...args) {\n    return this.Transport.prototype.footer(...args);\n  }\n\n  footerElement(...args) {\n    return this.Transport.prototype.footerElement(...args);\n  }\n}\n\nClient.prototype.NS = \"jabber:client\";\n\nmodule.exports = Client;\n","\"use strict\";\n\nconst { EventEmitter } = require(\"@xmpp/events\");\n\nclass Reconnect extends EventEmitter {\n  constructor(entity) {\n    super();\n\n    this.delay = 1000;\n    this.entity = entity;\n    this._timeout = null;\n  }\n\n  scheduleReconnect() {\n    const { entity, delay, _timeout } = this;\n    clearTimeout(_timeout);\n    this._timeout = setTimeout(async () => {\n      if (entity.status !== \"disconnect\") {\n        return;\n      }\n\n      try {\n        await this.reconnect();\n      } catch {\n        // Ignoring the rejection is safe because the error is emitted on entity by #start\n      }\n    }, delay);\n  }\n\n  async reconnect() {\n    const { entity } = this;\n    this.emit(\"reconnecting\");\n\n    const { service, domain, lang } = entity.options;\n    await entity.connect(service);\n    await entity.open({ domain, lang });\n\n    this.emit(\"reconnected\");\n  }\n\n  start() {\n    const { entity } = this;\n    const listeners = {};\n    listeners.disconnect = () => {\n      this.scheduleReconnect();\n    };\n\n    this.listeners = listeners;\n    entity.on(\"disconnect\", listeners.disconnect);\n  }\n\n  stop() {\n    const { entity, listeners, _timeout } = this;\n    entity.removeListener(\"disconnect\", listeners.disconnect);\n    clearTimeout(_timeout);\n  }\n}\n\nmodule.exports = function reconnect({ entity }) {\n  const r = new Reconnect(entity);\n  r.start();\n  return r;\n};\n","\"use strict\";\n\nconst Socket = require(\"./Socket\");\nconst Connection = require(\"@xmpp/connection\");\nconst xml = require(\"@xmpp/xml\");\nconst FramedParser = require(\"./FramedParser\");\n\nconst NS_FRAMING = \"urn:ietf:params:xml:ns:xmpp-framing\";\n\n/* References\n * WebSocket protocol https://tools.ietf.org/html/rfc6455\n * WebSocket Web API https://html.spec.whatwg.org/multipage/comms.html#network\n * XMPP over WebSocket https://tools.ietf.org/html/rfc7395\n */\n\nclass ConnectionWebSocket extends Connection {\n  send(element, ...args) {\n    if (!element.attrs.xmlns && super.isStanza(element)) {\n      element.attrs.xmlns = \"jabber:client\";\n    }\n\n    return super.send(element, ...args);\n  }\n\n  async sendMany(elements) {\n    for (const element of elements) {\n      await this.send(element);\n    }\n  }\n\n  // https://tools.ietf.org/html/rfc7395#section-3.6\n  footerElement() {\n    return new xml.Element(\"close\", {\n      xmlns: NS_FRAMING,\n    });\n  }\n\n  // https://tools.ietf.org/html/rfc7395#section-3.4\n  headerElement() {\n    const el = super.headerElement();\n    el.name = \"open\";\n    el.attrs.xmlns = NS_FRAMING;\n    return el;\n  }\n\n  socketParameters(service) {\n    return /^wss?:\\/\\//.test(service) ? service : undefined;\n  }\n}\n\nConnectionWebSocket.prototype.Socket = Socket;\nConnectionWebSocket.prototype.NS = \"jabber:client\";\nConnectionWebSocket.prototype.Parser = FramedParser;\n\nmodule.exports = ConnectionWebSocket;\n","\"use strict\";\n\nconst WS = require(\"ws\");\n// eslint-disable-next-line n/no-unsupported-features/node-builtins\nconst WebSocket = globalThis.WebSocket || WS;\nconst EventEmitter = require(\"events\");\n\nconst CODE = \"ECONNERROR\";\n\nclass Socket extends EventEmitter {\n  constructor() {\n    super();\n    this.listeners = Object.create(null);\n  }\n\n  connect(url) {\n    this.url = url;\n    this._attachSocket(new WebSocket(url, [\"xmpp\"]));\n  }\n\n  _attachSocket(socket) {\n    this.socket = socket;\n    const { listeners } = this;\n    listeners.open = () => {\n      this.emit(\"connect\");\n    };\n\n    listeners.message = ({ data }) => this.emit(\"data\", data);\n    listeners.error = (event) => {\n      const { url } = this;\n      // WS\n      let { error } = event;\n      // DOM\n      if (!error) {\n        error = new Error(`WebSocket ${CODE} ${url}`);\n        error.errno = CODE;\n        error.code = CODE;\n      }\n\n      error.event = event;\n      error.url = url;\n      this.emit(\"error\", error);\n    };\n\n    listeners.close = (event) => {\n      this._detachSocket();\n      this.emit(\"close\", !event.wasClean, event);\n    };\n\n    this.socket.addEventListener(\"open\", listeners.open);\n    this.socket.addEventListener(\"message\", listeners.message);\n    this.socket.addEventListener(\"error\", listeners.error);\n    this.socket.addEventListener(\"close\", listeners.close);\n  }\n\n  _detachSocket() {\n    delete this.url;\n    const { socket, listeners } = this;\n    for (const k of Object.getOwnPropertyNames(listeners)) {\n      socket.removeEventListener(k, listeners[k]);\n      delete listeners[k];\n    }\n    delete this.socket;\n  }\n\n  end() {\n    this.socket.close();\n  }\n\n  write(data, fn) {\n    if (WebSocket === WS) {\n      this.socket.send(data, fn);\n    } else {\n      this.socket.send(data);\n      fn();\n    }\n  }\n}\n\nmodule.exports = Socket;\n","\"use strict\";\n\nconst { Parser, Element, XMLError } = require(\"@xmpp/xml\");\n\nmodule.exports = class FramedParser extends Parser {\n  onStartElement(name, attrs) {\n    const element = new Element(name, attrs);\n\n    const { cursor } = this;\n\n    if (cursor) {\n      cursor.append(element);\n    }\n\n    this.cursor = element;\n  }\n\n  onEndElement(name) {\n    const { cursor } = this;\n    if (name !== cursor.name) {\n      // <foo></bar>\n      this.emit(\"error\", new XMLError(`${cursor.name} must be closed.`));\n      return;\n    }\n\n    if (cursor.parent) {\n      this.cursor = cursor.parent;\n      return;\n    }\n\n    if (cursor.is(\"open\", \"urn:ietf:params:xml:ns:xmpp-framing\")) {\n      this.emit(\"start\", cursor);\n    } else if (cursor.is(\"close\", \"urn:ietf:params:xml:ns:xmpp-framing\")) {\n      this.emit(\"end\", cursor);\n    } else {\n      this.emit(\"element\", cursor);\n    }\n\n    this.cursor = null;\n  }\n};\n","\"use strict\";\n\nconst ConnectionWebSocket = require(\"./lib/Connection\");\n\nmodule.exports = function websocket({ entity }) {\n  entity.transports.push(ConnectionWebSocket);\n};\n","\"use strict\";\n\nmodule.exports = class Context {\n  constructor(entity, stanza) {\n    this.stanza = stanza;\n    this.entity = entity;\n\n    const { name, attrs } = stanza;\n    const { type, id } = attrs;\n\n    this.name = name;\n    this.id = id || \"\";\n\n    if (name === \"message\") {\n      this.type = type || \"normal\";\n    } else if (name === \"presence\") {\n      this.type = type || \"available\";\n    } else {\n      this.type = type || \"\";\n    }\n\n    this.from = null;\n    this.to = null;\n    this.local = \"\";\n    this.domain = \"\";\n    this.resource = \"\";\n  }\n};\n","\"use strict\";\n\nconst compose = require(\"koa-compose\");\n\nconst IncomingContext = require(\"./lib/IncomingContext\");\nconst OutgoingContext = require(\"./lib/OutgoingContext\");\n\nfunction listener(entity, middleware, Context) {\n  return (stanza) => {\n    const ctx = new Context(entity, stanza);\n    return compose(middleware)(ctx);\n  };\n}\n\nfunction errorHandler(entity) {\n  return (ctx, next) => {\n    next()\n      .then((reply) => reply && entity.send(reply))\n      .catch((err) => entity.emit(\"error\", err));\n  };\n}\n\nmodule.exports = function middleware({ entity }) {\n  const incoming = [errorHandler(entity)];\n  const outgoing = [];\n\n  const incomingListener = listener(entity, incoming, IncomingContext);\n  const outgoingListener = listener(entity, outgoing, OutgoingContext);\n\n  entity.on(\"element\", incomingListener);\n  entity.hookOutgoing = outgoingListener;\n\n  return {\n    use(fn) {\n      incoming.push(fn);\n      return fn;\n    },\n    filter(fn) {\n      outgoing.push(fn);\n      return fn;\n    },\n  };\n};\n","'use strict'\n\n/**\n * Expose compositor.\n */\n\nmodule.exports = compose\n\n/**\n * Compose `middleware` returning\n * a fully valid middleware comprised\n * of all those which are passed.\n *\n * @param {Array} middleware\n * @return {Function}\n * @api public\n */\n\nfunction compose (middleware) {\n  if (!Array.isArray(middleware)) throw new TypeError('Middleware stack must be an array!')\n  for (const fn of middleware) {\n    if (typeof fn !== 'function') throw new TypeError('Middleware must be composed of functions!')\n  }\n\n  /**\n   * @param {Object} context\n   * @return {Promise}\n   * @api public\n   */\n\n  return function (context, next) {\n    // last called middleware #\n    let index = -1\n    return dispatch(0)\n    function dispatch (i) {\n      if (i <= index) return Promise.reject(new Error('next() called multiple times'))\n      index = i\n      let fn = middleware[i]\n      if (i === middleware.length) fn = next\n      if (!fn) return Promise.resolve()\n      try {\n        return Promise.resolve(fn(context, dispatch.bind(null, i + 1)));\n      } catch (err) {\n        return Promise.reject(err)\n      }\n    }\n  }\n}\n","\"use strict\";\n\nconst Context = require(\"./Context\");\nconst JID = require(\"@xmpp/jid\");\n\nmodule.exports = class IncomingContext extends Context {\n  constructor(entity, stanza) {\n    super(entity, stanza);\n\n    const { jid, domain } = entity;\n\n    const to = stanza.attrs.to || (jid && jid.toString());\n    const from = stanza.attrs.from || domain;\n\n    if (to) this.to = new JID(to);\n\n    if (from) {\n      this.from = new JID(from);\n      this.local = this.from.local;\n      this.domain = this.from.domain;\n      this.resource = this.from.resource;\n    }\n  }\n};\n","\"use strict\";\n\nconst Context = require(\"./Context\");\nconst JID = require(\"@xmpp/jid\");\n\nmodule.exports = class OutgoingContext extends Context {\n  constructor(entity, stanza) {\n    super(entity, stanza);\n\n    const { jid, domain } = entity;\n\n    const from = stanza.attrs.from || (jid && jid.toString());\n    const to = stanza.attrs.to || domain;\n\n    if (from) this.from = new JID(from);\n\n    if (to) {\n      this.to = new JID(to);\n      this.local = this.to.local;\n      this.domain = this.to.domain;\n      this.resource = this.to.resource;\n    }\n  }\n};\n","\"use strict\";\n\nmodule.exports = function route() {\n  return async ({ stanza, entity }, next) => {\n    if (!stanza.is(\"features\", \"http://etherx.jabber.org/streams\"))\n      return next();\n\n    const prevent = await next();\n    if (!prevent && entity.jid) entity._status(\"online\", entity.jid);\n  };\n};\n","\"use strict\";\n\n/**\n * References\n * https://xmpp.org/rfcs/rfc6120.html#streams-negotiation Stream Negotiation\n * https://xmpp.org/extensions/xep-0170.html XEP-0170: Recommended Order of Stream Feature Negotiation\n * https://xmpp.org/registrar/stream-features.html XML Stream Features\n */\n\nconst route = require(\"./route\");\n\nmodule.exports = function streamFeatures({ middleware }) {\n  middleware.use(route());\n\n  function use(name, xmlns, handler) {\n    return middleware.use((ctx, next) => {\n      const { stanza } = ctx;\n      if (!stanza.is(\"features\", \"http://etherx.jabber.org/streams\"))\n        return next();\n      const feature = stanza.getChild(name, xmlns);\n      if (!feature) return next();\n      return handler(ctx, next, feature);\n    });\n  }\n\n  return {\n    use,\n  };\n};\n","\"use strict\";\n\nconst xid = require(\"@xmpp/id\");\nconst StanzaError = require(\"@xmpp/middleware/lib/StanzaError\");\nconst { Deferred } = require(\"@xmpp/events\");\nconst timeoutPromise = require(\"@xmpp/events\").timeout;\nconst xml = require(\"@xmpp/xml\");\n\nfunction isReply({ name, type }) {\n  if (name !== \"iq\") return false;\n  if (type !== \"error\" && type !== \"result\") return false;\n  return true;\n}\n\nclass IQCaller {\n  constructor({ entity, middleware }) {\n    this.handlers = new Map();\n    this.entity = entity;\n    this.middleware = middleware;\n  }\n\n  start() {\n    this.middleware.use(this._route.bind(this));\n  }\n\n  _route({ type, name, id, stanza }, next) {\n    if (!isReply({ name, type })) return next();\n\n    const deferred = this.handlers.get(id);\n\n    if (!deferred) {\n      return next();\n    }\n\n    if (type === \"error\") {\n      deferred.reject(StanzaError.fromElement(stanza.getChild(\"error\")));\n    } else {\n      deferred.resolve(stanza);\n    }\n\n    this.handlers.delete(id);\n  }\n\n  async request(stanza, timeout = 30 * 1000) {\n    if (!stanza.attrs.id) {\n      stanza.attrs.id = xid();\n    }\n\n    const deferred = new Deferred();\n    this.handlers.set(stanza.attrs.id, deferred);\n\n    try {\n      await this.entity.send(stanza);\n      await timeoutPromise(deferred.promise, timeout);\n    } catch (err) {\n      this.handlers.delete(stanza.attrs.id);\n      throw err;\n    }\n\n    return deferred.promise;\n  }\n\n  _childRequest(type, element, to, ...args) {\n    const {\n      name,\n      attrs: { xmlns },\n    } = element;\n    return this.request(xml(\"iq\", { type, to }, element), ...args).then(\n      (stanza) => stanza.getChild(name, xmlns),\n    );\n  }\n\n  async get(...args) {\n    return this._childRequest(\"get\", ...args);\n  }\n\n  async set(...args) {\n    return this._childRequest(\"set\", ...args);\n  }\n}\n\nmodule.exports = function iqCaller(...args) {\n  const iqCaller = new IQCaller(...args);\n  iqCaller.start();\n  return iqCaller;\n};\n","\"use strict\";\n\nmodule.exports = function id() {\n  let i;\n  while (!i) {\n    i = Math.random().toString(36).slice(2, 12);\n  }\n\n  return i;\n};\n","\"use strict\";\n\n/* https://xmpp.org/rfcs/rfc6120.html#stanzas-error */\n\nconst XMPPError = require(\"@xmpp/error\");\n\nclass StanzaError extends XMPPError {\n  constructor(condition, text, application, type) {\n    super(condition, text, application);\n    this.type = type;\n    this.name = \"StanzaError\";\n  }\n\n  static fromElement(element) {\n    const error = super.fromElement(element);\n    error.type = element.attrs.type;\n    return error;\n  }\n}\n\nmodule.exports = StanzaError;\n","\"use strict\";\n\n/**\n * References\n * https://xmpp.org/rfcs/rfc6120.html#stanzas-semantics-iq\n * https://xmpp.org/rfcs/rfc6120.html#stanzas-error\n */\n\nconst xml = require(\"@xmpp/xml\");\n\nconst NS_STANZA = \"urn:ietf:params:xml:ns:xmpp-stanzas\";\n\nfunction isQuery({ name, type }) {\n  if (name !== \"iq\") return false;\n  if (type === \"error\" || type === \"result\") return false;\n  return true;\n}\n\nfunction isValidQuery({ type }, children, child) {\n  if (type !== \"get\" && type !== \"set\") return false;\n  if (children.length !== 1) return false;\n  if (!child) return false;\n  return true;\n}\n\nfunction buildReply({ stanza }) {\n  return xml(\"iq\", {\n    to: stanza.attrs.from,\n    from: stanza.attrs.to,\n    id: stanza.attrs.id,\n  });\n}\n\nfunction buildReplyResult(ctx, child) {\n  const reply = buildReply(ctx);\n  reply.attrs.type = \"result\";\n  if (child) {\n    reply.append(child);\n  }\n\n  return reply;\n}\n\nfunction buildReplyError(ctx, error, child) {\n  const reply = buildReply(ctx);\n  reply.attrs.type = \"error\";\n  if (child) {\n    reply.append(child);\n  }\n\n  reply.append(error);\n  return reply;\n}\n\nfunction buildError(type, condition) {\n  return xml(\"error\", { type }, xml(condition, NS_STANZA));\n}\n\nfunction iqHandler(entity) {\n  return async function iqHandler(ctx, next) {\n    if (!isQuery(ctx)) return next();\n\n    const { stanza } = ctx;\n    const children = stanza.getChildElements();\n    const [child] = children;\n\n    if (!isValidQuery(ctx, children, child)) {\n      return buildReplyError(ctx, buildError(\"modify\", \"bad-request\"), child);\n    }\n\n    ctx.element = child;\n\n    let reply;\n    try {\n      reply = await next();\n    } catch (err) {\n      entity.emit(\"error\", err);\n      reply = buildError(\"cancel\", \"internal-server-error\");\n    }\n\n    if (!reply) {\n      reply = buildError(\"cancel\", \"service-unavailable\");\n    }\n\n    if (reply instanceof xml.Element && reply.is(\"error\")) {\n      return buildReplyError(ctx, reply, child);\n    }\n\n    return buildReplyResult(\n      ctx,\n      reply instanceof xml.Element ? reply : undefined,\n    );\n  };\n}\n\nfunction route(type, ns, name, handler) {\n  return (ctx, next) => {\n    if ((ctx.type !== type) | !ctx.element || !ctx.element.is(name, ns))\n      return next();\n    return handler(ctx, next);\n  };\n}\n\nmodule.exports = function iqCallee({ middleware, entity }) {\n  middleware.use(iqHandler(entity));\n\n  return {\n    get(ns, name, handler) {\n      middleware.use(route(\"get\", ns, name, handler));\n    },\n    set(ns, name, handler) {\n      middleware.use(route(\"set\", ns, name, handler));\n    },\n  };\n};\n","\"use strict\";\n\nconst Parser = require(\"./Parser\");\n\nmodule.exports = function parse(data) {\n  const p = new Parser();\n\n  let result = null;\n  let error = null;\n\n  p.on(\"start\", (el) => {\n    result = el;\n  });\n  p.on(\"element\", (el) => {\n    result.append(el);\n  });\n  p.on(\"error\", (err) => {\n    error = err;\n  });\n\n  p.write(data);\n  p.end();\n\n  if (error) {\n    throw error;\n  } else {\n    return result;\n  }\n};\n","\"use strict\";\n\n// eslint-disable-next-line n/no-unsupported-features/node-builtins\nconst fetch = globalThis.fetch || require(\"node-fetch\");\nconst parse = require(\"@xmpp/xml/lib/parse\");\nconst compareAltConnections = require(\"./alt-connections\").compare;\n\nfunction resolve(domain) {\n  return fetch(`https://${domain}/.well-known/host-meta`)\n    .then((res) => res.text())\n    .then((res) => {\n      return parse(res)\n        .getChildren(\"Link\")\n        .filter((link) =>\n          [\n            \"urn:xmpp:alt-connections:websocket\",\n            \"urn:xmpp:alt-connections:httppoll\",\n            \"urn:xmpp:alt-connections:xbosh\",\n          ].includes(link.attrs.rel),\n        )\n        .map(({ attrs }) => ({\n          rel: attrs.rel,\n          href: attrs.href,\n          method: attrs.rel.split(\":\").pop(),\n          uri: attrs.href,\n        }))\n        .sort(compareAltConnections);\n    })\n    .catch(() => {\n      return [];\n    });\n}\n\nmodule.exports.resolve = resolve;\n","\"use strict\";\n\nfunction isSecure(uri) {\n  return uri.startsWith(\"https\") || uri.startsWith(\"wss\");\n}\n\nmodule.exports.compare = function compare(a, b) {\n  let secure;\n  if (isSecure(a.uri) && !isSecure(b.uri)) {\n    secure = -1;\n  } else if (!isSecure(a.uri) && isSecure(b.uri)) {\n    secure = 1;\n  } else {\n    secure = 0;\n  }\n\n  if (secure !== 0) {\n    return secure;\n  }\n\n  let method;\n  if (a.method === b.method) {\n    method = 0;\n  } else if (a.method === \"websocket\") {\n    method = -1;\n  } else if (b.method === \"websocket\") {\n    method = 1;\n  } else if (a.method === \"xbosh\") {\n    method = -1;\n  } else if (b.method === \"xbosh\") {\n    method = 1;\n  } else if (a.method === \"httppoll\") {\n    method = -1;\n  } else if (b.method === \"httppoll\") {\n    method = 1;\n  } else {\n    method = 0;\n  }\n\n  if (method !== 0) {\n    return method;\n  }\n\n  return 0;\n};\n","\"use strict\";\n\nconst dns = require(\"./lib/dns\");\nconst http = require(\"./lib/http\");\n\nmodule.exports = function resolve(...args) {\n  return Promise.all([\n    dns.resolve ? dns.resolve(...args) : Promise.resolve([]),\n    http.resolve(...args),\n  ]).then(([records, endpoints]) => [...records, ...endpoints]);\n};\n\nif (dns.resolve) {\n  module.exports.dns = dns;\n}\n\nmodule.exports.http = http;\n","\"use strict\";\n\nconst resolve = require(\"./resolve\");\nconst { promise } = require(\"@xmpp/events\");\n\nasync function fetchURIs(domain) {\n  const result = await resolve(domain, {\n    srv: [\n      {\n        service: \"xmpps-client\",\n        protocol: \"tcp\",\n      },\n      {\n        service: \"xmpp-client\",\n        protocol: \"tcp\",\n      },\n    ],\n  });\n\n  return [\n    // Remove duplicates\n    ...new Set(result.map((record) => record.uri)),\n  ];\n}\n\nfunction filterSupportedURIs(entity, uris) {\n  return uris.filter((uri) => entity._findTransport(uri));\n}\n\nasync function fallbackConnect(entity, uris) {\n  if (uris.length === 0) {\n    throw new Error(\"Couldn't connect\");\n  }\n\n  const uri = uris.shift();\n  const Transport = entity._findTransport(uri);\n\n  if (!Transport) {\n    return fallbackConnect(entity, uris);\n  }\n\n  entity._status(\"connecting\", uri);\n  const params = Transport.prototype.socketParameters(uri);\n  const socket = new Transport.prototype.Socket();\n\n  try {\n    socket.connect(params);\n    await promise(socket, \"connect\");\n  } catch {\n    return fallbackConnect(entity, uris);\n  }\n\n  entity._attachSocket(socket);\n  socket.emit(\"connect\");\n  entity.Transport = Transport;\n  entity.Socket = Transport.prototype.Socket;\n  entity.Parser = Transport.prototype.Parser;\n}\n\nmodule.exports = function resolve({ entity }) {\n  const _connect = entity.connect;\n  entity.connect = async function connect(service) {\n    if (!service || /:\\/\\//.test(service)) {\n      return _connect.call(this, service);\n    }\n\n    const uris = filterSupportedURIs(entity, await fetchURIs(service));\n\n    if (uris.length === 0) {\n      throw new Error(\"No compatible transport found.\");\n    }\n\n    try {\n      await fallbackConnect(entity, uris);\n    } catch (err) {\n      entity._reset();\n      entity._status(\"disconnect\");\n      throw err;\n    }\n  };\n};\n","(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports,\n            module,\n            require('./lib/factory'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports',\n            'module',\n            './lib/factory'], factory);\n  }\n}(this, function(exports, module, Factory) {\n  \n  exports = module.exports = Factory;\n  exports.Factory = Factory;\n  \n}));\n","(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports, module);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports', 'module'], factory);\n  }\n}(this, function(exports, module) {\n  \n  /**\n   * `Factory` constructor.\n   *\n   * @api public\n   */\n  function Factory() {\n    this._mechs = [];\n  }\n  \n  /**\n   * Utilize the given `mech` with optional `name`, overridding the mechanism's\n   * default name.\n   *\n   * Examples:\n   *\n   *     factory.use(FooMechanism);\n   *\n   *     factory.use('XFOO', FooMechanism);\n   *\n   * @param {String|Mechanism} name\n   * @param {Mechanism} mech\n   * @return {Factory} for chaining\n   * @api public\n   */\n  Factory.prototype.use = function(name, mech) {\n    if (!mech) {\n      mech = name;\n      name = mech.prototype.name;\n    }\n    this._mechs.push({ name: name, mech: mech });\n    return this;\n  };\n  \n  /**\n   * Create a new mechanism from supported list of `mechs`.\n   *\n   * If no mechanisms are supported, returns `null`.\n   *\n   * Examples:\n   *\n   *     var mech = factory.create(['FOO', 'BAR']);\n   *\n   * @param {Array} mechs\n   * @return {Mechanism}\n   * @api public\n   */\n  Factory.prototype.create = function(mechs) {\n    for (var i = 0, len = this._mechs.length; i < len; i++) {\n      for (var j = 0, jlen = mechs.length; j < jlen; j++) {\n        var entry = this._mechs[i];\n        if (entry.name == mechs[j]) {\n          return new entry.mech();\n        }\n      }\n    }\n    return null;\n  };\n\n  exports = module.exports = Factory;\n  \n}));\n","\"use strict\";\n\nconst { encode, decode } = require(\"@xmpp/base64\");\nconst SASLError = require(\"./lib/SASLError\");\nconst xml = require(\"@xmpp/xml\");\nconst SASLFactory = require(\"saslmechanisms\");\n\n// https://xmpp.org/rfcs/rfc6120.html#sasl\n\nconst NS = \"urn:ietf:params:xml:ns:xmpp-sasl\";\n\nfunction getMechanismNames(features) {\n  return features\n    .getChild(\"mechanisms\", NS)\n    .getChildElements()\n    .map((el) => el.text());\n}\n\nasync function authenticate(SASL, entity, mechname, credentials) {\n  const mech = SASL.create([mechname]);\n  if (!mech) {\n    throw new Error(\"No compatible mechanism\");\n  }\n\n  const { domain } = entity.options;\n  const creds = {\n    username: null,\n    password: null,\n    server: domain,\n    host: domain,\n    realm: domain,\n    serviceType: \"xmpp\",\n    serviceName: domain,\n    ...credentials,\n  };\n\n  return new Promise((resolve, reject) => {\n    const handler = (element) => {\n      if (element.attrs.xmlns !== NS) {\n        return;\n      }\n\n      if (element.name === \"challenge\") {\n        console.log(element, typeof element);\n        mech.challenge(decode(element.text()));\n        const resp = mech.response(creds);\n        entity.send(\n          xml(\n            \"response\",\n            { xmlns: NS, mechanism: mech.name },\n            typeof resp === \"string\" ? encode(resp) : \"\",\n          ),\n        );\n        return;\n      }\n\n      if (element.name === \"failure\") {\n        reject(SASLError.fromElement(element));\n      } else if (element.name === \"success\") {\n        resolve();\n      }\n\n      entity.removeListener(\"nonza\", handler);\n    };\n\n    entity.on(\"nonza\", handler);\n\n    if (mech.clientFirst) {\n      entity.send(\n        xml(\n          \"auth\",\n          { xmlns: NS, mechanism: mech.name },\n          encode(mech.response(creds)),\n        ),\n      );\n    }\n  });\n}\n\nmodule.exports = function sasl({ streamFeatures }, credentials) {\n  const SASL = new SASLFactory();\n\n  streamFeatures.use(\"mechanisms\", NS, async ({ stanza, entity }) => {\n    const offered = getMechanismNames(stanza);\n    const supported = SASL._mechs.map(({ name }) => name);\n    // eslint-disable-next-line unicorn/prefer-array-find\n    const intersection = supported.filter((mech) => {\n      return offered.includes(mech);\n    });\n    let mech = intersection[0];\n\n    if (typeof credentials === \"function\") {\n      await credentials(\n        (creds) => authenticate(SASL, entity, mech, creds, stanza),\n        mech,\n      );\n    } else {\n      if (!credentials.username && !credentials.password) {\n        mech = \"ANONYMOUS\";\n      }\n\n      await authenticate(SASL, entity, mech, credentials, stanza);\n    }\n\n    await entity.restart();\n  });\n\n  return {\n    use(...args) {\n      return SASL.use(...args);\n    },\n  };\n};\n","/* eslint-disable n/no-unsupported-features/node-builtins */\n\"use strict\";\n\nmodule.exports.encode = function encode(string) {\n  return globalThis.btoa(string);\n};\n\nmodule.exports.decode = function decode(string) {\n  return globalThis.atob(string);\n};\n","\"use strict\";\n\nconst XMPPError = require(\"@xmpp/error\");\n\n// https://xmpp.org/rfcs/rfc6120.html#sasl-errors\n\nclass SASLError extends XMPPError {\n  constructor(...args) {\n    super(...args);\n    this.name = \"SASLError\";\n  }\n}\n\nmodule.exports = SASLError;\n","\"use strict\";\n\nconst xml = require(\"@xmpp/xml\");\n\n/*\n * References\n * https://xmpp.org/rfcs/rfc6120.html#bind\n */\n\nconst NS = \"urn:ietf:params:xml:ns:xmpp-bind\";\n\nfunction makeBindElement(resource) {\n  return xml(\"bind\", { xmlns: NS }, resource && xml(\"resource\", {}, resource));\n}\n\nasync function bind(entity, iqCaller, resource) {\n  const result = await iqCaller.set(makeBindElement(resource));\n  const jid = result.getChildText(\"jid\");\n  entity._jid(jid);\n  return jid;\n}\n\nfunction route({ iqCaller }, resource) {\n  return async ({ entity }, next) => {\n    await (typeof resource === \"function\"\n      ? resource((resource) => bind(entity, iqCaller, resource))\n      : bind(entity, iqCaller, resource));\n\n    next();\n  };\n}\n\nmodule.exports = function resourceBinding(\n  { streamFeatures, iqCaller },\n  resource,\n) {\n  streamFeatures.use(\"bind\", NS, route({ iqCaller }, resource));\n};\n","\"use strict\";\n\nconst xml = require(\"@xmpp/xml\");\n\n// https://tools.ietf.org/html/draft-cridland-xmpp-session-01\n\nconst NS = \"urn:ietf:params:xml:ns:xmpp-session\";\n\nmodule.exports = function sessionEstablishment({ iqCaller, streamFeatures }) {\n  streamFeatures.use(\"session\", NS, async (context, next, feature) => {\n    if (feature.getChild(\"optional\")) return next();\n    await iqCaller.set(xml(\"session\", NS));\n    return next();\n  });\n};\n","(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports,\n            module,\n            require('./lib/mechanism'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports',\n            'module',\n            './lib/mechanism'], factory);\n  }\n}(this, function(exports, module, Mechanism) {\n\n  exports = module.exports = Mechanism;\n  exports.Mechanism = Mechanism;\n  \n}));\n","(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports, module);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports', 'module'], factory);\n  }\n}(this, function(exports, module) {\n\n  /**\n   * ANONYMOUS `Mechanism` constructor.\n   *\n   * This class implements the ANONYMOUS SASL mechanism.\n   *\n   * The ANONYMOUS SASL mechanism provides support for permitting anonymous\n   * access to various services\n   *\n   * References:\n   *  - [RFC 4505](http://tools.ietf.org/html/rfc4505)\n   *\n   * @api public\n   */\n  function Mechanism() {\n  }\n  \n  Mechanism.prototype.name = 'ANONYMOUS';\n  Mechanism.prototype.clientFirst = true;\n  \n  /**\n   * Encode a response using optional trace information.\n   *\n   * Options:\n   *  - `trace`  trace information (optional)\n   *\n   * @param {Object} cred\n   * @api public\n   */\n  Mechanism.prototype.response = function(cred) {\n    return cred.trace || '';\n  };\n  \n  /**\n   * Decode a challenge issued by the server.\n   *\n   * @param {String} chal\n   * @api public\n   */\n  Mechanism.prototype.challenge = function(chal) {\n  };\n\n  exports = module.exports = Mechanism;\n  \n}));\n","\"use strict\";\n\n/**\n * [XEP-0175: Best Practices for Use of SASL ANONYMOUS](https://xmpp.org/extensions/xep-0175.html)\n * [RFC-4504: Anonymous Simple Authentication and Security Layer (SASL) Mechanism](https://tools.ietf.org/html/rfc4505)\n */\n\nconst mech = require(\"sasl-anonymous\");\n\nmodule.exports = function saslAnonymous(sasl) {\n  sasl.use(mech);\n};\n","(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports,\n            module,\n            require('./lib/mechanism'));\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports',\n            'module',\n            './lib/mechanism'], factory);\n  }\n}(this, function(exports, module, Mechanism) {\n\n  exports = module.exports = Mechanism;\n  exports.Mechanism = Mechanism;\n  \n}));\n","(function(root, factory) {\n  if (typeof exports === 'object') {\n    // CommonJS\n    factory(exports, module);\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(['exports', 'module'], factory);\n  }\n}(this, function(exports, module) {\n\n  /**\n   * PLAIN `Mechanism` constructor.\n   *\n   * This class implements the PLAIN SASL mechanism.\n   *\n   * The PLAIN SASL mechanism provides support for exchanging a clear-text\n   * username and password.  This mechanism should not be used without adequate\n   * security provided by an underlying transport layer. \n   *\n   * References:\n   *  - [RFC 4616](http://tools.ietf.org/html/rfc4616)\n   *\n   * @api public\n   */\n  function Mechanism() {\n  }\n  \n  Mechanism.prototype.name = 'PLAIN';\n  Mechanism.prototype.clientFirst = true;\n  \n  /**\n   * Encode a response using given credential.\n   *\n   * Options:\n   *  - `username`\n   *  - `password`\n   *  - `authzid`   authorization identity (optional)\n   *\n   * @param {Object} cred\n   * @api public\n   */\n  Mechanism.prototype.response = function(cred) {\n    var str = '';\n    str += cred.authzid || '';\n    str += '\\0';\n    str += cred.username;\n    str += '\\0';\n    str += cred.password;\n    return str;\n  };\n  \n  /**\n   * Decode a challenge issued by the server.\n   *\n   * @param {String} chal\n   * @return {Mechanism} for chaining\n   * @api public\n   */\n  Mechanism.prototype.challenge = function(chal) {\n    return this;\n  };\n\n  exports = module.exports = Mechanism;\n  \n}));\n","\"use strict\";\n\nconst mech = require(\"sasl-plain\");\n\nmodule.exports = function saslPlain(sasl) {\n  sasl.use(mech);\n};\n","import { Client as _Client, jid as _jid, xml as _xml } from '@xmpp/client-core';\nimport { Element } from '@xmpp/xml';\nimport _connection from '@xmpp/connection';\nimport _reconnect from '@xmpp/reconnect';\nimport _websocket from '@xmpp/websocket';\nimport _middleware from '@xmpp/middleware';\nimport _streamFeatures from '@xmpp/stream-features';\nimport _iqCaller from '@xmpp/iq/caller.js';\nimport _iqCallee from '@xmpp/iq/callee.js';\nimport _resolve from '@xmpp/resolve';\nimport _sasl from '@xmpp/sasl';\nimport _resourceBinding from '@xmpp/resource-binding';\nimport _sessionEstablishment from '@xmpp/session-establishment';\nimport anonymous from '@xmpp/sasl-anonymous';\nimport plain from '@xmpp/sasl-plain';\nimport Utils from '../Utils';\n\nexport interface Options extends _connection.Options {\n  resource?: _resourceBinding.Resource | undefined;\n  credentials?: _sasl.Credentials | undefined;\n  username?: string | undefined;\n  password?: string | undefined;\n}\n\nexport interface XMPPClient extends _Client {\n  entity: _Client;\n  reconnect: _reconnect.Reconnect<_Client>;\n  websocket: any;\n  middleware: _middleware.Middleware<_Client>;\n  streamFeatures: _streamFeatures.StreamFeatures<_Client>;\n  iqCaller: _iqCaller.IQCaller<_Client>;\n  iqCallee: _iqCallee.IQCallee<_Client>;\n  starttls: _middleware.Middleware<_Client>;\n  resolve: any;\n  sasl: _sasl.SASL;\n  resourceBinding: any;\n  sessionEstablishment: any;\n  mechanisms: { [x: string]: any }[];\n  options: Options;\n  sendOnline: (element: Element, ...args: unknown[]) => Promise<void>;\n}\n\nexport function xmppClient(options: Options): XMPPClient {\n  const { resource, credentials, username, password, ...params } = options;\n  const { domain, service } = params;\n\n  if (!domain && service) {\n    params.domain = (service.split('://')[1] || service).split(':')[0].split('/')[0];\n  }\n\n  const entity = new _Client(params);\n  const reconnect = _reconnect({ entity });\n  const websocket = _websocket({ entity });\n  const middleware = _middleware({ entity });\n  const streamFeatures = _streamFeatures({ middleware });\n  const iqCaller = _iqCaller({ middleware, entity });\n  const iqCallee = _iqCallee({ middleware, entity });\n  const starttls = _middleware({ entity });\n  const resolve = _resolve({ entity });\n  const sasl = _sasl({ streamFeatures }, credentials || { username, password });\n  const resourceBinding = _resourceBinding({ iqCaller, streamFeatures }, resource);\n  const sessionEstablishment = _sessionEstablishment({ iqCaller, streamFeatures });\n  const mechanisms = Object.entries({ plain, anonymous }).map(([k, v]) => ({\n    [k]: v(sasl),\n  }));\n\n  const sendOnline = function (element: Element, ...args: unknown[]): Promise<void> {\n    if (entity.status === 'online') {\n      return entity.send.call(entity, element, ...args);\n    } else {\n      const message = \"You are not connected to chat. Please call 'connect' function first\";\n      Utils.DLog('[Chat][Error]', message);\n      return Promise.reject(new Error(message));\n    }\n  };\n\n  return Object.assign(entity, {\n    entity,\n    reconnect,\n    websocket,\n    middleware,\n    streamFeatures,\n    iqCaller,\n    iqCallee,\n    starttls,\n    resolve,\n    sasl,\n    resourceBinding,\n    sessionEstablishment,\n    mechanisms,\n    sendOnline,\n  });\n}\n\nexport const jid: typeof _jid = _jid;\nexport const xml: typeof _xml = _xml;\n","import ProxyService from '../Proxy';\nimport Utils from '../Utils';\nimport config from '../config';\nimport { Dialogs, EmptyResponse, ForceParams, ProxyMethod, ProxyType } from '../types';\n\nexport default class DialogsService {\n  public proxy: ProxyService;\n  readonly route = `${config.urls.chat}/Dialog`;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async list(params: Dialogs.ListParams = {}): Promise<Dialogs.ListResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async create(params: Dialogs.CreateParams): Promise<Dialogs.Dialog> {\n    const data = Utils.cloneObject(params);\n\n    if (Utils.isArray(data?.occupants_ids)) {\n      data.occupants_ids = data.occupants_ids.join(', ');\n    }\n\n    if (Utils.isArray(data?.admins_ids)) {\n      data.admins_ids = data.admins_ids.join(', ');\n    }\n\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: data,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(id: string, params: Dialogs.UpdateParams = {}): Promise<Dialogs.Dialog> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, id),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(\n    idOrIds: string | string[],\n    params: ForceParams = {}\n  ): Promise<Dialogs.DeleteResponse | EmptyResponse> {\n    const idsToDelete = typeof idOrIds === 'string' ? idOrIds.split(',').map((id) => id.trim()) : idOrIds;\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, idsToDelete.toString()),\n      dataType: idsToDelete.length === 1 ? ProxyType.TEXT : ProxyType.JSON,\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async addAdmins(id: string, admins_ids: number[]): Promise<Dialogs.Dialog> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, id, 'admins'),\n      data: { push_all: { admins_ids } },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async removeAdmins(id: string, admins_ids: number[]): Promise<Dialogs.Dialog> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, id, 'admins'),\n      data: { pull_all: { admins_ids } },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async subscribe(id: string): Promise<Dialogs.Dialog> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route, id, 'subscribe'),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public subscribeToPublic = this.subscribe;\n\n  public async unsubscribe(id: string): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, id, 'subscribe'),\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public unsubscribeFromPublic = this.unsubscribe;\n\n  public async updateNotificationsSettings(\n    id: string,\n    enabled: number | boolean\n  ): Promise<Dialogs.UpdateNotificationsSettingsResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, id, 'notifications'),\n      data: { enabled: enabled ? 1 : 0 },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getNotificationsSettings(id: string): Promise<Dialogs.GetNotificationsSettingsResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, id, 'notifications'),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getPublicOccupants(\n    id: string,\n    params: Dialogs.GetPublicOccupantsParams = {}\n  ): Promise<Dialogs.GetPublicOccupantsResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, id, 'occupants'),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async clearHistory(id: string): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, 'clearHistory', id),\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import ProxyService from '../Proxy';\nimport Utils from '../Utils';\nimport config from '../config';\nimport { EmptyResponse, ForceParams, Messages, ProxyMethod, ProxyType } from '../types';\nexport default class MessagesService {\n  public proxy: ProxyService;\n  readonly route = `${config.urls.chat}/Message`;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async list(params: Messages.ListParams = {}): Promise<Messages.ListResponse> {\n    const ajaxParams = {\n      url: Utils.getUrl(this.route),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async create(params: Messages.CreateParams = {}): Promise<Messages.Message> {\n    const ajaxParams = {\n      url: Utils.getUrl(this.route),\n      type: ProxyMethod.POST,\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(id: string, params: Messages.UpdateParams = {}): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      dataType: ProxyType.TEXT,\n      url: Utils.getUrl(this.route, id),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(id: string, params?: ForceParams): Promise<Messages.DeleteResponse> {\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, id),\n      type: ProxyMethod.DELETE,\n      dataType: ProxyType.TEXT,\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async createSystem(params: Messages.CreateSystemParams): Promise<Messages.CreateSystemResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route, 'system'),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async unreadCount(params: Messages.UnreadCountParams = {}): Promise<Messages.UnreadCountResponse> {\n    const data = Utils.cloneObject(params);\n\n    if (data && data.chat_dialog_ids && Utils.isArray(data.chat_dialog_ids)) {\n      data.chat_dialog_ids = data.chat_dialog_ids.join(', ');\n    }\n\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, 'unread'),\n      data: data,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async listReactions(id: string = '_'): Promise<Messages.ListReactionsResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      dataType: ProxyType.JSON,\n      url: Utils.getUrl(this.route, id, 'reactions'),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async addReaction(id: string, reaction: string): Promise<EmptyResponse> {\n    return this.updateReaction(id, reaction);\n  }\n\n  public async removeReaction(id: string, reaction: string): Promise<EmptyResponse> {\n    return this.updateReaction(id, undefined, reaction);\n  }\n\n  public async updateReaction(id: string, add?: string, remove?: string): Promise<EmptyResponse> {\n    return this.putReaction(id, { add, remove });\n  }\n\n  private async putReaction(id: string, params: Messages.PutReactionParams): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      dataType: ProxyType.TEXT,\n      url: Utils.getUrl(this.route, id, 'reactions'),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import config from '../config';\nimport { xml } from './xmpp';\nimport { Chat } from '../types';\n\nexport default class ChatUtils {\n  static buildUserJid(params: Chat.UserJIDParams = {}): string | void {\n    const { userId, resource, jid } = params;\n    const appId = config.creds.appId;\n    const url = config.endpoints.chat;\n\n    return userId ? `${userId}-${appId}@${url}${resource ? `/${resource}` : ''}` : jid;\n  }\n\n  static buildUserJidLocalPart(userId: string | number): string {\n    return `${userId}-${config.creds.appId}`;\n  }\n\n  static createMessageStanza(attrs?: string | { [attrName: string]: any }): Chat.XmlElement {\n    return xml('message', attrs);\n  }\n\n  static createIqStanza(attrs?: string | { [attrName: string]: any }): Chat.XmlElement {\n    return xml('iq', attrs);\n  }\n\n  static createPresenceStanza(attrs?: string | { [attrName: string]: any }): Chat.XmlElement {\n    return xml('presence', attrs);\n  }\n\n  static createNonza(name: string, attrs?: string | { [attrName: string]: any }): Chat.XmlElement {\n    return xml(name, attrs);\n  }\n\n  static getAttr(element: Chat.XmlElement, name: string): any {\n    return element?.getAttr(name) || element?.attrs[name] || null;\n  }\n\n  static getElement(element: Chat.XmlElement, name: string): Chat.XmlElement | undefined {\n    return element?.getChild(name);\n  }\n\n  static getName(element: Chat.XmlElement): string | null {\n    return element?.getName() || null;\n  }\n\n  static getText(element: Chat.XmlElement): string | null {\n    return element?.getText() || null;\n  }\n\n  static getChildElements(element: Chat.XmlElement): Chat.XmlElement[] {\n    return element?.getChildElements() || [];\n  }\n\n  static isErrorStanza(element: Chat.XmlElement): boolean {\n    return !!element?.getChild('error');\n  }\n\n  static getAllElements(element: Chat.XmlElement, name: string): Chat.XmlElement[] {\n    return element?.getChildren(name) || [];\n  }\n\n  static getElementText(element: Chat.XmlElement, name: string): string | null {\n    return element?.getChildText(name) || null;\n  }\n\n  static getElementTreePath(element: Chat.XmlElement, elementsPath: string[]): Chat.XmlElement | undefined {\n    return elementsPath.reduce<Chat.XmlElement | undefined>(\n      (prevElement: Chat.XmlElement | undefined, name: string) =>\n        prevElement ? ChatUtils.getElement(prevElement, name) : undefined,\n      element as Chat.XmlElement\n    );\n  }\n\n  static assignObjectToXml(element: Chat.XmlElement, obj: { [key: string]: any }, name: string): Chat.XmlElement {\n    element = element.c(name);\n\n    Object.keys(obj).forEach((key: string) => {\n      if (typeof obj[key] === 'object') {\n        ChatUtils.assignObjectToXml(element, obj[key], key);\n      } else {\n        element = element.c(key).t(obj[key]).up();\n      }\n    });\n\n    element = element.up();\n\n    return element;\n  }\n\n  static assignExtraParamsToXml(element: Chat.XmlElement, extension: { [key: string]: any }): Chat.XmlElement {\n    let extraParams = ChatUtils.getElement(element, 'extraParams');\n\n    Object.keys(extension).forEach((key) => {\n      if (key === 'attachments') {\n        (extension[key] as any[]).forEach((attachment: any) => {\n          extraParams!.c('attachment', attachment).up();\n        });\n      } else if (typeof extension[key] === 'object') {\n        ChatUtils.assignObjectToXml(extraParams!, extension[key], key);\n      } else {\n        extraParams!.c(key).t(extension[key]).up();\n      }\n    });\n\n    element.up();\n\n    return element;\n  }\n\n  static assignXmlToObject(element: Chat.XmlElement, obj: any): any {\n    const { children, name } = element;\n    const item: { [key: string]: any } = { [name]: {} };\n\n    children.forEach((node: Chat.XmlNode) => {\n      if (typeof node === 'string') {\n        item[name] = node;\n      } else if (node.children.length > 0) {\n        ChatUtils.assignXmlToObject(node, item[name]);\n      } else {\n        item[name][node.name] = ChatUtils.getText(node);\n      }\n    });\n\n    return Object.assign(obj, item);\n  }\n\n  static parseExtraParams(element: Chat.XmlElement): { extension: any; dialogId: string | null } | null {\n    if (!element) {\n      return null;\n    }\n\n    const extension: any = { attachments: [] };\n    let dialogId: string | null = null;\n\n    element.children.forEach((node: Chat.XmlNode) => {\n      if (typeof node === 'string') {\n        return;\n      }\n\n      if (node.name === 'attachment') {\n        const attachment: any = {};\n\n        Object.keys(node.attrs).forEach((key: string) => {\n          attachment[key] = key === 'size' ? parseInt(node.attrs.size) : node.attrs[key];\n        });\n\n        extension.attachments.push(attachment);\n      } else if (node.name === 'dialog_id') {\n        dialogId = ChatUtils.getElementText(element, 'dialog_id');\n        extension.dialog_id = dialogId;\n      }\n\n      if (node.children.length) {\n        ChatUtils.assignXmlToObject(node, extension);\n      }\n    });\n\n    if (extension.attachments.length === 0) {\n      delete extension.attachments;\n    }\n    if (extension.moduleIdentifier) {\n      delete extension.moduleIdentifier;\n    }\n\n    return { extension, dialogId };\n  }\n\n  static buildErrorFromXMPPErrorStanza(errorStanza: Chat.XmlElement): { code: number; info: string | null } {\n    const errorElement = ChatUtils.getElement(errorStanza, 'error');\n    const code = errorElement ? parseInt(ChatUtils.getAttr(errorElement, 'code')) : 0;\n    const info = errorElement ? ChatUtils.getElementText(errorElement, 'text') : null;\n    return { code: code, info: info };\n  }\n\n  static getUniqueId(suffix?: any): string {\n    const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c == 'x' ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n\n    if (typeof suffix === 'string' || typeof suffix === 'number') {\n      return `${uuid}:${suffix}`;\n    } else {\n      return uuid;\n    }\n  }\n\n  static parseReactions(element: Chat.XmlElement): { add: string; remove: string } {\n    const reactions = ChatUtils.getChildElements(element).map((node: Chat.XmlElement) => ({\n      add: ChatUtils.getAttr(node, 'add') === 'true',\n      remove: ChatUtils.getAttr(node, 'remove') === 'true',\n      reaction: ChatUtils.getAttr(node, 'type'),\n    }));\n\n    return reactions.reduce((items, { add, remove, reaction }) => {\n      if (add) {\n        items['add'] = reaction;\n      } else if (remove) {\n        items['remove'] = reaction;\n      }\n      return items;\n    }, {} as { add: string; remove: string });\n  }\n}\n","import Utils from '../Utils';\nimport config from '../config';\nimport ChatUtils from './ChatUtils';\n\nexport default class ChatHelpers {\n  public xmppJID: string = '';\n\n  public get userCurrentJid(): string | '' {\n    return this.xmppJID;\n  }\n\n  public set userCurrentJid(jid: string | null) {\n    this.xmppJID = jid || '';\n  }\n\n  public getUniqueId = ChatUtils.getUniqueId;\n\n  public isNumeric(value: string): boolean {\n    return /^-?\\d+$/.test(value) || /^\\d+\\.\\d+$/.test(value);\n  }\n\n  public jidOrUserId(jidOrUserId: string | number): string {\n    if (typeof jidOrUserId === 'string') {\n      return this.isNumeric(jidOrUserId)\n        ? this.getUserJid(jidOrUserId)\n        : jidOrUserId.includes('@')\n          ? jidOrUserId\n          : this.getRoomJidFromDialogId(jidOrUserId);\n    }\n\n    return this.getUserJid(jidOrUserId);\n  }\n\n  public typeChat(jidOrUserId: string | number): 'chat' | 'groupchat' {\n    switch (typeof jidOrUserId) {\n      case 'string':\n        return this.isNumeric(jidOrUserId)\n          ? 'chat'\n          : jidOrUserId.includes('@')\n            ? jidOrUserId.includes('muc')\n              ? 'groupchat'\n              : 'chat'\n            : 'groupchat';\n      case 'number':\n        return 'chat';\n      default:\n        throw new Error('Unsupported chat type');\n    }\n  }\n\n  public getUserJid(userId: string | number): string {\n    return `${userId}-${config.creds.appId}@${config.endpoints.chat}`;\n  }\n\n  public getUserNickWithMucDomain(userId: string | number): string {\n    return `${config.endpoints.muc}/${userId}`;\n  }\n\n  public getUserIdFromJID(jid: string = this.userCurrentJid): number | null {\n    return jid?.includes('@') ? parseInt(jid.split('@')[0].split('-')[0]) : null;\n  }\n\n  public getDialogIdFromJID(jid: string): string | null {\n    return jid?.includes('@') ? jid.split('@')[0].split('_')[1] : null;\n  }\n\n  public getRoomJidFromDialogId(dialogId: string): string {\n    return `${config.creds.appId}_${dialogId}@${config.endpoints.muc}`;\n  }\n\n  public getRoomJid(jid: string): string {\n    return `${jid}/${this.getUserIdFromJID(this.userCurrentJid)}`;\n  }\n\n  public getIdFromResource(jid: string): number | null {\n    const parts = jid.split('/');\n    return parts.length > 1 ? parseInt(parts.slice(1).join('/')) : null;\n  }\n\n  public getRoomJidFromRoomFullJid(jid: string): string | null {\n    const parts = jid.split('/');\n    return parts.length > 1 ? parts[0] : null;\n  }\n\n  public getBsonObjectId = Utils.getBsonObjectId;\n\n  public getUserIdFromRoomJid(roomJid: string): number | null {\n    const parts = roomJid.split('/');\n    return parts.length > 1 ? parseInt(parts[parts.length - 1]) : null;\n  }\n\n  getDialogJid(identifier: string): string {\n    return identifier.indexOf('@') > 0 ? identifier : this.getRoomJidFromDialogId(identifier);\n  }\n}\n","import { Chat, ChatProtocol, ChatType } from '../types';\nimport config from '../config';\nimport ChatService from './Chat';\nimport ChatUtils from './ChatUtils';\nimport Utils from '../Utils';\n\nenum NonzaName {\n  ENABLE = 'enable',\n  ENABLED = 'enabled',\n  REQUEST = 'r',\n  ANSWER = 'a',\n}\n\nexport default class StreamManagement {\n  readonly xmlns = 'urn:xmpp:sm:3';\n\n  private enabled: boolean = false;\n  private clientHandledCounter: number = 0;\n  private serverHandledCounter: number = 0;\n  private messagesQueue: Set<Chat.MessageParams> = new Set();\n  private messagesQueueClearTimer?: NodeJS.Timeout;\n\n  constructor(private chat: ChatService) {}\n\n  public get supported(): boolean {\n    return config.chatProtocol.active === ChatProtocol.WS && config.chat.streamManagement?.enable;\n  }\n\n  public start(): void {\n    this.enabled = false;\n\n    if (this.supported) {\n      this.removeElementHandler();\n      this.addElementHandler();\n      this.sendNonza(NonzaName.ENABLE);\n    }\n  }\n\n  public stop(): void {\n    this.enabled = false;\n\n    if (this.supported) {\n      this.removeElementHandler();\n      this.markMessagesQueueAsLost();\n    }\n  }\n\n  public async sendAndCount(stanza: Chat.XmlElement, message: Chat.MessageParams): Promise<void> {\n    const type = ChatUtils.getAttr(stanza, 'type');\n    const body = ChatUtils.getElementText(stanza, 'body');\n    const attachments = ChatUtils.getAllElements(stanza, 'attachment');\n    const isMessage = stanza.name === 'message';\n    const isChat = type === ChatType.CHAT || type === ChatType.GROUPCHAT;\n    const isContent = Boolean(body || attachments.length);\n\n    try {\n      await this.chat.xmppClient.sendOnline(stanza);\n\n      if (this.enabled && isMessage && isChat && isContent) {\n        this.messagesQueue.add(message);\n        this.sendNonza(NonzaName.REQUEST);\n      }\n    } catch {\n      this.markMessageAsLost(message);\n    }\n  }\n\n  private elementHandler = (stanza: Chat.XmlElement): void => {\n    const [name, xmlns] = [stanza.name, ChatUtils.getAttr(stanza, 'xmlns')];\n\n    if (xmlns === this.xmlns && name === NonzaName.ENABLED) {\n      this.clientHandledCounter = 0;\n      this.serverHandledCounter = 0;\n      this.enabled = true;\n      return;\n    }\n\n    if (xmlns !== this.xmlns) this.clientHandledCounter++;\n\n    if (name === NonzaName.REQUEST) {\n      this.sendNonza(NonzaName.ANSWER);\n      return;\n    }\n\n    if (name === NonzaName.ANSWER) {\n      const nextHandledCounter = parseInt(ChatUtils.getAttr(stanza, 'h'), 10);\n      const currHandledCounter = Number.isNaN(nextHandledCounter) ? this.serverHandledCounter : nextHandledCounter;\n      const diffHandledCounter = currHandledCounter - this.serverHandledCounter;\n\n      this.serverHandledCounter = currHandledCounter;\n      this.markMessagesQueueAsSent(diffHandledCounter);\n      this.markMessagesQueueAsLostByTimeout();\n    }\n  };\n\n  private markMessageAsSent(message: Chat.MessageParams): void {\n    Utils.safeCallbackCall(this.chat.onSentMessageCallback)(null, message);\n    this.messagesQueue.delete(message);\n  }\n\n  private markMessageAsLost(message: Chat.MessageParams, clear: boolean = true): void {\n    Utils.safeCallbackCall(this.chat.onSentMessageCallback)(message, null);\n    if (clear) this.messagesQueue.delete(message);\n  }\n\n  private markMessagesQueueAsSent(iterations: number = 0): void {\n    const iterator = this.messagesQueue.values();\n\n    for (let i = 0; i < iterations; i++) {\n      const { done, value } = iterator.next();\n      if (done) break;\n      this.markMessageAsSent(value);\n    }\n  }\n\n  private markMessagesQueueAsLost(): void {\n    clearTimeout(this.messagesQueueClearTimer);\n    this.messagesQueueClearTimer = undefined;\n\n    if (this.messagesQueue.size > 0) {\n      this.messagesQueue.forEach((message) => {\n        this.markMessageAsLost(message, false);\n      });\n      this.messagesQueue.clear();\n    }\n  }\n\n  private markMessagesQueueAsLostByTimeout(): void {\n    const ackTimeout = (config.chat.streamManagement?.acknowledgementTimeout ?? 30) * 1000;\n\n    clearTimeout(this.messagesQueueClearTimer);\n    this.messagesQueueClearTimer = setTimeout(() => {\n      this.markMessagesQueueAsLost();\n    }, ackTimeout);\n  }\n\n  private sendNonza(name: string): Promise<void> {\n    const attrs = { xmlns: this.xmlns, ...(name === NonzaName.ANSWER && { h: this.clientHandledCounter }) };\n    const nonza = ChatUtils.createNonza(name, attrs);\n\n    return this.chat.xmppClient.sendOnline(nonza);\n  }\n\n  private removeElementHandler(): void {\n    this.chat.xmppClient.removeListener('element', this.elementHandler);\n  }\n\n  private addElementHandler(): void {\n    this.chat.xmppClient.on('element', this.elementHandler);\n  }\n}\n","import ChatUtils from './ChatUtils';\nimport ChatHelpers from './Helpers';\nimport { XMPPClient } from './xmpp';\nimport { Chat, PrivacyListAction } from '../types';\n\nexport default class PrivacyList {\n  readonly xmlns = 'jabber:iq:privacy';\n  public helpers: ChatHelpers;\n  public xmppClient: XMPPClient;\n  public stanzasCallbacks: Chat.StanzasCallbacks;\n\n  constructor(options: { helpers: ChatHelpers; xmppClient: XMPPClient; stanzasCallbacks: Chat.StanzasCallbacks }) {\n    this.helpers = options.helpers;\n    this.xmppClient = options.xmppClient;\n    this.stanzasCallbacks = options.stanzasCallbacks;\n  }\n\n  public async create(list: Chat.PrivacyList): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const privacyList = list.items.reduce((acc, { user_id, action, mutualBlock }) => {\n        acc[user_id] = { action, mutualBlock };\n        return acc;\n      }, {} as Record<string, Partial<Chat.PrivacyListItem>>);\n\n      const privacyListKeys = Object.keys(privacyList);\n      const iqParams = {\n        type: 'set',\n        from: this.helpers.userCurrentJid,\n        id: ChatUtils.getUniqueId('edit'),\n      };\n\n      let iq = ChatUtils.createIqStanza(iqParams);\n\n      iq.c('query', { xmlns: this.xmlns }).c('list', { name: list.name });\n\n      for (let index = 0, j = 0, len = privacyListKeys.length; index < len; index++, j = j + 2) {\n        const userId = privacyListKeys[index];\n        const { action, mutualBlock } = privacyList[userId];\n        const isMutual = (mutualBlock && action === 'deny') ?? false;\n        const userJid = this.helpers.jidOrUserId(parseInt(userId, 10));\n        const userMuc = this.helpers.getUserNickWithMucDomain(userId);\n\n        this.assignPrivacyItem(iq, { order: j + 1, value: userJid, action, isMutual });\n        this.assignPrivacyItem(iq, { order: j + 2, value: userMuc, action, isMutual });\n      }\n\n      this.stanzasCallbacks[iqParams.id] = (stanza: Chat.XmlElement) => {\n        ChatUtils.isErrorStanza(stanza) ? reject(ChatUtils.buildErrorFromXMPPErrorStanza(stanza)) : resolve();\n      };\n\n      this.xmppClient.sendOnline(iq);\n    });\n  }\n\n  public async getList(name: string): Promise<Chat.PrivacyList> {\n    return new Promise((resolve, _reject) => {\n      const id = ChatUtils.getUniqueId('getlist');\n      const iq = ChatUtils.createIqStanza({\n        type: 'get',\n        from: this.helpers.userCurrentJid,\n        id,\n      });\n\n      iq.c('query', { xmlns: this.xmlns }).c('list', { name });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement): void => {\n        const query = ChatUtils.getElement(stanza, 'query');\n        const list = ChatUtils.getElement(query, 'list');\n        const privacyList: Chat.PrivacyList = {\n          name: ChatUtils.getAttr(list, 'name'),\n          items: ChatUtils.getChildElements(list)\n            .map((item, index) => {\n              if (index % 2 === 0) {\n                const { action, value } = item.attrs;\n                return {\n                  user_id: this.helpers.getUserIdFromJID(value),\n                  action: action,\n                } as Chat.PrivacyListItem;\n              }\n              return null;\n            })\n            .filter((item) => item !== null),\n        };\n\n        resolve(privacyList);\n\n        delete this.stanzasCallbacks[id];\n      };\n\n      this.xmppClient.sendOnline(iq);\n    });\n  }\n\n  public async update(list: Chat.PrivacyList): Promise<void> {\n    try {\n      const currentList = await this.getList(list.name);\n      const map = new Map(currentList.items.map((currentListItem) => [currentListItem.user_id, currentListItem]));\n\n      for (const item of list.items) {\n        if (item.action === PrivacyListAction.ALLOW) {\n          map.delete(item.user_id);\n        } else {\n          const updatedItem = Object.assign({}, map.get(item.user_id), item);\n          map.set(item.user_id, updatedItem);\n        }\n      }\n\n      const updatedListItems = Array.from(map.values());\n      const updatedList = { name: list.name, items: updatedListItems };\n\n      await this.create(updatedList);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async getNames(): Promise<Chat.PrivacyListNames> {\n    return new Promise((resolve, reject) => {\n      const id = ChatUtils.getUniqueId('getNames');\n      const iq = ChatUtils.createIqStanza({\n        type: 'get',\n        from: this.helpers.userCurrentJid,\n        id,\n      });\n\n      iq.c('query', { xmlns: this.xmlns });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        if (!ChatUtils.isErrorStanza(stanza)) {\n          const query = ChatUtils.getElement(stanza, 'query');\n          const defaultElement = ChatUtils.getElement(query, 'default');\n          const activeElement = ChatUtils.getElement(query, 'active');\n          const defaultName = ChatUtils.getAttr(defaultElement, 'name');\n          const activeName = ChatUtils.getAttr(activeElement, 'name');\n          const allNames = ChatUtils.getChildElements(query).map((list) => ChatUtils.getAttr(list, 'name'));\n\n          const namesList = {\n            default: defaultName,\n            active: activeName,\n            names: allNames,\n          };\n\n          resolve(namesList);\n        } else {\n          reject(ChatUtils.buildErrorFromXMPPErrorStanza(stanza));\n        }\n      };\n\n      this.xmppClient.sendOnline(iq);\n    });\n  }\n\n  public async delete(name: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const id = ChatUtils.getUniqueId('remove');\n      const iq = ChatUtils.createIqStanza({\n        type: 'set',\n        from: this.helpers.userCurrentJid,\n        id,\n      });\n\n      iq.c('query', { xmlns: this.xmlns }).c('list', { name: name ? name : '' });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        ChatUtils.isErrorStanza(stanza) ? reject(ChatUtils.buildErrorFromXMPPErrorStanza(stanza)) : resolve();\n      };\n\n      this.xmppClient.sendOnline(iq);\n    });\n  }\n\n  public async setAsDefault(name: string | null): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const id = ChatUtils.getUniqueId('default');\n      const iq = ChatUtils.createIqStanza({\n        type: 'set',\n        from: this.helpers.userCurrentJid,\n        id,\n      });\n\n      iq.c('query', { xmlns: this.xmlns }).c('default', name ? { name: name } : {});\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        ChatUtils.isErrorStanza(stanza) ? reject(ChatUtils.buildErrorFromXMPPErrorStanza(stanza)) : resolve();\n      };\n\n      this.xmppClient.sendOnline(iq);\n    });\n  }\n\n  private assignPrivacyItem(iq: Chat.XmlElement, params: Chat.PrivacyListItemParams): void {\n    const { value, action, order, isMutual } = params;\n    const query = ChatUtils.getElement(iq, 'query');\n    const list = ChatUtils.getElement(query, 'list');\n    const item = list.c('item', { type: 'jid', value, action, order });\n\n    if (isMutual) {\n      item.up();\n\n      if (order % 2 === 0) {\n        iq.up().up();\n      }\n    } else {\n      item.c('message', {}).up().c('presence-in', {}).up().c('presence-out', {}).up().c('iq', {}).up().up();\n    }\n  }\n}\n","import { XMPPClient } from './xmpp';\nimport ChatHelpers from './Helpers';\nimport ChatUtils from './ChatUtils';\nimport { Chat } from '../types';\n\nexport default class MultiUserChat {\n  readonly xmlns = 'http://jabber.org/protocol/muc';\n  public helpers: ChatHelpers;\n  public xmppClient: XMPPClient;\n  public stanzasCallbacks: Chat.StanzasCallbacks;\n  public joinedRooms: { [jid: string]: boolean } = {};\n\n  constructor(options: { helpers: ChatHelpers; xmppClient: XMPPClient; stanzasCallbacks: Chat.StanzasCallbacks }) {\n    this.helpers = options.helpers;\n    this.xmppClient = options.xmppClient;\n    this.stanzasCallbacks = options.stanzasCallbacks;\n  }\n\n  public async join(dialogIdOrJid: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const id = ChatUtils.getUniqueId('join');\n      const dialogJid = this.helpers.getDialogJid(dialogIdOrJid);\n      const presenceStanza = ChatUtils.createPresenceStanza({\n        id: id,\n        from: this.helpers.userCurrentJid,\n        to: this.helpers.getRoomJid(dialogJid),\n      });\n\n      presenceStanza.c('x', { xmlns: this.xmlns }).c('history', { maxstanzas: 0 });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        const x = ChatUtils.getElement(stanza, 'x');\n        const status = ChatUtils.getElement(x, 'status');\n        const code = ChatUtils.getAttr(status, 'code');\n\n        if (status && code == '110') {\n          this.joinedRooms[dialogJid] = true;\n          resolve();\n        } else {\n          const isJoin = ChatUtils.getAttr(x, 'xmlns') === this.xmlns && id.endsWith(':join');\n          const isError = ChatUtils.getAttr(stanza, 'type') === 'error';\n\n          if (isJoin && isError) {\n            const errorElement = ChatUtils.getElement(stanza, 'error');\n            const errorResponse = {\n              code: ChatUtils.getAttr(errorElement, 'code'),\n              message: ChatUtils.getElementText(errorElement, 'text') || 'Unknown issue',\n            };\n\n            reject(errorResponse);\n          }\n        }\n      };\n\n      this.xmppClient.sendOnline(presenceStanza);\n    });\n  }\n\n  public async leave(dialogIdOrJid: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const dialogJid = this.helpers.getDialogJid(dialogIdOrJid);\n      const presenceStanza = ChatUtils.createPresenceStanza({\n        type: 'unavailable',\n        from: this.helpers.userCurrentJid,\n        to: this.helpers.getRoomJid(dialogJid),\n      });\n\n      delete this.joinedRooms[dialogJid];\n\n      this.stanzasCallbacks['muc:leave'] = (_stanza: Chat.XmlElement) => {\n        resolve();\n      };\n\n      this.xmppClient.sendOnline(presenceStanza);\n    });\n  }\n\n  public async listOnlineUsers(dialogIdOrJid: string): Promise<number[]> {\n    return new Promise((resolve, _reject) => {\n      const id = ChatUtils.getUniqueId('muc_disco_items');\n      const iqStanza = ChatUtils.createIqStanza({\n        type: 'get',\n        to: this.helpers.getDialogJid(dialogIdOrJid),\n        from: this.helpers.userCurrentJid,\n        id,\n      });\n\n      iqStanza.c('query', { xmlns: 'http://jabber.org/protocol/disco#items' });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        const stanzaId = ChatUtils.getAttr(stanza, 'id');\n\n        if (this.stanzasCallbacks[stanzaId]) {\n          const query = ChatUtils.getAttr(stanza, 'query');\n          const users = ChatUtils.getChildElements(query)\n            .map((item: Chat.XmlElement): number | null => {\n              const roomJid = ChatUtils.getAttr(item, 'jid');\n              return this.helpers.getUserIdFromRoomJid(roomJid);\n            })\n            .filter((userId: number | null) => userId !== null);\n\n          resolve(users);\n        }\n      };\n\n      this.xmppClient.sendOnline(iqStanza);\n    });\n  }\n}\n","import config from '../config';\nimport { XMPPClient, xmppClient } from './xmpp';\nimport Utils from '../Utils';\nimport ProxyService from '../Proxy';\nimport DialogsService from './Dialogs';\nimport MessagesService from './Messages';\nimport ChatHelpers from './Helpers';\nimport ChatUtils from './ChatUtils';\nimport StreamManagement from './StreamManagement';\nimport WebRTCSignalingProcessor from '../videocalling/WebRTCSignalingProcessor';\nimport PrivacyList from './PrivacyList';\nimport MultiUserChat from './MultiUserChat';\nimport { Chat, ChatEvent, ProxyMethod } from '../types';\n\nexport default class ChatService {\n  public proxy: ProxyService;\n  public dialog: DialogsService;\n  public message: MessagesService;\n  public xmppClient: XMPPClient;\n  public helpers: ChatHelpers;\n  public privacylist: PrivacyList;\n  public muc: MultiUserChat;\n  public streamManagement: StreamManagement;\n  public webrtcSignalingProcessor!: WebRTCSignalingProcessor;\n\n  public isConnected: boolean = false;\n  private isConnecting: boolean = false;\n  private isLogout: boolean = false;\n  private isReconnect: boolean = false;\n\n  public stanzasCallbacks: Chat.StanzasCallbacks = {};\n  private xmppClientListeners: Chat.XMPPClientListeners = new Map<Chat.XMPPClientEvent, Chat.XMPPClientListener>();\n  private connectPromise: Promise<boolean> | null = null;\n  private earlyIncomingMessagesQueue: Chat.XmlElement[] = [];\n\n  public onChatStatusListener!: Chat.OnChatStatusListener;\n  public onConnectionErrorListener!: Chat.OnChatConnectionErrorListener;\n  public onDisconnectedListener!: Chat.OnChatDisconnectedListener;\n  public onReconnectListener!: Chat.OnChatReconnectedListener;\n  public onMessageListener!: Chat.OnMessageListener;\n  public onSystemMessageListener!: Chat.OnMessageSystemListener;\n  public onMessageErrorListener!: Chat.OnMessageErrorListener;\n  public onMessageTypingListener!: Chat.OnMessageTypingListener;\n  public onMessageUpdateListener!: Chat.OnMessageUpdateListener;\n  public onMessageDeleteListener!: Chat.OnMessageDeleteListener;\n  public onMessageReactionsListener!: Chat.OnMessageReactionsListener;\n  public onSentMessageCallback!: Chat.OnMessageSentListener;\n  public onDeliveredStatusListener!: Chat.OnMessageDeliveredListener;\n  public onReadStatusListener!: Chat.OnMessageReadListener;\n  public onLastUserActivityListener!: Chat.OnLastUserActivityListener;\n  public onJoinOccupant!: Chat.OnDialogJoinListener;\n  public onLeaveOccupant!: Chat.OnDialogLeaveListener;\n  public onKickOccupant!: Chat.OnDialogKickListener;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n    this.dialog = new DialogsService(proxy);\n    this.message = new MessagesService(proxy);\n    this.helpers = new ChatHelpers();\n\n    this.xmppClient = xmppClient({\n      service: config.chatProtocol.websocket,\n      credentials: (auth, _mechanism) =>\n        auth({\n          username: this.xmppClient.options.username || '',\n          password: this.xmppClient.options.password || '',\n        }),\n    });\n\n    if (config.chat.reconnect.enable) {\n      this.xmppClient.reconnect.delay = config.chat.reconnect.timeInterval * 1000;\n    }\n\n    const options = {\n      xmppClient: this.xmppClient,\n      helpers: this.helpers,\n      stanzasCallbacks: this.stanzasCallbacks,\n    };\n\n    this.muc = new MultiUserChat(options);\n    this.privacylist = new PrivacyList(options);\n    this.streamManagement = new StreamManagement(this);\n  }\n\n  get connectionStatus() {\n    return this.xmppClient.status;\n  }\n\n  public async connect(params: Chat.ConnectionParams): Promise<boolean> {\n    this.connectPromise = new Promise((resolve, reject) => {\n      Utils.DLog('[Chat]', 'Connect with parameter:', params);\n\n      if (this.isConnecting) {\n        Utils.DLog('[Chat]', 'Warning! Already in CONNECTING state');\n        resolve(false);\n        return;\n      }\n\n      if (this.isConnected) {\n        Utils.DLog('[Chat]', 'Warning! Chat is already connected!');\n        resolve(false);\n        return;\n      }\n\n      this.isConnecting = true;\n      this.isLogout = false;\n\n      this.removeAllXMPPClientListeners();\n\n      this.addXMPPClientListener('connect', () => {\n        Utils.DLog('[Chat]', this.isReconnect ? 'RECONNECTING' : 'CONNECTING');\n      });\n\n      this.addXMPPClientListener('online', () => {\n        Utils.DLog('[Chat]', 'ONLINE');\n        this.postConnectActions();\n        resolve(true);\n        this.connectPromise = null;\n      });\n\n      this.addXMPPClientListener('offline', () => {\n        Utils.DLog('[Chat]', 'OFFLINE');\n      });\n\n      this.addXMPPClientListener('disconnect', () => {\n        Utils.DLog('[Chat]', 'DISCONNECTED');\n\n        Utils.safeCallbackCall(this.onDisconnectedListener)();\n\n        if (config.chat.reconnect.enable) {\n          this.isConnected = false;\n          this.isConnecting = false;\n        } else {\n          this.disconnect();\n        }\n      });\n\n      this.addXMPPClientListener('status', (status: Chat.ConnectionStatus, value: any) => {\n        Utils.DLog('[Chat]', `status - ${status}`, typeof value === 'object' ? JSON.stringify(value) : '');\n        Utils.safeCallbackCall(this.onChatStatusListener)(status);\n      });\n\n      this.addXMPPClientListener('stanza', (stanza: Chat.XmlElement) => {\n        // it can be a case,\n        // when message came after xmpp auth but before resource binding,\n        // and it can cause some crashes, e.g.\n        // https://github.com/ConnectyCube/connectycube-js-sdk-releases/issues/28\n        if (stanza.is('message') && !this.isConnected) {\n          this.earlyIncomingMessagesQueue.push(stanza);\n          Utils.DLog('[Chat]', \"on 'stanza': enqueue incoming stanza (isConnected=false)\");\n          return;\n        }\n\n        // after 'input' and 'element' (only if stanza, not nonza)\n        if (stanza.is('presence')) {\n          this.onPresence(stanza);\n        } else if (stanza.is('iq')) {\n          this.onIQ(stanza);\n        } else if (stanza.is('message')) {\n          if (stanza.attrs.type === 'headline') {\n            this.onSystemMessage(stanza);\n          } else if (stanza.attrs.type === 'error') {\n            this.onMessageError(stanza);\n          } else {\n            this.onMessage(stanza);\n          }\n        }\n      });\n\n      this.addXMPPClientListener('error', (error) => {\n        Utils.DLog('[Chat]', 'ERROR:', error, {\n          isReconnect: this.isReconnect,\n          connectPromise: !!this.connectPromise,\n        });\n\n        if (this.connectPromise) {\n          if (!this.isReconnect) {\n            reject(error.name == 'SASLError' ? error.condition : error);\n            this.connectPromise = null;\n          }\n        } else {\n          Utils.safeCallbackCall(this.onConnectionErrorListener)(error);\n        }\n      });\n\n      this.addXMPPClientListener('output', (str) => {\n        Utils.callTrafficUsageCallback('xmppDataWrite', { body: str });\n        Utils.DLog('[Chat]', 'SENT:', str);\n      });\n\n      this.addXMPPClientListener('input', (str) => {\n        Utils.callTrafficUsageCallback('xmppDataRead', { body: str });\n        Utils.DLog('[Chat]', 'RECV:', str);\n      });\n\n      // save user connection data so they will be used when authenticate (above)\n      this.xmppClient.options.username = ChatUtils.buildUserJidLocalPart(params.userId);\n      this.xmppClient.options.password = params.password;\n      // start connect\n      this.xmppClient.start().catch((error) => {\n        console.error('[Chat] xmppClient.start error', error);\n        if (this.connectPromise) {\n          reject(error);\n          this.connectPromise = null;\n        } else {\n          Utils.safeCallbackCall(this.onConnectionErrorListener)(error);\n        }\n      });\n    });\n\n    return this.connectPromise;\n  }\n\n  public async ping(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const id = ChatUtils.getUniqueId('ping');\n      const iqStanza = ChatUtils.createIqStanza({ id, type: 'get', to: config.endpoints.chat });\n\n      iqStanza.c('ping', { xmlns: 'urn:xmpp:ping' });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        const error = ChatUtils.getElement(stanza, 'error');\n        if (error) {\n          reject(ChatUtils.buildErrorFromXMPPErrorStanza(error));\n        } else {\n          resolve();\n        }\n      };\n\n      this.xmppClient.sendOnline(iqStanza);\n    });\n  }\n\n  public async pingWithTimeout(timeout: number = 5000): Promise<unknown> {\n    return Promise.race([\n      this.ping(),\n      new Promise((_, reject) =>\n        setTimeout(() => {\n          const error = 'Chat ping() timed out';\n          Utils.safeCallbackCall(this.onConnectionErrorListener)(error);\n          reject(error);\n        }, timeout)\n      ),\n    ]);\n  }\n\n  public send(jidOrUserId: string | number, message: Chat.MessageParams = {}): string {\n    const messageId = message.id ?? Utils.getBsonObjectId();\n    const messageStanza = ChatUtils.createMessageStanza({\n      from: this.helpers.userCurrentJid,\n      to: this.helpers.jidOrUserId(jidOrUserId),\n      type: message.type ?? this.helpers.typeChat(jidOrUserId),\n      id: messageId,\n    });\n\n    if (!message.id) {\n      message.id = messageId;\n    }\n\n    if (message.body) {\n      messageStanza.c('body').t(message.body).up();\n    }\n\n    if (message.markable) {\n      messageStanza.c('markable', { xmlns: 'urn:xmpp:chat-markers:0' }).up();\n    }\n\n    if (message.extension) {\n      messageStanza.c('extraParams', { xmlns: 'jabber:client' });\n      ChatUtils.assignExtraParamsToXml(messageStanza, message.extension);\n    }\n\n    if (this.streamManagement.supported) {\n      this.streamManagement.sendAndCount(messageStanza, message);\n    } else {\n      this.xmppClient.sendOnline(messageStanza);\n    }\n\n    return messageId;\n  }\n\n  public sendSystemMessage(jidOrUserId: string | number, message: Chat.SystemMessageParams): string {\n    const messageId = message.id ?? Utils.getBsonObjectId();\n    const messageStanza = ChatUtils.createMessageStanza({\n      type: 'headline',\n      id: messageId,\n      to: this.helpers.jidOrUserId(jidOrUserId),\n    });\n\n    if (message.body) {\n      messageStanza.c('body').t(message.body).up();\n    }\n\n    if (message.extension) {\n      messageStanza.c('extraParams', { xmlns: 'jabber:client' }).c('moduleIdentifier').t('SystemNotifications').up();\n      ChatUtils.assignExtraParamsToXml(messageStanza, message.extension);\n    }\n\n    this.xmppClient.sendOnline(messageStanza);\n\n    return messageId;\n  }\n\n  public sendIsTypingStatus(jidOrUserId: string | number): void {\n    const messageStanza = ChatUtils.createMessageStanza({\n      from: this.helpers.userCurrentJid,\n      to: this.helpers.jidOrUserId(jidOrUserId),\n      type: this.helpers.typeChat(jidOrUserId),\n    });\n\n    messageStanza.c('composing', { xmlns: 'http://jabber.org/protocol/chatstates' });\n\n    this.xmppClient.sendOnline(messageStanza);\n  }\n\n  public sendIsStopTypingStatus(jidOrUserId: string | number): void {\n    const messageStanza = ChatUtils.createMessageStanza({\n      from: this.helpers.userCurrentJid,\n      to: this.helpers.jidOrUserId(jidOrUserId),\n      type: this.helpers.typeChat(jidOrUserId),\n    });\n\n    messageStanza.c('paused', { xmlns: 'http://jabber.org/protocol/chatstates' });\n\n    this.xmppClient.sendOnline(messageStanza);\n  }\n\n  public sendDeliveredStatus(params: Chat.MessageStatusParams): void {\n    const messageStanza = ChatUtils.createMessageStanza({\n      type: 'chat',\n      from: this.helpers.userCurrentJid,\n      id: Utils.getBsonObjectId(),\n      to: this.helpers.jidOrUserId(params.userId),\n    });\n\n    messageStanza.c('received', { xmlns: 'urn:xmpp:chat-markers:0', id: params.messageId }).up();\n    messageStanza.c('extraParams', { xmlns: 'jabber:client' }).c('dialog_id').t(params.dialogId);\n\n    this.xmppClient.sendOnline(messageStanza);\n  }\n\n  public sendReadStatus(params: Chat.MessageStatusParams): void {\n    const messageStanza = ChatUtils.createMessageStanza({\n      type: 'chat',\n      from: this.helpers.userCurrentJid,\n      to: this.helpers.jidOrUserId(params.userId),\n      id: Utils.getBsonObjectId(),\n    });\n\n    messageStanza.c('displayed', { xmlns: 'urn:xmpp:chat-markers:0', id: params.messageId }).up();\n    messageStanza.c('extraParams', { xmlns: 'jabber:client' }).c('dialog_id').t(params.dialogId);\n\n    this.xmppClient.sendOnline(messageStanza);\n  }\n\n  public editMessage(params: Chat.EditMessageParams): void {\n    const messageStanza = ChatUtils.createMessageStanza({\n      from: this.helpers.userCurrentJid,\n      to: this.helpers.jidOrUserId(params.to),\n      type: this.helpers.typeChat(params.to),\n      id: Utils.getBsonObjectId(),\n    });\n\n    messageStanza.c('body').t(params.body).up();\n    messageStanza\n      .c('replace', {\n        xmlns: 'urn:xmpp:message-correct:0',\n        id: params.originMessageId,\n        last: params.last ? 'true' : 'false',\n      })\n      .up();\n    messageStanza.c('extraParams', { xmlns: 'jabber:client' }).c('dialog_id').t(params.dialogId);\n\n    if (params.extension) {\n      ChatUtils.assignExtraParamsToXml(messageStanza, params.extension);\n    }\n\n    this.xmppClient.sendOnline(messageStanza);\n  }\n\n  public deleteMessage(params: Chat.DeleteMessageParams): void {\n    const messageStanza = ChatUtils.createMessageStanza({\n      from: this.helpers.userCurrentJid,\n      to: this.helpers.jidOrUserId(params.to),\n      type: this.helpers.typeChat(params.to),\n      id: Utils.getBsonObjectId(),\n    });\n\n    messageStanza.c('remove', { xmlns: 'urn:xmpp:message-delete:0', id: params.messageId }).up();\n    messageStanza.c('extraParams', { xmlns: 'jabber:client' }).c('dialog_id').t(params.dialogId);\n\n    this.xmppClient.sendOnline(messageStanza);\n  }\n\n  public getLastUserActivity(jidOrUserId: string | number): Promise<Chat.LastActivity> {\n    return new Promise((resolve, reject) => {\n      const id = ChatUtils.getUniqueId('lastActivity');\n      const iqStanza = ChatUtils.createIqStanza({\n        type: 'get',\n        from: this.helpers.userCurrentJid,\n        to: this.helpers.jidOrUserId(jidOrUserId),\n        id: id,\n      });\n\n      iqStanza.c('query', { xmlns: 'jabber:iq:last' });\n\n      this.stanzasCallbacks[id] = (stanza: Chat.XmlElement) => {\n        if (ChatUtils.getElement(stanza, 'error')) {\n          reject(ChatUtils.buildErrorFromXMPPErrorStanza(stanza));\n        } else {\n          resolve(this.onLastActivityStanza(stanza));\n        }\n      };\n\n      this.xmppClient.sendOnline(iqStanza);\n    });\n  }\n\n  private onLastActivityStanza(stanza: Chat.XmlElement): Chat.LastActivity {\n    const from = ChatUtils.getAttr(stanza, 'from');\n    const userId = this.helpers.getUserIdFromJID(from);\n    const query = ChatUtils.getElement(stanza, 'query');\n    const seconds = query ? parseInt(ChatUtils.getAttr(query, 'seconds')) : 0;\n\n    Utils.safeCallbackCall(this.onLastUserActivityListener)(userId, seconds);\n\n    return { userId, seconds };\n  }\n\n  public markActive(): void {\n    const iqStanza = ChatUtils.createIqStanza({\n      id: this.helpers.getUniqueId('markActive'),\n      type: 'set',\n    });\n\n    iqStanza.c('mobile', {\n      xmlns: 'http://tigase.org/protocol/mobile#v2',\n      enable: 'false',\n    });\n\n    this.xmppClient.sendOnline(iqStanza);\n  }\n\n  public markInactive(): void {\n    const iqStanza = ChatUtils.createIqStanza({\n      id: this.helpers.getUniqueId('markActive'),\n      type: 'set',\n    });\n\n    iqStanza.c('mobile', {\n      xmlns: 'http://tigase.org/protocol/mobile#v2',\n      enable: 'true',\n    });\n\n    this.xmppClient.sendOnline(iqStanza);\n  }\n\n  public async disconnect(): Promise<boolean> {\n    Utils.DLog('[Chat]', 'disconnect');\n\n    if (this.isLogout) {\n      Utils.DLog('[Chat]', 'Warning! Chat is already disconnected!');\n      return true;\n    }\n\n    this.isLogout = true;\n    this.isReconnect = false;\n    this.isConnected = false;\n    this.isConnecting = false;\n    this.muc.joinedRooms = {};\n    this.helpers.userCurrentJid = '';\n    this.streamManagement.stop();\n\n    try {\n      await this.xmppClient.stop();\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  public terminate(): void {\n    Utils.DLog('[Chat]', 'terminated');\n\n    this.isConnected = false;\n    this.isConnecting = false;\n    this.streamManagement.stop();\n    this.xmppClient.socket.end();\n  }\n\n  public async search(params: Chat.SearchParams): Promise<Chat.SearchResult> {\n    const query = Object.assign({}, params);\n\n    if (query.start_date) {\n      query.start_date = new Date(query.start_date).toISOString();\n    }\n    if (query.end_date) {\n      query.end_date = new Date(query.end_date).toISOString();\n    }\n    if (Utils.isArray(query.chat_dialog_ids)) {\n      query.chat_dialog_ids = (query.chat_dialog_ids as string[]).join(',');\n    }\n\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(`${config.urls.chat}/search`),\n      data: query,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  private onMessage(rawStanza: Chat.XmlElement): void {\n    const forwardedStanza = ChatUtils.getElementTreePath(rawStanza, ['sent', 'forwarded', 'message']);\n    const stanza = forwardedStanza || rawStanza;\n    const from = ChatUtils.getAttr(stanza, 'from');\n    const type = ChatUtils.getAttr(stanza, 'type');\n    const invite = ChatUtils.getElement(stanza, 'invite');\n    const resource = this.xmppClient.jid?.getResource() || '';\n    const isChat = type === 'chat';\n\n    // ignore private message from the same resource or invite messages from MUC\n    if ((isChat && from.includes(resource)) || invite) {\n      return;\n    }\n\n    const messageId = ChatUtils.getAttr(stanza, 'id');\n    const markable = ChatUtils.getElement(stanza, 'markable');\n    const delivered = ChatUtils.getElement(stanza, 'received');\n    const read = ChatUtils.getElement(stanza, 'displayed');\n    const replaceSubElement = ChatUtils.getElement(stanza, 'replace');\n    const reactionsSubElement = ChatUtils.getElement(stanza, 'reactions');\n    const removeSubElement = ChatUtils.getElement(stanza, 'remove');\n    const composing = Boolean(ChatUtils.getElement(stanza, 'composing'));\n    const paused = ChatUtils.getElement(stanza, 'paused');\n    const delay = ChatUtils.getElement(stanza, 'delay');\n    const extraParams = ChatUtils.getElement(stanza, 'extraParams');\n    const body = ChatUtils.getElementText(stanza, 'body');\n    const isForwarded = Boolean(forwardedStanza);\n    const isGroup = type === 'groupchat';\n    const recipient = isChat ? ChatUtils.getAttr(stanza, 'to') : null;\n    const recipientId = recipient ? this.helpers.getUserIdFromJID(recipient) : null;\n    const ext = extraParams ? ChatUtils.parseExtraParams(extraParams) : null;\n    const extension = ext ? ext.extension : null;\n    const dialogId = isGroup ? this.helpers.getDialogIdFromJID(from) : ext?.dialogId ?? null;\n    const userId = isGroup ? this.helpers.getIdFromResource(from) : this.helpers.getUserIdFromJID(from);\n    const currentUserJid = this.xmppClient.jid?.toString();\n    const currentUserId = currentUserJid ? this.helpers.getUserIdFromJID(currentUserJid) : 0;\n\n    // typing statuses\n    if (composing || paused) {\n      if (isChat || isGroup || !delay) {\n        Utils.safeCallbackCall(this.onMessageTypingListener)(composing, userId, dialogId);\n      }\n\n      return;\n    }\n\n    // edit message\n    if (replaceSubElement) {\n      Utils.safeCallbackCall(this.onMessageUpdateListener)(\n        ChatUtils.getAttr(replaceSubElement, 'id'),\n        ChatUtils.getAttr(replaceSubElement, 'last') === 'true',\n        body,\n        dialogId,\n        userId,\n        extension\n      );\n\n      return;\n    }\n\n    // reactions\n    if (reactionsSubElement) {\n      if (isForwarded && isGroup) {\n        return;\n      }\n\n      const messageId = ChatUtils.getAttr(reactionsSubElement, 'message_id');\n      const userId = parseInt(ChatUtils.getAttr(reactionsSubElement, 'user_id'));\n      const { add, remove } = ChatUtils.parseReactions(reactionsSubElement);\n\n      Utils.safeCallbackCall(this.onMessageReactionsListener)(messageId, userId, dialogId, add, remove);\n\n      return;\n    }\n\n    // delete message\n    if (removeSubElement) {\n      const messageId = ChatUtils.getAttr(removeSubElement, 'id');\n\n      Utils.safeCallbackCall(this.onMessageDeleteListener)(messageId, dialogId, userId);\n\n      return;\n    }\n\n    // delivered / read statuses\n    if (delivered || read) {\n      if (delivered && isChat) {\n        const id = ChatUtils.getAttr(delivered, 'id');\n        Utils.safeCallbackCall(this.onDeliveredStatusListener)(id, dialogId, userId);\n      }\n      if (read && isChat) {\n        const id = ChatUtils.getAttr(read, 'id');\n        Utils.safeCallbackCall(this.onReadStatusListener)(id, dialogId, userId);\n      }\n\n      return;\n    }\n\n    // auto-send 'received' status (ignore messages from yourself)\n    if (markable && dialogId && userId && userId !== currentUserId) {\n      this.sendDeliveredStatus({ messageId, dialogId, userId });\n    }\n\n    const message: Chat.Message = {\n      id: messageId,\n      dialog_id: dialogId,\n      recipient_id: recipientId,\n      is_forwarded: isForwarded,\n      type,\n      body,\n      extension,\n      delay,\n    };\n\n    if (markable) {\n      message.markable = 1;\n    }\n\n    if (isChat || isGroup) {\n      Utils.safeCallbackCall(this.onMessageListener)(userId, message);\n    }\n  }\n\n  private onPresence(stanza: Chat.XmlElement): void {\n    const from = ChatUtils.getAttr(stanza, 'from');\n    const id = ChatUtils.getAttr(stanza, 'id');\n    const type = ChatUtils.getAttr(stanza, 'type');\n    const currentUserJid = this.xmppClient.jid?.toString();\n    const currentUserId = this.helpers.getUserIdFromJID(currentUserJid);\n    const x = ChatUtils.getElement(stanza, 'x');\n    const xmlns = x ? ChatUtils.getAttr(x, 'xmlns') : null;\n    const status = x ? ChatUtils.getElement(x, 'xmlns') : null;\n    // const statusCode = status ? ChatUtils.getElement(status, 'code') : null;\n    const statusCode = status ? ChatUtils.getElementText(status, 'code') : null;\n\n    // MUC presences\n    if (xmlns && xmlns.startsWith('http://jabber.org/protocol/muc')) {\n      // Error\n      if (type === 'error') {\n        // JOIN to dialog error\n        if (id.endsWith(':join')) {\n          Utils.safeCallbackCall(this.stanzasCallbacks[id])(stanza);\n        }\n        return;\n      }\n\n      const dialogId = this.helpers.getDialogIdFromJID(from);\n      const mucUserId = this.helpers.getUserIdFromRoomJid(from);\n\n      // self presence\n      if (status) {\n        // KICK from dialog event\n        if (statusCode === '301') {\n          const item = ChatUtils.getElement(stanza, 'item');\n          const actorElement = item ? ChatUtils.getElement(item, 'actor') : null;\n          const initiatorUserJid = actorElement ? ChatUtils.getAttr(actorElement, 'jid') : null;\n          const initiatorId = this.helpers.getUserIdFromJID(initiatorUserJid);\n          const roomJid = this.helpers.getRoomJidFromRoomFullJid(from);\n\n          Utils.safeCallbackCall(this.onKickOccupant)(dialogId, initiatorId);\n\n          if (roomJid) {\n            delete this.muc.joinedRooms[roomJid];\n          }\n\n          return;\n        } else {\n          if (type === 'unavailable') {\n            // LEAVE response\n            if (status && statusCode === '110') {\n              Utils.safeCallbackCall(this.stanzasCallbacks['muc:leave'])(null);\n            }\n            return;\n          }\n          // JOIN response\n          if (id.endsWith(':join') && status && statusCode === '110') {\n            this.stanzasCallbacks[id]?.(stanza);\n            return;\n          }\n        }\n        // Occupants JOIN/LEAVE events\n      } else if (mucUserId != currentUserId) {\n        const listenerName = type === 'unavailable' ? 'onLeaveOccupant' : 'onJoinOccupant';\n\n        Utils.safeCallbackCall(this[listenerName])(dialogId, mucUserId);\n\n        return;\n      }\n    }\n  }\n\n  private onIQ(stanza: Chat.XmlElement): void {\n    const stanzaId = ChatUtils.getAttr(stanza, 'id');\n\n    if (this.stanzasCallbacks[stanzaId]) {\n      Utils.safeCallbackCall(this.stanzasCallbacks[stanzaId])(stanza);\n      delete this.stanzasCallbacks[stanzaId];\n    } else {\n      const from = ChatUtils.getAttr(stanza, 'from');\n      const query = ChatUtils.getElement(stanza, 'query');\n      if (from && query) {\n        this.onLastActivityStanza(stanza);\n      }\n    }\n  }\n\n  private onSystemMessage(rawStanza: Chat.XmlElement): void {\n    const forwardedStanza = ChatUtils.getElementTreePath(rawStanza, ['sent', 'forwarded', 'message']);\n    const stanza = forwardedStanza || rawStanza;\n    const from = ChatUtils.getAttr(stanza, 'from');\n    const messageId = ChatUtils.getAttr(stanza, 'id');\n    const extraParams = ChatUtils.getElement(stanza, 'extraParams');\n    const userId = this.helpers.getUserIdFromJID(from);\n    const delay = ChatUtils.getElement(stanza, 'delay');\n    const moduleIdentifier = extraParams ? ChatUtils.getElementText(extraParams, 'moduleIdentifier') : null;\n    const body = ChatUtils.getElementText(stanza, 'body');\n    const ext = extraParams ? ChatUtils.parseExtraParams(extraParams) : null;\n    const extension = ext ? ext.extension : null;\n\n    switch (moduleIdentifier) {\n      case 'SystemNotifications':\n        Utils.safeCallbackCall(this.onSystemMessageListener)({ id: messageId, userId, body, extension });\n        break;\n      case 'WebRTCVideoChat':\n        if (this.webrtcSignalingProcessor && !delay) {\n          Utils.safeCallbackCall(this.webrtcSignalingProcessor.onMessage)(userId, extraParams);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private onMessageError(stanza: Chat.XmlElement): void {\n    // <error code=\"503\" type=\"cancel\">\n    //   <service-unavailable xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"/>\n    //   <text xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\" xml:lang=\"en\">Service not available.</text>\n    // </error>\n    const messageId = ChatUtils.getAttr(stanza, 'id');\n    const error = ChatUtils.buildErrorFromXMPPErrorStanza(stanza);\n\n    Utils.safeCallbackCall(this.onMessageErrorListener)(messageId, error);\n  }\n\n  private postConnectActions(): void {\n    Utils.DLog('[Chat]', this.isReconnect ? 'RECONNECTED' : 'CONNECTED');\n\n    const presence = ChatUtils.createPresenceStanza();\n\n    this.streamManagement.start();\n    this.helpers.userCurrentJid = this.xmppClient.jid?.toString() ?? null;\n    this.isConnected = true;\n    this.isConnecting = false;\n    this.enableCarbons();\n    this.xmppClient.sendOnline(presence); // initial presence\n\n    if (this.isReconnect) {\n      // reconnect\n      Utils.safeCallbackCall(this.onReconnectListener)();\n    } else {\n      this.isReconnect = true;\n    }\n\n    if (this.earlyIncomingMessagesQueue.length > 0) {\n      Utils.DLog('[Chat]', `Flush 'earlyIncomingMessagesQueue' (length=${this.earlyIncomingMessagesQueue.length})`);\n\n      const stanzasCallback = this.xmppClientListeners.get('stanza');\n\n      this.earlyIncomingMessagesQueue.forEach((stanza) => {\n        stanzasCallback?.(stanza);\n      });\n      this.earlyIncomingMessagesQueue = [];\n    }\n  }\n\n  private enableCarbons(): void {\n    const iqStanza = ChatUtils.createIqStanza({\n      type: 'set',\n      from: this.helpers.userCurrentJid,\n      id: ChatUtils.getUniqueId('enableCarbons'),\n    });\n\n    iqStanza.c('enable', { xmlns: 'urn:xmpp:carbons:2' });\n\n    this.xmppClient.sendOnline(iqStanza);\n  }\n\n  private setSubscriptionToUserLastActivity(jidOrUserId: string | number, enable: boolean): void {\n    const iqStanza = ChatUtils.createIqStanza({\n      id: this.helpers.getUniqueId('statusStreaming'),\n      type: 'set',\n    });\n\n    iqStanza.c('subscribe', {\n      xmlns: 'https://connectycube.com/protocol/status_streaming',\n      user_jid: this.helpers.jidOrUserId(jidOrUserId),\n      enable,\n    });\n\n    this.xmppClient.sendOnline(iqStanza);\n  }\n\n  subscribeToUserLastActivityStatus(jidOrUserId: string | number) {\n    this.setSubscriptionToUserLastActivity(jidOrUserId, true);\n  }\n\n  unsubscribeFromUserLastActivityStatus(jidOrUserId: string | number) {\n    this.setSubscriptionToUserLastActivity(jidOrUserId, false);\n  }\n\n  private addXMPPClientListener(name: Chat.XMPPClientEvent, listener: Chat.XMPPClientListener): void {\n    this.xmppClient.on(name, listener);\n    this.xmppClientListeners.set(name, listener);\n  }\n\n  private removeXMPPClientListener(name: Chat.XMPPClientEvent): void {\n    const listener = this.xmppClientListeners.get(name);\n    if (listener) {\n      this.xmppClient.removeListener(name, listener);\n    }\n    this.xmppClientListeners.delete(name);\n  }\n\n  private removeAllXMPPClientListeners(): void {\n    this.xmppClientListeners.forEach((_, name) => this.removeXMPPClientListener(name));\n  }\n\n  private getListenerByName(name: ChatEvent): Chat.ListenerName | null {\n    switch (name) {\n      case ChatEvent.STATUS:\n        return 'onChatStatusListener';\n      case ChatEvent.ERROR:\n        return 'onConnectionErrorListener';\n      case ChatEvent.DISCONNECTED:\n        return 'onDisconnectedListener';\n      case ChatEvent.RECONNECTED:\n        return 'onReconnectListener';\n      case ChatEvent.MESSAGE:\n        return 'onMessageListener';\n      case ChatEvent.SYSTEM_MESSAGE:\n        return 'onSystemMessageListener';\n      case ChatEvent.ERROR_MESSAGE:\n        return 'onMessageErrorListener';\n      case ChatEvent.TYPING_MESSAGE:\n        return 'onMessageTypingListener';\n      case ChatEvent.UPDATE_MESSAGE:\n        return 'onMessageUpdateListener';\n      case ChatEvent.DELETE_MESSAGE:\n        return 'onMessageDeleteListener';\n      case ChatEvent.REACTIONS_MESSAGE:\n        return 'onMessageReactionsListener';\n      case ChatEvent.DELIVERED_MESSAGE:\n        return 'onDeliveredStatusListener';\n      case ChatEvent.READ_MESSAGE:\n        return 'onReadStatusListener';\n      case ChatEvent.SENT_MESSAGE:\n        return 'onSentMessageCallback';\n      case ChatEvent.USER_LAST_ACTIVITY:\n        return 'onLastUserActivityListener';\n      case ChatEvent.JOIN:\n        return 'onJoinOccupant';\n      case ChatEvent.LEAVE:\n        return 'onLeaveOccupant';\n      case ChatEvent.KICK:\n        return 'onKickOccupant';\n      default:\n        return null;\n    }\n  }\n\n  public addListener(name: ChatEvent, listener: Chat.Listeners): () => void {\n    const listenerName = this.getListenerByName(name);\n    if (listenerName) {\n      (this[listenerName] as Chat.Listeners) = listener;\n    }\n    return this.removeListener.bind(this, name);\n  }\n\n  public removeListener(name: ChatEvent): void {\n    const listenerName = this.getListenerByName(name);\n    if (listenerName) {\n      (this[listenerName] as Chat.Listeners | undefined) = undefined;\n    }\n  }\n\n  public removeAllListeners(): void {\n    Object.keys(this).forEach((key: string) => {\n      if (key.startsWith('on') && key.endsWith('Listener') && typeof this[key as Chat.ListenerName] === 'function') {\n        (this[key as Chat.ListenerName] as Chat.Listeners | undefined) = undefined;\n      }\n    });\n  }\n}\n","const {\n  adapter,\n  navigator,\n  MediaStream,\n  MediaStreamTrack,\n  RTCPeerConnection,\n  RTCRtpReceiver,\n  RTCRtpSender,\n  isReactNative\n} = require('../platform');\n\n('use strict');\n/*\n  The MIT License (MIT)\n\n  Copyright (c) 2016 Meetecho\n\n  Permission is hereby granted, free of charge, to any person obtaining\n  a copy of this software and associated documentation files (the \"Software\"),\n  to deal in the Software without restriction, including without limitation\n  the rights to use, copy, modify, merge, publish, distribute, sublicense,\n  and/or sell copies of the Software, and to permit persons to whom the\n  Software is furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included\n  in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n  OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n  OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// List of sessions\nJanus.sessions = {};\n\nJanus.mobile = isReactNative;\n\nJanus.isExtensionEnabled = function () {\n  if (Janus.mobile) {\n    return false;\n  }\n  if (navigator.mediaDevices && navigator.mediaDevices.getDisplayMedia) {\n    // No need for the extension, getDisplayMedia is supported\n    return true;\n  }\n  if (window.navigator.userAgent.match('Chrome')) {\n    let chromever = parseInt(window.navigator.userAgent.match(/Chrome\\/(.*) /)[1], 10);\n    let maxver = 33;\n    if (window.navigator.userAgent.match('Linux')) maxver = 35; // \"known\" crash in chrome 34 and 35 on linux\n    if (chromever >= 26 && chromever <= maxver) {\n      // Older versions of Chrome don't support this extension-based approach, so lie\n      return true;\n    }\n    return Janus.extension.isInstalled();\n  } else {\n    // Firefox and others, no need for the extension (but this doesn't mean it will work)\n    return true;\n  }\n};\n\nconst defaultExtension = {\n  // Screensharing Chrome Extension ID\n  extensionId: 'hapfgfdkleiggjjpfpenajgdnfckjpaj',\n  isInstalled: function () {\n    if (Janus.mobile) {\n      return false;\n    } else {\n      return document.querySelector('#janus-extension-installed') !== null;\n    }\n  },\n  getScreen: function (callback) {\n    if (Janus.mobile) {\n      callback();\n    } else {\n      let pending = window.setTimeout(function () {\n        let error = new Error('NavigatorUserMediaError');\n        error.name =\n          'The required Chrome extension is not installed: click <a href=\"#\">here</a> to install it. (NOTE: this will need you to refresh the page)';\n        return callback(error);\n      }, 1000);\n      this.cache[pending] = callback;\n      window.postMessage({ type: 'janusGetScreen', id: pending }, '*');\n    }\n  },\n  init: function () {\n    let cache = {};\n    this.cache = cache;\n    // Wait for events from the Chrome Extension\n    if (!Janus.mobile) {\n      window.addEventListener('message', function (event) {\n        if (event.origin != window.location.origin) return;\n        if (event.data.type == 'janusGotScreen' && cache[event.data.id]) {\n          let callback = cache[event.data.id];\n          delete cache[event.data.id];\n          if (event.data.sourceId === '') {\n            // user canceled\n            let error = new Error('NavigatorUserMediaError');\n            error.name = 'You cancelled the request for permission, giving up...';\n            callback(error);\n          } else {\n            callback(null, event.data.sourceId);\n          }\n        } else if (event.data.type == 'janusGetScreenPending') {\n          window.clearTimeout(event.data.id);\n        }\n      });\n    }\n  },\n};\n\nJanus.useDefaultDependencies = function (deps) {\n  let f = (deps && deps.fetch) || fetch;\n  let p = (deps && deps.Promise) || Promise;\n  let socketCls = (deps && deps.WebSocket) || WebSocket;\n\n  return {\n    newWebSocket: function (server, proto) {\n      return new socketCls(server, proto);\n    },\n    extension: (deps && deps.extension) || defaultExtension,\n    isArray: function (arr) {\n      return Array.isArray(arr);\n    },\n    webRTCAdapter: (deps && deps.adapter) || adapter,\n    httpAPICall: function (url, options) {\n      let fetchOptions = {\n        method: options.verb,\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n        },\n        cache: 'no-cache',\n      };\n      if (options.verb === 'POST') {\n        fetchOptions.headers['Content-Type'] = 'application/json';\n      }\n      if (typeof options.withCredentials !== 'undefined') {\n        fetchOptions.credentials =\n          options.withCredentials === true ? 'include' : options.withCredentials ? options.withCredentials : 'omit';\n      }\n      if (options.body) {\n        fetchOptions.body = JSON.stringify(options.body);\n      }\n\n      let fetching = f(url, fetchOptions).catch(function (error) {\n        return p.reject({\n          message: 'Probably a network error, is the server down?',\n          error: error,\n        });\n      });\n\n      /*\n       * fetch() does not natively support timeouts.\n       * Work around this by starting a timeout manually, and racing it agains the fetch() to see which thing resolves first.\n       */\n\n      if (options.timeout) {\n        let timeout = new p(function (resolve, reject) {\n          let timerId = setTimeout(function () {\n            clearTimeout(timerId);\n            return reject({\n              message: 'Request timed out',\n              timeout: options.timeout,\n            });\n          }, options.timeout);\n        });\n        fetching = p.race([fetching, timeout]);\n      }\n\n      fetching\n        .then(function (response) {\n          if (response.ok) {\n            if (typeof options.success === typeof Janus.noop) {\n              return response.json().then(\n                function (parsed) {\n                  try {\n                    options.success(parsed);\n                  } catch (error) {\n                    Janus.error('Unhandled httpAPICall success callback error', error);\n                  }\n                },\n                function (error) {\n                  return p.reject({\n                    message: 'Failed to parse response body',\n                    error: error,\n                    response: response,\n                  });\n                }\n              );\n            }\n          } else {\n            return p.reject({ message: 'API call failed', response: response });\n          }\n        })\n        .catch(function (error) {\n          if (typeof options.error === typeof Janus.noop) {\n            options.error(error.message || '<< internal error >>', error);\n          }\n        });\n\n      return fetching;\n    },\n  };\n};\n\nJanus.useOldDependencies = function (deps) {\n  let jq = (deps && deps.jQuery) || jQuery;\n  let socketCls = (deps && deps.WebSocket) || WebSocket;\n  return {\n    newWebSocket: function (server, proto) {\n      return new socketCls(server, proto);\n    },\n    isArray: function (arr) {\n      return jq.isArray(arr);\n    },\n    extension: (deps && deps.extension) || defaultExtension,\n    webRTCAdapter: (deps && deps.adapter) || adapter,\n    httpAPICall: function (url, options) {\n      let payload =\n        typeof options.body !== 'undefined'\n          ? {\n            contentType: 'application/json',\n            data: JSON.stringify(options.body),\n          }\n          : {};\n      let credentials =\n        typeof options.withCredentials !== 'undefined'\n          ? { xhrFields: { withCredentials: options.withCredentials } }\n          : {};\n\n      return jq.ajax(\n        jq.extend(payload, credentials, {\n          url: url,\n          type: options.verb,\n          cache: false,\n          dataType: 'json',\n          async: options.async,\n          timeout: options.timeout,\n          success: function (result) {\n            if (typeof options.success === typeof Janus.noop) {\n              options.success(result);\n            }\n          },\n          error: function (xhr, status, err) {\n            if (typeof options.error === typeof Janus.noop) {\n              options.error(status, err);\n            }\n          },\n        })\n      );\n    },\n  };\n};\n\n// Helper function to convert a deprecated media object to a tracks array\nJanus.mediaToTracks = function (media) {\n  let tracks = [];\n  if (!media) {\n    // Default is bidirectional audio and video, using default devices\n    tracks.push({ type: 'audio', capture: true, recv: true });\n    tracks.push({ type: 'video', capture: true, recv: true });\n  } else {\n    if (\n      !media.keepAudio &&\n      media.audio !== false &&\n      (typeof media.audio === 'undefined' ||\n        media.audio ||\n        media.audioSend ||\n        media.audioRecv ||\n        media.addAudio ||\n        media.replaceAudio ||\n        media.removeAudio)\n    ) {\n      // We may need an audio track\n      let track = { type: 'audio' };\n      if (media.removeAudio) {\n        track.remove = true;\n      } else {\n        if (media.addAudio) track.add = true;\n        else if (media.replaceAudio) track.replace = true;\n        // Check if we need to capture an audio device\n        if (media.audioSend !== false) track.capture = media.audio || true;\n        // Check if we need to receive audio\n        if (media.audioRecv !== false) track.recv = true;\n      }\n      // Add an audio track if needed\n      if (track.remove || track.capture || track.recv) tracks.push(track);\n    }\n    if (\n      !media.keepVideo &&\n      media.video !== false &&\n      (typeof media.video === 'undefined' ||\n        media.video ||\n        media.videoSend ||\n        media.videoRecv ||\n        media.addVideo ||\n        media.replaceVideo ||\n        media.removeVideo)\n    ) {\n      // We may need a video track\n      let track = { type: 'video' };\n      if (media.removeVideo) {\n        track.remove = true;\n      } else {\n        if (media.addVideo) track.add = true;\n        else if (media.replaceVideo) track.replace = true;\n        // Check if we need to capture a video device\n        if (media.videoSend !== false) {\n          track.capture = media.video || true;\n          if (['screen', 'window', 'desktop'].includes(track.capture)) {\n            // Change the type to 'screen'\n            track.type = 'screen';\n            track.capture = { video: {} };\n            // Check if there's constraints\n            if (media.screenshareFrameRate) track.capture.frameRate = media.screenshareFrameRate;\n            if (media.screenshareHeight) track.capture.height = media.screenshareHeight;\n            if (media.screenshareWidth) track.capture.width = media.screenshareWidth;\n          }\n        }\n        // Check if we need to receive video\n        if (media.videoRecv !== false) track.recv = true;\n      }\n      // Add a video track if needed\n      if (track.remove || track.capture || track.recv) tracks.push(track);\n    }\n    if (media.data) {\n      // We need a data channel\n      tracks.push({ type: 'data' });\n    }\n  }\n  // Done\n  return tracks;\n};\n\n// Helper function to convert a track object to a set of constraints\nJanus.trackConstraints = function (track) {\n  let constraints = {};\n  if (!track || !track.capture) return constraints;\n  if (track.type === 'audio') {\n    // Just put the capture part in the constraints\n    constraints.audio = track.capture;\n  } else if (track.type === 'video') {\n    // Check if one of the keywords was passed\n    if ((track.simulcast || track.svc) && track.capture === true) track.capture = 'hires';\n    if (track.capture === true || typeof track.capture === 'object') {\n      // Use the provided capture object as video constraint\n      constraints.video = track.capture;\n    } else {\n      let width = 0;\n      let height = 0;\n      if (track.capture === 'lowres') {\n        // Small resolution, 4:3\n        width = 320;\n        height = 240;\n      } else if (track.capture === 'lowres-16:9') {\n        // Small resolution, 16:9\n        width = 320;\n        height = 180;\n      } else if (track.capture === 'hires' || track.capture === 'hires-16:9' || track.capture === 'hdres') {\n        // High(HD) resolution is only 16:9\n        width = 1280;\n        height = 720;\n      } else if (track.capture === 'fhdres') {\n        // Full HD resolution is only 16:9\n        width = 1920;\n        height = 1080;\n      } else if (track.capture === '4kres') {\n        // 4K resolution is only 16:9\n        width = 3840;\n        height = 2160;\n      } else if (track.capture === 'stdres') {\n        // Normal resolution, 4:3\n        width = 640;\n        height = 480;\n      } else if (track.capture === 'stdres-16:9') {\n        // Normal resolution, 16:9\n        width = 640;\n        height = 360;\n      } else {\n        Janus.log('Default video setting is stdres 4:3');\n        width = 640;\n        height = 480;\n      }\n      constraints.video = {\n        width: { ideal: width },\n        height: { ideal: height },\n      };\n    }\n  } else if (track.type === 'screen') {\n    // Use the provided capture object as video constraint\n    constraints.video = track.capture;\n  }\n  return constraints;\n};\n\nJanus.noop = function () { };\n\nJanus.dataChanDefaultLabel = 'JanusDataChannel';\n\n// Note: in the future we may want to change this, e.g., as was\n// attempted in https://github.com/meetecho/janus-gateway/issues/1670\nJanus.endOfCandidates = null;\n\n// Stop all tracks from a given stream\nJanus.stopAllTracks = function (stream) {\n  try {\n    // Try a MediaStreamTrack.stop() for each track\n    let tracks = stream.getTracks();\n    for (let mst of tracks) {\n      Janus.log(mst);\n      if (mst && mst.dontStop !== true) {\n        mst.stop();\n      }\n    }\n  } catch (e) {\n    // Do nothing if this fails\n  }\n};\n\n// Initialization\nJanus.init = function (options) {\n  options = options || {};\n  options.callback = typeof options.callback == 'function' ? options.callback : Janus.noop;\n  if (Janus.initDone) {\n    // Already initialized\n    options.callback();\n  } else {\n    if (typeof console.log == 'undefined') {\n      console.log = function () { };\n    }\n    // Console logging (all debugging disabled by default)\n    Janus.trace = Janus.noop;\n    Janus.debug = Janus.noop;\n    Janus.vdebug = Janus.noop;\n    Janus.log = Janus.noop;\n    Janus.warn = Janus.noop;\n    Janus.error = Janus.noop;\n    if (options.debug === true || options.debug === 'all') {\n      // Enable all debugging levels\n      Janus.trace = console.trace.bind(console);\n      Janus.debug = console.debug.bind(console);\n      Janus.vdebug = console.debug.bind(console);\n      Janus.log = console.log.bind(console);\n      Janus.warn = console.warn.bind(console);\n      Janus.error = console.error.bind(console);\n    } else if (Array.isArray(options.debug)) {\n      for (let d of options.debug) {\n        switch (d) {\n          case 'trace':\n            Janus.trace = console.trace.bind(console);\n            break;\n          case 'debug':\n            Janus.debug = console.debug.bind(console);\n            break;\n          case 'vdebug':\n            Janus.vdebug = console.debug.bind(console);\n            break;\n          case 'log':\n            Janus.log = console.log.bind(console);\n            break;\n          case 'warn':\n            Janus.warn = console.warn.bind(console);\n            break;\n          case 'error':\n            Janus.error = console.error.bind(console);\n            break;\n          default:\n            console.error(\n              \"Unknown debugging option '\" + d + \"' (supported: 'trace', 'debug', 'vdebug', 'log', warn', 'error')\"\n            );\n            break;\n        }\n      }\n    }\n    Janus.log('Initializing library');\n\n    let usedDependencies = options.dependencies || Janus.useDefaultDependencies();\n    Janus.isArray = usedDependencies.isArray;\n    Janus.webRTCAdapter = usedDependencies.webRTCAdapter;\n    Janus.httpAPICall = usedDependencies.httpAPICall;\n    Janus.newWebSocket = usedDependencies.newWebSocket;\n    Janus.extension = usedDependencies.extension;\n    Janus.extension.init();\n\n    // Helper method to enumerate devices\n    Janus.listDevices = function (callback, config) {\n      callback = typeof callback == 'function' ? callback : Janus.noop;\n      if (!config) config = { audio: true, video: true };\n      if (Janus.isGetUserMediaAvailable()) {\n        navigator.mediaDevices\n          .getUserMedia(config)\n          .then(function (stream) {\n            navigator.mediaDevices.enumerateDevices().then(function (devices) {\n              Janus.debug(devices);\n              callback(devices);\n              // Get rid of the now useless stream\n              Janus.stopAllTracks(stream);\n            });\n          })\n          .catch(function (err) {\n            Janus.error(err);\n            callback([]);\n          });\n      } else {\n        Janus.warn('navigator.mediaDevices unavailable');\n        callback([]);\n      }\n    };\n    // Helper methods to attach/reattach a stream to a video element (previously part of adapter.js)\n    // Janus.attachMediaStream = function(element, stream) {\n    // \ttry {\n    // \t\telement.srcObject = stream;\n    // \t} catch (e) {\n    // \t\ttry {\n    // \t\t\telement.src = URL.createObjectURL(stream);\n    // \t\t} catch (e) {\n    // \t\t\tJanus.error(\"Error attaching stream to element\", e);\n    // \t\t}\n    // \t}\n    // };\n    // Janus.reattachMediaStream = function(to, from) {\n    // \ttry {\n    // \t\tto.srcObject = from.srcObject;\n    // \t} catch (e) {\n    // \t\ttry {\n    // \t\t\tto.src = from.src;\n    // \t\t} catch (e) {\n    // \t\t\tJanus.error(\"Error reattaching stream to element\", e);\n    // \t\t}\n    // \t}\n    // };\n    // Detect tab close: make sure we don't loose existing onbeforeunload handlers\n    // (note: for iOS we need to subscribe to a different event, 'pagehide', see\n    // https://gist.github.com/thehunmonkgroup/6bee8941a49b86be31a787fe8f4b8cfe)\n    // let iOS = ['iPad', 'iPhone', 'iPod'].indexOf(navigator.platform) >= 0;\n    // let eventName = iOS ? 'pagehide' : 'beforeunload';\n    // let oldOBF = window[\"on\" + eventName];\n    // window.addEventListener(eventName, function() {\n    // \tJanus.log(\"Closing window\");\n    // \tfor(let s in Janus.sessions) {\n    // \t\tif(Janus.sessions[s] && Janus.sessions[s].destroyOnUnload) {\n    // \t\t\tJanus.log(\"Destroying session \" + s);\n    // \t\t\tJanus.sessions[s].destroy({unload: true, notifyDestroyed: false});\n    // \t\t}\n    // \t}\n    // \tif(oldOBF && typeof oldOBF == \"function\") {\n    // \t\toldOBF();\n    // \t}\n    // });\n    // If this is a Safari Technology Preview, check if VP8 is supported\n    Janus.safariVp8 = false;\n    if (Janus.webRTCAdapter.browserDetails.browser === 'safari' && Janus.webRTCAdapter.browserDetails.version >= 605) {\n      // Let's see if RTCRtpSender.getCapabilities() is there\n      if (\n        RTCRtpSender &&\n        RTCRtpSender.getCapabilities &&\n        RTCRtpSender.getCapabilities('video') &&\n        RTCRtpSender.getCapabilities('video').codecs &&\n        RTCRtpSender.getCapabilities('video').codecs.length\n      ) {\n        for (let codec of RTCRtpSender.getCapabilities('video').codecs) {\n          if (codec && codec.mimeType && codec.mimeType.toLowerCase() === 'video/vp8') {\n            Janus.safariVp8 = true;\n            break;\n          }\n        }\n        if (Janus.safariVp8) {\n          Janus.log('This version of Safari supports VP8');\n        } else {\n          Janus.warn(\n            \"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n            \"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\"\n          );\n        }\n      } else {\n        // We do it in a very ugly way, as there's no alternative...\n        // We create a PeerConnection to see if VP8 is in an offer\n        let testpc = new RTCPeerConnection({});\n        testpc.createOffer({ offerToReceiveVideo: true }).then(function (offer) {\n          Janus.safariVp8 = offer.sdp.indexOf('VP8') !== -1;\n          if (Janus.safariVp8) {\n            Janus.log('This version of Safari supports VP8');\n          } else {\n            Janus.warn(\n              \"This version of Safari does NOT support VP8: if you're using a Technology Preview, \" +\n              \"try enabling the 'WebRTC VP8 codec' setting in the 'Experimental Features' Develop menu\"\n            );\n          }\n          testpc.close();\n          testpc = null;\n        });\n      }\n    }\n    Janus.initDone = true;\n    options.callback();\n  }\n};\n\n// Helper method to check whether WebRTC is supported by this browser\nJanus.isWebrtcSupported = function () {\n  return !!RTCPeerConnection;\n};\n// Helper method to check whether devices can be accessed by this browser (e.g., not possible via plain HTTP)\nJanus.isGetUserMediaAvailable = function () {\n  return navigator.mediaDevices && navigator.mediaDevices.getUserMedia;\n};\n\n// Helper method to create random identifiers (e.g., transaction)\nJanus.randomString = function (len) {\n  let charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let randomString = '';\n  for (let i = 0; i < len; i++) {\n    let randomPoz = Math.floor(Math.random() * charSet.length);\n    randomString += charSet.charAt(randomPoz);\n  }\n  return randomString;\n};\n\nfunction Janus(gatewayCallbacks) {\n  gatewayCallbacks = gatewayCallbacks || {};\n  gatewayCallbacks.success = typeof gatewayCallbacks.success == 'function' ? gatewayCallbacks.success : Janus.noop;\n  gatewayCallbacks.error = typeof gatewayCallbacks.error == 'function' ? gatewayCallbacks.error : Janus.noop;\n  gatewayCallbacks.destroyed =\n    typeof gatewayCallbacks.destroyed == 'function' ? gatewayCallbacks.destroyed : Janus.noop;\n  if (!Janus.initDone) {\n    gatewayCallbacks.error('Library not initialized');\n    return {};\n  }\n  if (!Janus.isWebrtcSupported()) {\n    gatewayCallbacks.error('WebRTC not supported by this browser');\n    return {};\n  }\n  Janus.log('Library initialized: ' + Janus.initDone);\n  if (!gatewayCallbacks.server) {\n    gatewayCallbacks.error('Invalid server url');\n    return {};\n  }\n  let websockets = false;\n  let ws = null;\n  let wsHandlers = {};\n  let wsKeepaliveTimeoutId = null;\n  let servers = null;\n  let serversIndex = 0;\n  let server = gatewayCallbacks.server;\n  if (Janus.isArray(server)) {\n    Janus.log('Multiple servers provided (' + server.length + '), will use the first that works');\n    server = null;\n    servers = gatewayCallbacks.server;\n    Janus.debug(servers);\n  } else {\n    if (server.indexOf('ws') === 0) {\n      websockets = true;\n      Janus.log('Using WebSockets to contact Janus: ' + server);\n    } else {\n      websockets = false;\n      Janus.log('Using REST API to contact Janus: ' + server);\n    }\n  }\n  let iceServers = gatewayCallbacks.iceServers || [{ urls: 'stun:stun.l.google.com:19302' }];\n  let iceTransportPolicy = gatewayCallbacks.iceTransportPolicy;\n  let bundlePolicy = gatewayCallbacks.bundlePolicy;\n  // Whether we should enable the withCredentials flag for XHR requests\n  let withCredentials = false;\n  if (typeof gatewayCallbacks.withCredentials !== 'undefined' && gatewayCallbacks.withCredentials !== null)\n    withCredentials = gatewayCallbacks.withCredentials === true;\n  // Optional max events\n  let maxev = 10;\n  if (typeof gatewayCallbacks.max_poll_events !== 'undefined' && gatewayCallbacks.max_poll_events !== null)\n    maxev = gatewayCallbacks.max_poll_events;\n  if (maxev < 1) maxev = 1;\n  // Token to use (only if the token based authentication mechanism is enabled)\n  let token = null;\n  if (typeof gatewayCallbacks.token !== 'undefined' && gatewayCallbacks.token !== null) token = gatewayCallbacks.token;\n  // API secret to use (only if the shared API secret is enabled)\n  let apisecret = null;\n  if (typeof gatewayCallbacks.apisecret !== 'undefined' && gatewayCallbacks.apisecret !== null)\n    apisecret = gatewayCallbacks.apisecret;\n  // Whether we should destroy this session when onbeforeunload is called\n  this.destroyOnUnload = true;\n  if (typeof gatewayCallbacks.destroyOnUnload !== 'undefined' && gatewayCallbacks.destroyOnUnload !== null)\n    this.destroyOnUnload = gatewayCallbacks.destroyOnUnload === true;\n  // Some timeout-related values\n  let keepAlivePeriod = 25000;\n  if (typeof gatewayCallbacks.keepAlivePeriod !== 'undefined' && gatewayCallbacks.keepAlivePeriod !== null)\n    keepAlivePeriod = gatewayCallbacks.keepAlivePeriod;\n  if (isNaN(keepAlivePeriod)) keepAlivePeriod = 25000;\n  let longPollTimeout = 60000;\n  if (typeof gatewayCallbacks.longPollTimeout !== 'undefined' && gatewayCallbacks.longPollTimeout !== null)\n    longPollTimeout = gatewayCallbacks.longPollTimeout;\n  if (isNaN(longPollTimeout)) longPollTimeout = 60000;\n\n  // overrides for default maxBitrate values for simulcasting\n  function getMaxBitrates(simulcastMaxBitrates) {\n    let maxBitrates = {\n      high: 900000,\n      medium: 300000,\n      low: 100000,\n    };\n\n    if (typeof simulcastMaxBitrates !== 'undefined' && simulcastMaxBitrates !== null) {\n      if (simulcastMaxBitrates.high) maxBitrates.high = simulcastMaxBitrates.high;\n      if (simulcastMaxBitrates.medium) maxBitrates.medium = simulcastMaxBitrates.medium;\n      if (simulcastMaxBitrates.low) maxBitrates.low = simulcastMaxBitrates.low;\n    }\n\n    return maxBitrates;\n  }\n\n  let connected = false;\n  let sessionId = null;\n  let pluginHandles = {};\n  let that = this;\n  let retries = 0;\n  let transactions = {};\n  createSession(gatewayCallbacks);\n\n  // Public methods\n  this.getServer = function () {\n    return server;\n  };\n  this.isConnected = function () {\n    return connected;\n  };\n  this.reconnect = function (callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    callbacks['reconnect'] = true;\n    createSession(callbacks);\n  };\n  this.getSessionId = function () {\n    return sessionId;\n  };\n  this.getInfo = function (callbacks) {\n    getInfo(callbacks);\n  };\n  this.destroy = function (callbacks) {\n    destroySession(callbacks);\n  };\n  this.attach = function (callbacks) {\n    createHandle(callbacks);\n  };\n\n  function eventHandler() {\n    if (sessionId == null) return;\n    Janus.debug('Long poll...');\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      return;\n    }\n    let longpoll = server + '/' + sessionId + '?rid=' + new Date().getTime();\n    if (maxev) longpoll = longpoll + '&maxev=' + maxev;\n    if (token) longpoll = longpoll + '&token=' + encodeURIComponent(token);\n    if (apisecret) longpoll = longpoll + '&apisecret=' + encodeURIComponent(apisecret);\n    Janus.httpAPICall(longpoll, {\n      verb: 'GET',\n      withCredentials: withCredentials,\n      success: handleEvent,\n      timeout: longPollTimeout,\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown);\n        retries++;\n        if (retries > 3) {\n          // Did we just lose the server? :-(\n          connected = false;\n          gatewayCallbacks.error('Lost connection to the server (is it down?)');\n          return;\n        }\n        eventHandler();\n      },\n    });\n  }\n\n  // Private event handler: this will trigger plugin callbacks, if set\n  function handleEvent(json, skipTimeout) {\n    retries = 0;\n    if (!websockets && typeof sessionId !== 'undefined' && sessionId !== null && skipTimeout !== true) eventHandler();\n    if (!websockets && Janus.isArray(json)) {\n      // We got an array: it means we passed a maxev > 1, iterate on all objects\n      for (let i = 0; i < json.length; i++) {\n        handleEvent(json[i], true);\n      }\n      return;\n    }\n    if (json['janus'] === 'keepalive') {\n      // Nothing happened\n      Janus.vdebug('Got a keepalive on session ' + sessionId);\n      return;\n    } else if (json['janus'] === 'server_info') {\n      // Just info on the Janus instance\n      Janus.debug('Got info on the Janus instance');\n      Janus.debug(json);\n      const transaction = json['transaction'];\n      if (transaction) {\n        const reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n      return;\n    } else if (json['janus'] === 'ack') {\n      // Just an ack, we can probably ignore\n      Janus.debug('Got an ack on session ' + sessionId);\n      Janus.debug(json);\n      const transaction = json['transaction'];\n      if (transaction) {\n        const reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n      return;\n    } else if (json['janus'] === 'success') {\n      // Success!\n      Janus.debug('Got a success on session ' + sessionId);\n      Janus.debug(json);\n      const transaction = json['transaction'];\n      if (transaction) {\n        const reportSuccess = transactions[transaction];\n        if (reportSuccess) reportSuccess(json);\n        delete transactions[transaction];\n      }\n      return;\n    } else if (json['janus'] === 'trickle') {\n      // We got a trickle candidate from Janus\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        Janus.debug('This handle is not attached to this session');\n        return;\n      }\n      let candidate = json['candidate'];\n      Janus.debug('Got a trickled candidate on session ' + sessionId);\n      Janus.debug(candidate);\n      let config = pluginHandle.webrtcStuff;\n      if (config.pc && config.remoteSdp) {\n        // Add candidate right now\n        Janus.debug('Adding remote candidate:', candidate);\n        if (!candidate || candidate.completed === true) {\n          // end-of-candidates\n          config.pc.addIceCandidate(Janus.endOfCandidates);\n        } else {\n          // New candidate\n          config.pc.addIceCandidate(candidate);\n        }\n      } else {\n        // We didn't do setRemoteDescription (trickle got here before the offer?)\n        Janus.debug(\"We didn't do setRemoteDescription (trickle got here before the offer?), caching candidate\");\n        if (!config.candidates) config.candidates = [];\n        config.candidates.push(candidate);\n        Janus.debug(config.candidates);\n      }\n    } else if (json['janus'] === 'webrtcup') {\n      // The PeerConnection with the server is up! Notify this\n      Janus.debug('Got a webrtcup event on session ' + sessionId);\n      Janus.debug(json);\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        Janus.debug('This handle is not attached to this session');\n        return;\n      }\n      pluginHandle.webrtcState(true);\n      return;\n    } else if (json['janus'] === 'hangup') {\n      // A plugin asked the core to hangup a PeerConnection on one of our handles\n      Janus.debug('Got a hangup event on session ' + sessionId);\n      Janus.debug(json);\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        Janus.debug('This handle is not attached to this session');\n        return;\n      }\n      pluginHandle.webrtcState(false, json['reason']);\n      pluginHandle.hangup();\n    } else if (json['janus'] === 'detached') {\n      // A plugin asked the core to detach one of our handles\n      Janus.debug('Got a detached event on session ' + sessionId);\n      Janus.debug(json);\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        // Don't warn here because destroyHandle causes this situation.\n        return;\n      }\n      pluginHandle.ondetached();\n      pluginHandle.detach();\n    } else if (json['janus'] === 'media') {\n      // Media started/stopped flowing\n      Janus.debug('Got a media event on session ' + sessionId);\n      Janus.debug(json);\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        Janus.debug('This handle is not attached to this session');\n        return;\n      }\n      pluginHandle.mediaState(json['type'], json['receiving'], json['mid']);\n    } else if (json['janus'] === 'slowlink') {\n      Janus.debug('Got a slowlink event on session ' + sessionId);\n      Janus.debug(json);\n      // Trouble uplink or downlink\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        Janus.debug('This handle is not attached to this session');\n        return;\n      }\n      pluginHandle.slowLink(json['uplink'], json['lost'], json['mid']);\n    } else if (json['janus'] === 'error') {\n      // Oops, something wrong happened\n      Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n      Janus.debug(json);\n      let transaction = json['transaction'];\n      if (transaction) {\n        let reportSuccess = transactions[transaction];\n        if (reportSuccess) {\n          reportSuccess(json);\n        }\n        delete transactions[transaction];\n      }\n      return;\n    } else if (json['janus'] === 'event') {\n      Janus.debug('Got a plugin event on session ' + sessionId);\n      Janus.debug(json);\n      const sender = json['sender'];\n      if (!sender) {\n        Janus.warn('Missing sender...');\n        return;\n      }\n      let plugindata = json['plugindata'];\n      if (!plugindata) {\n        Janus.warn('Missing plugindata...');\n        return;\n      }\n      Janus.debug('  -- Event is coming from ' + sender + ' (' + plugindata['plugin'] + ')');\n      let data = plugindata['data'];\n      Janus.debug(data);\n      const pluginHandle = pluginHandles[sender];\n      if (!pluginHandle) {\n        Janus.warn('This handle is not attached to this session');\n        return;\n      }\n      let jsep = json['jsep'];\n      if (jsep) {\n        Janus.debug('Handling SDP as well...');\n        Janus.debug(jsep);\n      }\n      let callback = pluginHandle.onmessage;\n      if (callback) {\n        Janus.debug('Notifying application...');\n        // Send to callback specified when attaching plugin handle\n        callback(data, jsep);\n      } else {\n        // Send to generic callback (?)\n        Janus.debug('No provided notification callback');\n      }\n    } else if (json['janus'] === 'timeout') {\n      Janus.error('Timeout on session ' + sessionId);\n      Janus.debug(json);\n      if (websockets) {\n        ws.close(3504, 'Gateway timeout');\n      }\n      return;\n    } else {\n      Janus.warn(\"Unknown message/event  '\" + json['janus'] + \"' on session \" + sessionId);\n      Janus.debug(json);\n    }\n  }\n\n  // Private helper to send keep-alive messages on WebSockets\n  function keepAlive() {\n    if (!server || !websockets || !connected) return;\n    wsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n    let request = {\n      janus: 'keepalive',\n      session_id: sessionId,\n      transaction: Janus.randomString(12),\n    };\n    if (token) request['token'] = token;\n    if (apisecret) request['apisecret'] = apisecret;\n    ws.send(JSON.stringify(request));\n  }\n\n  // Private method to create a session\n  function createSession(callbacks) {\n    let transaction = Janus.randomString(12);\n    let request = { janus: 'create', transaction: transaction };\n    if (callbacks['reconnect']) {\n      // We're reconnecting, claim the session\n      connected = false;\n      request['janus'] = 'claim';\n      request['session_id'] = sessionId;\n      // If we were using websockets, ignore the old connection\n      if (ws) {\n        ws.onopen = null;\n        ws.onerror = null;\n        ws.onclose = null;\n        if (wsKeepaliveTimeoutId) {\n          clearTimeout(wsKeepaliveTimeoutId);\n          wsKeepaliveTimeoutId = null;\n        }\n      }\n    }\n    if (token) request['token'] = token;\n    if (apisecret) request['apisecret'] = apisecret;\n    if (!server && Janus.isArray(servers)) {\n      // We still need to find a working server from the list we were given\n      server = servers[serversIndex];\n      if (server.indexOf('ws') === 0) {\n        websockets = true;\n        Janus.log('Server #' + (serversIndex + 1) + ': trying WebSockets to contact Janus (' + server + ')');\n      } else {\n        websockets = false;\n        Janus.log('Server #' + (serversIndex + 1) + ': trying REST API to contact Janus (' + server + ')');\n      }\n    }\n    if (websockets) {\n      ws = Janus.newWebSocket(server, 'janus-protocol');\n      wsHandlers = {\n        error: function () {\n          Janus.error('Error connecting to the Janus WebSockets server... ' + server);\n          if (Janus.isArray(servers) && !callbacks['reconnect']) {\n            serversIndex++;\n            if (serversIndex === servers.length) {\n              // We tried all the servers the user gave us and they all failed\n              callbacks.error('Error connecting to any of the provided Janus servers: Is the server down?');\n              return;\n            }\n            // Let's try the next server\n            server = null;\n            setTimeout(function () {\n              createSession(callbacks);\n            }, 200);\n            return;\n          }\n          callbacks.error('Error connecting to the Janus WebSockets server: Is the server down?');\n        },\n\n        open: function () {\n          // We need to be notified about the success\n          transactions[transaction] = function (json) {\n            Janus.debug(json);\n            if (json['janus'] !== 'success') {\n              Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n              callbacks.error(json['error'].reason);\n              return;\n            }\n            wsKeepaliveTimeoutId = setTimeout(keepAlive, keepAlivePeriod);\n            connected = true;\n            sessionId = json['session_id'] ? json['session_id'] : json.data['id'];\n            if (callbacks['reconnect']) {\n              Janus.log('Claimed session: ' + sessionId);\n            } else {\n              Janus.log('Created session: ' + sessionId);\n            }\n            Janus.sessions[sessionId] = that;\n            callbacks.success();\n          };\n          ws.send(JSON.stringify(request));\n        },\n\n        message: function (event) {\n          handleEvent(JSON.parse(event.data));\n        },\n\n        close: function () {\n          if (!server || !connected) {\n            return;\n          }\n          connected = false;\n          // FIXME What if this is called when the page is closed?\n          gatewayCallbacks.error('Lost connection to the server (is it down?)');\n        },\n      };\n\n      for (let eventName in wsHandlers) {\n        ws.addEventListener(eventName, wsHandlers[eventName]);\n      }\n\n      return;\n    }\n    Janus.httpAPICall(server, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.debug(json);\n        if (json['janus'] !== 'success') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n          callbacks.error(json['error'].reason);\n          return;\n        }\n        connected = true;\n        sessionId = json['session_id'] ? json['session_id'] : json.data['id'];\n        if (callbacks['reconnect']) {\n          Janus.log('Claimed session: ' + sessionId);\n        } else {\n          Janus.log('Created session: ' + sessionId);\n        }\n        Janus.sessions[sessionId] = that;\n        eventHandler();\n        callbacks.success();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n        if (Janus.isArray(servers) && !callbacks['reconnect']) {\n          serversIndex++;\n          if (serversIndex === servers.length) {\n            // We tried all the servers the user gave us and they all failed\n            callbacks.error('Error connecting to any of the provided Janus servers: Is the server down?');\n            return;\n          }\n          // Let's try the next server\n          server = null;\n          setTimeout(function () {\n            createSession(callbacks);\n          }, 200);\n          return;\n        }\n        if (errorThrown === '') callbacks.error(textStatus + ': Is the server down?');\n        else if (errorThrown && errorThrown.error) callbacks.error(textStatus + ': ' + errorThrown.error.message);\n        else callbacks.error(textStatus + ': ' + errorThrown);\n      },\n    });\n  }\n\n  // Private method to get info on the server\n  function getInfo(callbacks) {\n    callbacks = callbacks || {};\n    // FIXME This method triggers a success even when we fail\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    Janus.log('Getting info on Janus instance');\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      callbacks.error('Is the server down? (connected=false)');\n      return;\n    }\n    // We just need to send an \"info\" request\n    let transaction = Janus.randomString(12);\n    let request = { janus: 'info', transaction: transaction };\n    if (token) request['token'] = token;\n    if (apisecret) request['apisecret'] = apisecret;\n    if (websockets) {\n      transactions[transaction] = function (json) {\n        Janus.log('Server info:');\n        Janus.debug(json);\n        if (json['janus'] !== 'server_info') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n        }\n        callbacks.success(json);\n      };\n      ws.send(JSON.stringify(request));\n      return;\n    }\n    Janus.httpAPICall(server, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.log('Server info:');\n        Janus.debug(json);\n        if (json['janus'] !== 'server_info') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n        }\n        callbacks.success(json);\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n        if (errorThrown === '') callbacks.error(textStatus + ': Is the server down?');\n        else callbacks.error(textStatus + ': ' + errorThrown);\n      },\n    });\n  }\n\n  // Private method to destroy a session\n  function destroySession(callbacks) {\n    callbacks = callbacks || {};\n    // FIXME This method triggers a success even when we fail\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    let unload = callbacks.unload === true;\n    let notifyDestroyed = true;\n    if (typeof callbacks.notifyDestroyed !== 'undefined' && callbacks.notifyDestroyed !== null)\n      notifyDestroyed = callbacks.notifyDestroyed === true;\n    let cleanupHandles = callbacks.cleanupHandles === true;\n    Janus.log('Destroying session ' + sessionId + ' (unload=' + unload + ')');\n    if (!sessionId) {\n      Janus.warn('No session to destroy');\n      callbacks.success();\n      if (notifyDestroyed) gatewayCallbacks.destroyed();\n      return;\n    }\n    if (cleanupHandles) {\n      for (let handleId in pluginHandles) destroyHandle(handleId, { noRequest: true });\n    }\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      sessionId = null;\n      callbacks.success();\n      return;\n    }\n    // No need to destroy all handles first, Janus will do that itself\n    let request = { janus: 'destroy', transaction: Janus.randomString(12) };\n    if (token) request['token'] = token;\n    if (apisecret) request['apisecret'] = apisecret;\n    if (unload) {\n      // We're unloading the page: use sendBeacon for HTTP instead,\n      // or just close the WebSocket connection if we're using that\n      if (websockets) {\n        ws.onclose = null;\n        ws.close();\n        ws = null;\n      } else {\n        navigator.sendBeacon(server + '/' + sessionId, JSON.stringify(request));\n      }\n      Janus.log('Destroyed session:');\n      sessionId = null;\n      connected = false;\n      callbacks.success();\n      if (notifyDestroyed) gatewayCallbacks.destroyed();\n      return;\n    }\n    if (websockets) {\n      request['session_id'] = sessionId;\n\n      let unbindWebSocket = function () {\n        for (let eventName in wsHandlers) {\n          ws.removeEventListener(eventName, wsHandlers[eventName]);\n        }\n        ws.removeEventListener('message', onUnbindMessage);\n        ws.removeEventListener('error', onUnbindError);\n        if (wsKeepaliveTimeoutId) {\n          clearTimeout(wsKeepaliveTimeoutId);\n        }\n        ws.close();\n      };\n\n      let onUnbindMessage = function (event) {\n        let data = JSON.parse(event.data);\n        if (data.session_id == request.session_id && data.transaction == request.transaction) {\n          unbindWebSocket();\n          callbacks.success();\n          if (notifyDestroyed) gatewayCallbacks.destroyed();\n        }\n      };\n      let onUnbindError = function () {\n        unbindWebSocket();\n        callbacks.error('Failed to destroy the server: Is the server down?');\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      };\n\n      ws.addEventListener('message', onUnbindMessage);\n      ws.addEventListener('error', onUnbindError);\n\n      if (ws.readyState === 1) {\n        ws.send(JSON.stringify(request));\n      } else {\n        onUnbindError();\n      }\n\n      return;\n    }\n    Janus.httpAPICall(server + '/' + sessionId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.log('Destroyed session:');\n        Janus.debug(json);\n        sessionId = null;\n        connected = false;\n        if (json['janus'] !== 'success') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n        }\n        callbacks.success();\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n        // Reset everything anyway\n        sessionId = null;\n        connected = false;\n        callbacks.success();\n        if (notifyDestroyed) gatewayCallbacks.destroyed();\n      },\n    });\n  }\n\n  // Private method to create a plugin handle\n  function createHandle(callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    callbacks.dataChannelOptions = callbacks.dataChannelOptions || {\n      ordered: true,\n    };\n    callbacks.consentDialog = typeof callbacks.consentDialog == 'function' ? callbacks.consentDialog : Janus.noop;\n    callbacks.iceState = typeof callbacks.iceState == 'function' ? callbacks.iceState : Janus.noop;\n    callbacks.mediaState = typeof callbacks.mediaState == 'function' ? callbacks.mediaState : Janus.noop;\n    callbacks.webrtcState = typeof callbacks.webrtcState == 'function' ? callbacks.webrtcState : Janus.noop;\n    callbacks.slowLink = typeof callbacks.slowLink == 'function' ? callbacks.slowLink : Janus.noop;\n    callbacks.onmessage = typeof callbacks.onmessage == 'function' ? callbacks.onmessage : Janus.noop;\n    callbacks.onlocaltrack = typeof callbacks.onlocaltrack == 'function' ? callbacks.onlocaltrack : Janus.noop;\n    callbacks.onremotetrack = typeof callbacks.onremotetrack == 'function' ? callbacks.onremotetrack : Janus.noop;\n    callbacks.ondata = typeof callbacks.ondata == 'function' ? callbacks.ondata : Janus.noop;\n    callbacks.ondataopen = typeof callbacks.ondataopen == 'function' ? callbacks.ondataopen : Janus.noop;\n    callbacks.oncleanup = typeof callbacks.oncleanup == 'function' ? callbacks.oncleanup : Janus.noop;\n    callbacks.ondetached = typeof callbacks.ondetached == 'function' ? callbacks.ondetached : Janus.noop;\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      callbacks.error('Is the server down? (connected=false)');\n      return;\n    }\n    let plugin = callbacks.plugin;\n    if (!plugin) {\n      Janus.error('Invalid plugin');\n      callbacks.error('Invalid plugin');\n      return;\n    }\n    let opaqueId = callbacks.opaqueId;\n    let loopIndex = callbacks.loopIndex;\n    let handleToken = callbacks.token ? callbacks.token : token;\n    let transaction = Janus.randomString(12);\n    let request = {\n      janus: 'attach',\n      plugin: plugin,\n      opaque_id: opaqueId,\n      loop_index: loopIndex,\n      transaction: transaction,\n    };\n    if (handleToken) request['token'] = handleToken;\n    if (apisecret) request['apisecret'] = apisecret;\n    if (websockets) {\n      transactions[transaction] = function (json) {\n        Janus.debug(json);\n        if (json['janus'] !== 'success') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n          callbacks.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason);\n          return;\n        }\n        let handleId = json.data['id'];\n        Janus.log('Created handle: ' + handleId);\n        let pluginHandle = {\n          session: that,\n          plugin: plugin,\n          id: handleId,\n          token: handleToken,\n          detached: false,\n          webrtcStuff: {\n            started: false,\n            myStream: null,\n            streamExternal: false,\n            mySdp: null,\n            mediaConstraints: null,\n            pc: null,\n            dataChannelOptions: callbacks.dataChannelOptions,\n            dataChannel: {},\n            dtmfSender: null,\n            trickle: true,\n            iceDone: false,\n            bitrate: {},\n          },\n          getId: function () {\n            return handleId;\n          },\n          getPlugin: function () {\n            return plugin;\n          },\n          getVolume: function (mid, result) {\n            return getVolume(handleId, mid, true, result);\n          },\n          getRemoteVolume: function (mid, result) {\n            return getVolume(handleId, mid, true, result);\n          },\n          getLocalVolume: function (mid, result) {\n            return getVolume(handleId, mid, false, result);\n          },\n          isAudioMuted: function (mid) {\n            return isMuted(handleId, mid, false);\n          },\n          muteAudio: function (mid) {\n            return mute(handleId, mid, false, true);\n          },\n          unmuteAudio: function (mid) {\n            return mute(handleId, mid, false, false);\n          },\n          isVideoMuted: function (mid) {\n            return isMuted(handleId, mid, true);\n          },\n          muteVideo: function (mid) {\n            return mute(handleId, mid, true, true);\n          },\n          unmuteVideo: function (mid) {\n            return mute(handleId, mid, true, false);\n          },\n          getBitrate: function (mid) {\n            return getBitrate(handleId, mid);\n          },\n          setMaxBitrate: function (mid, bitrate) {\n            return setBitrate(handleId, mid, bitrate);\n          },\n          send: function (callbacks) {\n            sendMessage(handleId, callbacks);\n          },\n          data: function (callbacks) {\n            sendData(handleId, callbacks);\n          },\n          dtmf: function (callbacks) {\n            sendDtmf(handleId, callbacks);\n          },\n          consentDialog: callbacks.consentDialog,\n          iceState: callbacks.iceState,\n          mediaState: callbacks.mediaState,\n          webrtcState: callbacks.webrtcState,\n          slowLink: callbacks.slowLink,\n          onmessage: callbacks.onmessage,\n          createOffer: function (callbacks) {\n            prepareWebrtc(handleId, true, callbacks);\n          },\n          createAnswer: function (callbacks) {\n            prepareWebrtc(handleId, false, callbacks);\n          },\n          handleRemoteJsep: function (callbacks) {\n            prepareWebrtcPeer(handleId, callbacks);\n          },\n          replaceTracks: function (callbacks) {\n            replaceTracks(handleId, callbacks);\n          },\n          getLocalTracks: function () {\n            return getLocalTracks(handleId);\n          },\n          getRemoteTracks: function () {\n            return getRemoteTracks(handleId);\n          },\n          onlocaltrack: callbacks.onlocaltrack,\n          onremotetrack: callbacks.onremotetrack,\n          ondata: callbacks.ondata,\n          ondataopen: callbacks.ondataopen,\n          oncleanup: callbacks.oncleanup,\n          ondetached: callbacks.ondetached,\n          hangup: function (sendRequest) {\n            cleanupWebrtc(handleId, sendRequest === true);\n          },\n          detach: function (callbacks) {\n            destroyHandle(handleId, callbacks);\n          },\n        };\n        pluginHandles[handleId] = pluginHandle;\n        callbacks.success(pluginHandle);\n      };\n      request['session_id'] = sessionId;\n      ws.send(JSON.stringify(request));\n      return;\n    }\n    Janus.httpAPICall(server + '/' + sessionId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.debug(json);\n        if (json['janus'] !== 'success') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n          callbacks.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason);\n          return;\n        }\n        let handleId = json.data['id'];\n        Janus.log('Created handle: ' + handleId);\n        let pluginHandle = {\n          session: that,\n          plugin: plugin,\n          id: handleId,\n          token: handleToken,\n          detached: false,\n          webrtcStuff: {\n            started: false,\n            myStream: null,\n            streamExternal: false,\n            mySdp: null,\n            mediaConstraints: null,\n            pc: null,\n            dataChannelOptions: callbacks.dataChannelOptions,\n            dataChannel: {},\n            dtmfSender: null,\n            trickle: true,\n            iceDone: false,\n            bitrate: {},\n          },\n          getId: function () {\n            return handleId;\n          },\n          getPlugin: function () {\n            return plugin;\n          },\n          getVolume: function (mid, result) {\n            return getVolume(handleId, mid, true, result);\n          },\n          getRemoteVolume: function (mid, result) {\n            return getVolume(handleId, mid, true, result);\n          },\n          getLocalVolume: function (mid, result) {\n            return getVolume(handleId, mid, false, result);\n          },\n          isAudioMuted: function (mid) {\n            return isMuted(handleId, mid, false);\n          },\n          muteAudio: function (mid) {\n            return mute(handleId, mid, false, true);\n          },\n          unmuteAudio: function (mid) {\n            return mute(handleId, mid, false, false);\n          },\n          isVideoMuted: function (mid) {\n            return isMuted(handleId, mid, true);\n          },\n          muteVideo: function (mid) {\n            return mute(handleId, mid, true, true);\n          },\n          unmuteVideo: function (mid) {\n            return mute(handleId, mid, true, false);\n          },\n          getBitrate: function (mid) {\n            return getBitrate(handleId, mid);\n          },\n          setMaxBitrate: function (mid, bitrate) {\n            return setBitrate(handleId, mid, bitrate);\n          },\n          send: function (callbacks) {\n            sendMessage(handleId, callbacks);\n          },\n          data: function (callbacks) {\n            sendData(handleId, callbacks);\n          },\n          dtmf: function (callbacks) {\n            sendDtmf(handleId, callbacks);\n          },\n          consentDialog: callbacks.consentDialog,\n          iceState: callbacks.iceState,\n          mediaState: callbacks.mediaState,\n          webrtcState: callbacks.webrtcState,\n          slowLink: callbacks.slowLink,\n          onmessage: callbacks.onmessage,\n          createOffer: function (callbacks) {\n            prepareWebrtc(handleId, true, callbacks);\n          },\n          createAnswer: function (callbacks) {\n            prepareWebrtc(handleId, false, callbacks);\n          },\n          handleRemoteJsep: function (callbacks) {\n            prepareWebrtcPeer(handleId, callbacks);\n          },\n          replaceTracks: function (callbacks) {\n            replaceTracks(handleId, callbacks);\n          },\n          getLocalTracks: function () {\n            return getLocalTracks(handleId);\n          },\n          getRemoteTracks: function () {\n            return getRemoteTracks(handleId);\n          },\n          onlocaltrack: callbacks.onlocaltrack,\n          onremotetrack: callbacks.onremotetrack,\n          ondata: callbacks.ondata,\n          ondataopen: callbacks.ondataopen,\n          oncleanup: callbacks.oncleanup,\n          ondetached: callbacks.ondetached,\n          hangup: function (sendRequest) {\n            cleanupWebrtc(handleId, sendRequest === true);\n          },\n          detach: function (callbacks) {\n            destroyHandle(handleId, callbacks);\n          },\n        };\n        pluginHandles[handleId] = pluginHandle;\n        callbacks.success(pluginHandle);\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n        if (errorThrown === '') callbacks.error(textStatus + ': Is the server down?');\n        else callbacks.error(textStatus + ': ' + errorThrown);\n      },\n    });\n  }\n\n  // Private method to send a message\n  function sendMessage(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      callbacks.error('Is the server down? (connected=false)');\n      return;\n    }\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      callbacks.error('Invalid handle');\n      return;\n    }\n    let message = callbacks.message;\n    let jsep = callbacks.jsep;\n    let transaction = Janus.randomString(12);\n    let request = { janus: 'message', body: message, transaction: transaction };\n    if (pluginHandle.token) request['token'] = pluginHandle.token;\n    if (apisecret) request['apisecret'] = apisecret;\n    if (jsep) {\n      request.jsep = {\n        type: jsep.type,\n        sdp: jsep.sdp,\n      };\n      if (jsep.e2ee) request.jsep.e2ee = true;\n      if (jsep.rid_order === 'hml' || jsep.rid_order === 'lmh') request.jsep.rid_order = jsep.rid_order;\n      if (jsep.force_relay) request.jsep.force_relay = true;\n    }\n    Janus.debug('Sending message to plugin (handle=' + handleId + '):');\n    Janus.debug(request);\n    if (websockets) {\n      request['session_id'] = sessionId;\n      request['handle_id'] = handleId;\n      transactions[transaction] = function (json) {\n        Janus.debug('Message sent!');\n        Janus.debug(json);\n        if (json['janus'] === 'success') {\n          // We got a success, must have been a synchronous transaction\n          let plugindata = json['plugindata'];\n          if (!plugindata) {\n            Janus.warn('Request succeeded, but missing plugindata...');\n            callbacks.success();\n            return;\n          }\n          Janus.log('Synchronous transaction successful (' + plugindata['plugin'] + ')');\n          let data = plugindata['data'];\n          Janus.debug(data);\n          callbacks.success(data);\n          return;\n        } else if (json['janus'] !== 'ack') {\n          // Not a success and not an ack, must be an error\n          if (json['error']) {\n            Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n            callbacks.error(json['error'].code + ' ' + json['error'].reason);\n          } else {\n            Janus.error('Unknown error'); // FIXME\n            callbacks.error('Unknown error');\n          }\n          return;\n        }\n        // If we got here, the plugin decided to handle the request asynchronously\n        callbacks.success();\n      };\n      ws.send(JSON.stringify(request));\n      return;\n    }\n    Janus.httpAPICall(server + '/' + sessionId + '/' + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.debug('Message sent!');\n        Janus.debug(json);\n        if (json['janus'] === 'success') {\n          // We got a success, must have been a synchronous transaction\n          let plugindata = json['plugindata'];\n          if (!plugindata) {\n            Janus.warn('Request succeeded, but missing plugindata...');\n            callbacks.success();\n            return;\n          }\n          Janus.log('Synchronous transaction successful (' + plugindata['plugin'] + ')');\n          let data = plugindata['data'];\n          Janus.debug(data);\n          callbacks.success(data);\n          return;\n        } else if (json['janus'] !== 'ack') {\n          // Not a success and not an ack, must be an error\n          if (json['error']) {\n            Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n            callbacks.error(json['error'].code + ' ' + json['error'].reason);\n          } else {\n            Janus.error('Unknown error'); // FIXME\n            callbacks.error('Unknown error');\n          }\n          return;\n        }\n        // If we got here, the plugin decided to handle the request asynchronously\n        callbacks.success();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n        callbacks.error(textStatus + ': ' + errorThrown);\n      },\n    });\n  }\n\n  // Private method to send a trickle candidate\n  function sendTrickleCandidate(handleId, candidate) {\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      return;\n    }\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return;\n    }\n    let request = {\n      janus: 'trickle',\n      candidate: candidate,\n      transaction: Janus.randomString(12),\n    };\n    if (pluginHandle.token) request['token'] = pluginHandle.token;\n    if (apisecret) request['apisecret'] = apisecret;\n    Janus.vdebug('Sending trickle candidate (handle=' + handleId + '):');\n    Janus.vdebug(request);\n    if (websockets) {\n      request['session_id'] = sessionId;\n      request['handle_id'] = handleId;\n      ws.send(JSON.stringify(request));\n      return;\n    }\n    Janus.httpAPICall(server + '/' + sessionId + '/' + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.vdebug('Candidate sent!');\n        Janus.vdebug(json);\n        if (json['janus'] !== 'ack') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n          return;\n        }\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n      },\n    });\n  }\n\n  // Private method to create a data channel\n  function createDataChannel(handleId, dclabel, dcprotocol, incoming, pendingData) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      return;\n    }\n    let onDataChannelMessage = function (event) {\n      Janus.log('Received message on data channel:', event);\n      let label = event.target.label;\n      pluginHandle.ondata(event.data, label);\n    };\n    let onDataChannelStateChange = function (event) {\n      Janus.log('Received state change on data channel:', event);\n      let label = event.target.label;\n      let protocol = event.target.protocol;\n      let dcState = config.dataChannel[label] ? config.dataChannel[label].readyState : 'null';\n      Janus.log('State change on <' + label + '> data channel: ' + dcState);\n      if (dcState === 'open') {\n        // Any pending messages to send?\n        if (config.dataChannel[label].pending && config.dataChannel[label].pending.length > 0) {\n          Janus.log('Sending pending messages on <' + label + '>:', config.dataChannel[label].pending.length);\n          for (let data of config.dataChannel[label].pending) {\n            Janus.log('Sending data on data channel <' + label + '>');\n            Janus.debug(data);\n            config.dataChannel[label].send(data);\n          }\n          config.dataChannel[label].pending = [];\n        }\n        // Notify the open data channel\n        pluginHandle.ondataopen(label, protocol);\n      }\n    };\n    let onDataChannelError = function (error) {\n      Janus.error('Got error on data channel:', error);\n      // TODO\n    };\n    if (!incoming) {\n      // FIXME Add options (ordered, maxRetransmits, etc.)\n      let dcoptions = config.dataChannelOptions;\n      if (dcprotocol) dcoptions.protocol = dcprotocol;\n      config.dataChannel[dclabel] = config.pc.createDataChannel(dclabel, dcoptions);\n    } else {\n      // The channel was created by Janus\n      config.dataChannel[dclabel] = incoming;\n    }\n    config.dataChannel[dclabel].onmessage = onDataChannelMessage;\n    config.dataChannel[dclabel].onopen = onDataChannelStateChange;\n    config.dataChannel[dclabel].onclose = onDataChannelStateChange;\n    config.dataChannel[dclabel].onerror = onDataChannelError;\n    config.dataChannel[dclabel].pending = [];\n    if (pendingData) config.dataChannel[dclabel].pending.push(pendingData);\n  }\n\n  // Private method to send a data channel message\n  function sendData(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      callbacks.error('Invalid handle');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    let data = callbacks.text || callbacks.data;\n    if (!data) {\n      Janus.warn('Invalid data');\n      callbacks.error('Invalid data');\n      return;\n    }\n    let label = callbacks.label ? callbacks.label : Janus.dataChanDefaultLabel;\n    if (!config.dataChannel[label]) {\n      // Create new data channel and wait for it to open\n      createDataChannel(handleId, label, callbacks.protocol, false, data, callbacks.protocol);\n      callbacks.success();\n      return;\n    }\n    if (config.dataChannel[label].readyState !== 'open') {\n      config.dataChannel[label].pending.push(data);\n      callbacks.success();\n      return;\n    }\n    Janus.log('Sending data on data channel <' + label + '>');\n    Janus.debug(data);\n    config.dataChannel[label].send(data);\n    callbacks.success();\n  }\n\n  // Private method to send a DTMF tone\n  function sendDtmf(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      callbacks.error('Invalid handle');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.dtmfSender) {\n      // Create the DTMF sender the proper way, if possible\n      if (config.pc) {\n        let senders = config.pc.getSenders();\n        let audioSender = senders.find(function (sender) {\n          return sender.track && sender.track.kind === 'audio';\n        });\n        if (!audioSender) {\n          Janus.warn('Invalid DTMF configuration (no audio track)');\n          callbacks.error('Invalid DTMF configuration (no audio track)');\n          return;\n        }\n        config.dtmfSender = audioSender.dtmf;\n        if (config.dtmfSender) {\n          Janus.log('Created DTMF Sender');\n          config.dtmfSender.ontonechange = function (tone) {\n            Janus.debug('Sent DTMF tone: ' + tone.tone);\n          };\n        }\n      }\n      if (!config.dtmfSender) {\n        Janus.warn('Invalid DTMF configuration');\n        callbacks.error('Invalid DTMF configuration');\n        return;\n      }\n    }\n    let dtmf = callbacks.dtmf;\n    if (!dtmf) {\n      Janus.warn('Invalid DTMF parameters');\n      callbacks.error('Invalid DTMF parameters');\n      return;\n    }\n    let tones = dtmf.tones;\n    if (!tones) {\n      Janus.warn('Invalid DTMF string');\n      callbacks.error('Invalid DTMF string');\n      return;\n    }\n    let duration = typeof dtmf.duration === 'number' ? dtmf.duration : 500; // We choose 500ms as the default duration for a tone\n    let gap = typeof dtmf.gap === 'number' ? dtmf.gap : 50; // We choose 50ms as the default gap between tones\n    Janus.debug('Sending DTMF string ' + tones + ' (duration ' + duration + 'ms, gap ' + gap + 'ms)');\n    config.dtmfSender.insertDTMF(tones, duration, gap);\n    callbacks.success();\n  }\n\n  // Private method to destroy a plugin handle\n  function destroyHandle(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    let noRequest = callbacks.noRequest === true;\n    Janus.log('Destroying handle ' + handleId + ' (only-locally=' + noRequest + ')');\n    cleanupWebrtc(handleId);\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || pluginHandle.detached) {\n      // Plugin was already detached by Janus, calling detach again will return a handle not found error, so just exit here\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n    pluginHandle.detached = true;\n    if (noRequest) {\n      // We're only removing the handle locally\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n    if (!connected) {\n      Janus.warn('Is the server down? (connected=false)');\n      callbacks.error('Is the server down? (connected=false)');\n      return;\n    }\n    let request = { janus: 'detach', transaction: Janus.randomString(12) };\n    if (pluginHandle.token) request['token'] = pluginHandle.token;\n    if (apisecret) request['apisecret'] = apisecret;\n    if (websockets) {\n      request['session_id'] = sessionId;\n      request['handle_id'] = handleId;\n      ws.send(JSON.stringify(request));\n      delete pluginHandles[handleId];\n      callbacks.success();\n      return;\n    }\n    Janus.httpAPICall(server + '/' + sessionId + '/' + handleId, {\n      verb: 'POST',\n      withCredentials: withCredentials,\n      body: request,\n      success: function (json) {\n        Janus.log('Destroyed handle:');\n        Janus.debug(json);\n        if (json['janus'] !== 'success') {\n          Janus.error('Ooops: ' + json['error'].code + ' ' + json['error'].reason); // FIXME\n        }\n        delete pluginHandles[handleId];\n        callbacks.success();\n      },\n      error: function (textStatus, errorThrown) {\n        Janus.error(textStatus + ':', errorThrown); // FIXME\n        // We cleanup anyway\n        delete pluginHandles[handleId];\n        callbacks.success();\n      },\n    });\n  }\n\n  // WebRTC stuff\n  // Helper function to create a new PeerConnection, if we need one\n  function createPeerconnectionIfNeeded(handleId, callbacks) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      throw 'Invalid handle';\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (config.pc) {\n      // Nothing to do, we have a PeerConnection already\n      return;\n    }\n    let pc_config = {\n      iceServers: iceServers,\n      iceTransportPolicy: iceTransportPolicy,\n      bundlePolicy: bundlePolicy,\n    };\n    pc_config.sdpSemantics = 'unified-plan';\n    // Check if a sender or receiver transform has been provided\n    let insertableStreams = false;\n    if (callbacks.tracks) {\n      for (let track of callbacks.tracks) {\n        if (track.transforms && (track.transforms.sender || track.transforms.receiver)) {\n          insertableStreams = true;\n          break;\n        }\n      }\n    }\n    if (\n      RTCRtpSender &&\n      (RTCRtpSender.prototype.createEncodedStreams ||\n        (RTCRtpSender.prototype.createEncodedAudioStreams && RTCRtpSender.prototype.createEncodedVideoStreams)) &&\n      insertableStreams\n    ) {\n      config.insertableStreams = true;\n      pc_config.forceEncodedAudioInsertableStreams = true;\n      pc_config.forceEncodedVideoInsertableStreams = true;\n      pc_config.encodedInsertableStreams = true;\n    }\n    Janus.log('Creating PeerConnection');\n    config.pc = new RTCPeerConnection(pc_config);\n    Janus.debug(config.pc);\n    if (config.pc.getStats) {\n      // FIXME\n      config.volume = {};\n      config.bitrate.value = '0 kbits/sec';\n    }\n    Janus.log('Preparing local SDP and gathering candidates (trickle=' + config.trickle + ')');\n    config.pc.oniceconnectionstatechange = function () {\n      if (config.pc) pluginHandle.iceState(config.pc.iceConnectionState);\n    };\n    config.pc.onicecandidate = function (event) {\n      if (!event.candidate || (event.candidate.candidate && event.candidate.candidate.indexOf('endOfCandidates') > 0)) {\n        Janus.log('End of candidates.');\n        config.iceDone = true;\n        if (config.trickle === true) {\n          // Notify end of candidates\n          sendTrickleCandidate(handleId, { completed: true });\n        } else {\n          // No trickle, time to send the complete SDP (including all candidates)\n          sendSDP(handleId, callbacks);\n        }\n      } else {\n        // JSON.stringify doesn't work on some WebRTC objects anymore\n        // See https://code.google.com/p/chromium/issues/detail?id=467366\n        let candidate = {\n          candidate: event.candidate.candidate,\n          sdpMid: event.candidate.sdpMid,\n          sdpMLineIndex: event.candidate.sdpMLineIndex,\n        };\n        if (config.trickle === true) {\n          // Send candidate\n          sendTrickleCandidate(handleId, candidate);\n        }\n      }\n    };\n    config.pc.ontrack = function (event) {\n      Janus.log('Handling Remote Track', event);\n      if (!event.streams) return;\n      if (!event.track) return;\n      // Notify about the new track event\n      let mid = event.transceiver ? event.transceiver.mid || event.transceiver._mid : event.track.id;\n      try {\n        pluginHandle.onremotetrack(event.track, mid, true, {\n          reason: 'created',\n        });\n      } catch (e) {\n        Janus.error('Error calling onremotetrack', e);\n      }\n      if (event.track.onended) return;\n      let trackMutedTimeoutId = null;\n      Janus.log('Adding onended callback to track:', event.track);\n      event.track.onended = function (ev) {\n        Janus.log('Remote track removed:', ev);\n        clearTimeout(trackMutedTimeoutId);\n        // Notify the application\n        let transceivers = config.pc ? config.pc.getTransceivers() : null;\n        let transceiver = transceivers\n          ? transceivers.find((transceiver) => {\n            const receiver = transceiver.receiver || transceiver._receiver;\n            const track = receiver.track || receiver._track;\n            return track === ev.target;\n          })\n          : null;\n        let mid = transceiver ? transceiver.mid || transceiver._mid : ev.target.id;\n        try {\n          pluginHandle.onremotetrack(ev.target, mid, false, {\n            reason: 'ended',\n          });\n        } catch (e) {\n          Janus.error('Error calling onremotetrack on removal', e);\n        }\n      };\n      event.track.onmute = function (ev) {\n        Janus.log('Remote track muted:', ev);\n        if (!trackMutedTimeoutId) {\n          const target = ev.target;\n          trackMutedTimeoutId = setTimeout(function () {\n            Janus.log('Removing remote track');\n            // Notify the application the track is gone\n            let transceivers = config.pc ? config.pc.getTransceivers() : null;\n            let transceiver = transceivers\n              ? transceivers.find((transceiver) => {\n                const receiver = transceiver.receiver || transceiver._receiver;\n                const track = receiver.track || receiver._track;\n                return track === target;\n              })\n              : null;\n            let mid = transceiver ? transceiver.mid || transceiver._mid : target.id;\n            try {\n              pluginHandle.onremotetrack(target, mid, false, {\n                reason: 'mute',\n              });\n            } catch (e) {\n              Janus.error('Error calling onremotetrack on mute', e);\n            }\n            trackMutedTimeoutId = null;\n            // Chrome seems to raise mute events only at multiples of 834ms;\n            // we set the timeout to three times this value (rounded to 840ms);\n          }, 3 * 840);\n        }\n      };\n      event.track.onunmute = function (ev) {\n        Janus.log('Remote track flowing again:', ev);\n        if (trackMutedTimeoutId != null) {\n          clearTimeout(trackMutedTimeoutId);\n          trackMutedTimeoutId = null;\n        } else {\n          try {\n            // Notify the application the track is back\n            let transceivers = config.pc ? config.pc.getTransceivers() : null;\n            let transceiver = transceivers\n              ? transceivers.find((transceiver) => {\n                const receiver = transceiver.receiver || transceiver._receiver;\n                const track = receiver.track || receiver._track;\n                return track === ev.target;\n              })\n              : null;\n            let mid = transceiver ? transceiver.mid || transceiver._mid : ev.target.id;\n            pluginHandle.onremotetrack(ev.target, mid, true, {\n              reason: 'unmute',\n            });\n          } catch (e) {\n            Janus.error('Error calling onremotetrack on unmute', e);\n          }\n        }\n      };\n    };\n  }\n\n  // Helper function used when creating either an offer or answer: it\n  // prepares what needs to be prepared, including creating a new\n  // PeerConnection (if needed) and updating the tracks configuration,\n  // before invoking the function to actually generate the offer/answer\n  async function prepareWebrtc(handleId, offer, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : webrtcError;\n    let jsep = callbacks.jsep;\n    if (offer && jsep) {\n      Janus.error('Provided a JSEP to a createOffer');\n      callbacks.error('Provided a JSEP to a createOffer');\n      return;\n    } else if (!offer && (!jsep || !jsep.type || !jsep.sdp)) {\n      Janus.error('A valid JSEP is required for createAnswer');\n      callbacks.error('A valid JSEP is required for createAnswer');\n      return;\n    }\n    // If the deprecated media was provided instead of tracks, translate it\n    if (callbacks.media && !callbacks.tracks) {\n      callbacks.tracks = Janus.mediaToTracks(callbacks.media);\n      if (callbacks.simulcast === true || callbacks.simulcast2 === true || callbacks.svc) {\n        // Find the video track and add simulcast/SVC info there\n        for (let track of callbacks.tracks) {\n          if (track.type === 'video') {\n            if (callbacks.simulcast === true || callbacks.simulcast2 === true) track.simulcast = true;\n            else if (callbacks.svc) track.svc = callbacks.svc;\n            break;\n          }\n        }\n      }\n      Janus.warn('Deprecated media object passed, use tracks instead. Automatically translated to:', callbacks.tracks);\n    }\n    // Check that callbacks.array is a valid array\n    if (callbacks.tracks && !Array.isArray(callbacks.tracks)) {\n      Janus.error('Tracks must be an array');\n      callbacks.error('Tracks must be an array');\n      return;\n    }\n    // Get the plugin handle\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      callbacks.error('Invalid handle');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    config.trickle = isTrickleEnabled(callbacks.trickle);\n    try {\n      // Create a PeerConnection, if needed\n      createPeerconnectionIfNeeded(handleId, callbacks);\n      if (offer) {\n        // Capture devices and setup tracks, if needed\n        await captureDevices(handleId, callbacks);\n      }\n      // Create offer or answer now (depending on the context)\n      if (!jsep) {\n        let offer = await createOffer(handleId, callbacks);\n        callbacks.success(offer);\n      } else {\n        await config.pc.setRemoteDescription(jsep);\n        Janus.log('Remote description accepted!');\n        config.remoteSdp = jsep.sdp;\n        // Any trickle candidate we cached?\n        if (config.candidates && config.candidates.length > 0) {\n          for (let i = 0; i < config.candidates.length; i++) {\n            let candidate = config.candidates[i];\n            Janus.debug('Adding remote candidate:', candidate);\n            if (!candidate || candidate.completed === true) {\n              // end-of-candidates\n              config.pc.addIceCandidate(Janus.endOfCandidates);\n            } else {\n              // New candidate\n              config.pc.addIceCandidate(candidate);\n            }\n          }\n          config.candidates = [];\n        }\n        // Capture devices and setup tracks, if needed\n        await captureDevices(handleId, callbacks);\n        // Create the answer now\n        let answer = await createAnswer(handleId, callbacks);\n        callbacks.success(answer);\n      }\n    } catch (err) {\n      Janus.error(err);\n      callbacks.error(err);\n    }\n  }\n\n  function prepareWebrtcPeer(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : webrtcError;\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == 'function' ? callbacks.customizeSdp : Janus.noop;\n    let jsep = callbacks.jsep;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      callbacks.error('Invalid handle');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (jsep) {\n      if (!config.pc) {\n        Janus.warn('Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep');\n        callbacks.error('No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep');\n        return;\n      }\n      callbacks.customizeSdp(jsep);\n      config.pc.setRemoteDescription(jsep).then(function () {\n        Janus.log('Remote description accepted!');\n        config.remoteSdp = jsep.sdp;\n        // Any trickle candidate we cached?\n        if (config.candidates && config.candidates.length > 0) {\n          for (let i = 0; i < config.candidates.length; i++) {\n            let candidate = config.candidates[i];\n            Janus.debug('Adding remote candidate:', candidate);\n            if (!candidate || candidate.completed === true) {\n              // end-of-candidates\n              config.pc.addIceCandidate(Janus.endOfCandidates);\n            } else {\n              // New candidate\n              config.pc.addIceCandidate(candidate);\n            }\n          }\n          config.candidates = [];\n        }\n        // Done\n        callbacks.success();\n      }, callbacks.error);\n    } else {\n      callbacks.error('Invalid JSEP');\n    }\n  }\n\n  async function createOffer(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == 'function' ? callbacks.customizeSdp : Janus.noop;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      throw 'Invalid handle';\n    }\n    let config = pluginHandle.webrtcStuff;\n    Janus.log('Creating offer (iceDone=' + config.iceDone + ')');\n    // https://code.google.com/p/webrtc/issues/detail?id=3508\n    let mediaConstraints = {};\n    let iceRestart = callbacks.iceRestart === true;\n    // If we need an ICE restart, set the related constraint\n    if (iceRestart) mediaConstraints.iceRestart = true;\n    Janus.debug(mediaConstraints);\n    let offer = await config.pc.createOffer(mediaConstraints);\n    Janus.debug(offer);\n    // JSON.stringify doesn't work on some WebRTC objects anymore\n    // See https://code.google.com/p/chromium/issues/detail?id=467366\n    let jsep = {\n      type: 'offer',\n      sdp: offer.sdp,\n    };\n    callbacks.customizeSdp(jsep);\n    offer.sdp = jsep.sdp;\n    Janus.log('Setting local description');\n    config.mySdp = {\n      type: 'offer',\n      sdp: offer.sdp,\n    };\n    await config.pc.setLocalDescription(offer);\n    config.mediaConstraints = mediaConstraints;\n    if (!config.iceDone && !config.trickle) {\n      // FIXME Don't do anything until we have all candidates\n      Janus.log('Waiting for all candidates...');\n      return null;\n    }\n    // If transforms are present, notify Janus that the media is end-to-end encrypted\n    if (config.insertableStreams) offer.e2ee = true;\n    return offer;\n  }\n\n  async function createAnswer(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.customizeSdp = typeof callbacks.customizeSdp == 'function' ? callbacks.customizeSdp : Janus.noop;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      throw 'Invalid handle';\n    }\n    let config = pluginHandle.webrtcStuff;\n    Janus.log('Creating answer (iceDone=' + config.iceDone + ')');\n    let answer = await config.pc.createAnswer();\n    Janus.debug(answer);\n    // JSON.stringify doesn't work on some WebRTC objects anymore\n    // See https://code.google.com/p/chromium/issues/detail?id=467366\n    let jsep = {\n      type: 'answer',\n      sdp: answer.sdp,\n    };\n    callbacks.customizeSdp(jsep);\n    answer.sdp = jsep.sdp;\n    Janus.log('Setting local description');\n    config.mySdp = {\n      type: 'answer',\n      sdp: answer.sdp,\n    };\n    await config.pc.setLocalDescription(answer);\n    if (!config.iceDone && !config.trickle) {\n      // FIXME Don't do anything until we have all candidates\n      Janus.log('Waiting for all candidates...');\n      return null;\n    }\n    // If transforms are present, notify Janus that the media is end-to-end encrypted\n    if (config.insertableStreams) answer.e2ee = true;\n    return answer;\n  }\n\n  function sendSDP(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle, not sending anything');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    Janus.log('Sending offer/answer SDP...');\n    if (!config.mySdp) {\n      Janus.warn('Local SDP instance is invalid, not sending anything...');\n      return;\n    }\n    config.mySdp = {\n      type: config.pc.localDescription.type,\n      sdp: config.pc.localDescription.sdp,\n    };\n    if (config.trickle === false) config.mySdp['trickle'] = false;\n    Janus.debug(callbacks);\n    config.sdpSent = true;\n    callbacks.success(config.mySdp);\n  }\n\n  async function replaceTracks(handleId, callbacks) {\n    callbacks = callbacks || {};\n    callbacks.success = typeof callbacks.success == 'function' ? callbacks.success : Janus.noop;\n    callbacks.error = typeof callbacks.error == 'function' ? callbacks.error : Janus.noop;\n    // Check that callbacks.array is a valid array\n    if (callbacks.tracks && !Array.isArray(callbacks.tracks)) {\n      Janus.error('Tracks must be an array');\n      callbacks.error('Tracks must be an array');\n      return;\n    }\n    // Add the replace:true if it's missing\n    for (let track of callbacks.tracks) {\n      if (track.add || (!track.replace && !track.remove)) track.replace = true;\n    }\n    try {\n      await captureDevices(handleId, callbacks);\n      callbacks.success();\n    } catch (err) {\n      Janus.error(err);\n      callbacks.error(err);\n    }\n  }\n\n  async function captureDevices(handleId, callbacks) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle, not sending anything');\n      throw 'Invalid handle';\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      throw 'Invalid PeerConnection';\n    }\n    let tracks = callbacks.tracks;\n    if (!tracks || !Array.isArray(tracks) || tracks.length === 0) {\n      // Nothing to do\n      return;\n    }\n    let openedConsentDialog = false;\n    // Check if we can/should group getUserMedia calls\n    let groups = {};\n    for (let track of tracks) {\n      delete track.gumGroup;\n      if (!track.type || !['audio', 'video'].includes(track.type)) continue;\n      if (!track.capture || track.capture instanceof MediaStreamTrack) continue;\n      let group = track.group ? track.group : 'default';\n      if (!groups[group]) groups[group] = {};\n      if (groups[group][track.type]) continue;\n      track.gumGroup = group;\n      groups[group][track.type] = track;\n    }\n    let keys = Object.keys(groups);\n    for (let key of keys) {\n      let group = groups[key];\n      if (!group.audio || !group.video) {\n        if (group.audio) delete group.audio.gumGroup;\n        if (group.video) delete group.video.gumGroup;\n        delete groups[key];\n      }\n    }\n    let answer = callbacks.jsep ? true : false;\n    for (let track of tracks) {\n      if (!track.type) {\n        Janus.warn('Missing track type:', track);\n        continue;\n      }\n      if (track.type === 'data') {\n        // Easy enough: create a datachannel if we don't have one already\n        if (config.pc.ondatachannel) {\n          Janus.warn('Data channel exists already, not creating another one');\n          continue;\n        }\n        Janus.log('Creating default data channel');\n        createDataChannel(handleId, Janus.dataChanDefaultLabel, null, false);\n        config.pc.ondatachannel = function (event) {\n          Janus.log('Data channel created by Janus:', event);\n          createDataChannel(handleId, event.channel.label, event.channel.protocol, event.channel);\n        };\n        continue;\n      }\n      if (\n        typeof track.add === 'undefined' &&\n        track.add === null &&\n        typeof track.remove === 'undefined' &&\n        track.remove === null &&\n        typeof track.replace === 'undefined' &&\n        track.replace === null\n      ) {\n        // Let's default to 'add'\n        track.add = true;\n      }\n      if ((track.add && track.remove) || (track.add && track.remove && track.replace)) {\n        Janus.warn('Conflicting actions for track, ignoring:', track);\n        continue;\n      }\n      if (track.add && track.replace) {\n        Janus.warn('Both add and replace provided, falling back to replace:', track);\n        delete track.add;\n      } else if (track.remove && track.replace) {\n        Janus.warn('Both remove and replace provided, falling back to remove:', track);\n        delete track.replace;\n      }\n      let kind = track.type;\n      if (track.type === 'screen') kind = 'video'; // FIXME\n      let transceiver = null,\n        sender = null;\n      if (track.mid) {\n        // Search by mid\n        transceiver = config.pc.getTransceivers().find((t) => t.mid === track.mid && t.receiver.track.kind === kind);\n      } else {\n        // Find the first track of this type\n        transceiver = config.pc.getTransceivers().find((t) => t.receiver.track.kind === kind);\n      }\n      if (track.replace || track.remove) {\n        if (!transceiver) {\n          Janus.warn(\"Couldn't find a transceiver for track:\", track);\n          continue;\n        }\n        if (!transceiver.sender) {\n          Janus.warn('No sender in the transceiver for track:', track);\n          continue;\n        }\n        sender = transceiver.sender;\n      }\n      if (answer && !transceiver) {\n        transceiver = config.pc.getTransceivers().find((t) => t.receiver.track.kind === kind);\n        if (!transceiver) {\n          Janus.warn(\"Couldn't find a transceiver for track:\", track);\n          continue;\n        }\n      }\n      // Capture the new track, if we need to\n      let nt = null,\n        trackId = null;\n      if (track.remove) {\n        Janus.log('Removing track from PeerConnection', track);\n        trackId = sender.track ? sender.track.id : null;\n        await sender.replaceTrack(null);\n      } else if (track.capture) {\n        if (track.gumGroup && groups[track.gumGroup] && groups[track.gumGroup].stream) {\n          // We did a getUserMedia before already\n          let stream = groups[track.gumGroup].stream;\n          nt = track.type === 'audio' ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0];\n          delete groups[track.gumGroup].stream;\n          delete groups[track.gumGroup];\n          delete track.gumGroup;\n        } else if (track.capture instanceof MediaStreamTrack) {\n          // An external track was provided, use that\n          nt = track.capture;\n        } else {\n          if (!openedConsentDialog) {\n            openedConsentDialog = true;\n            pluginHandle.consentDialog(true);\n          }\n          let constraints = Janus.trackConstraints(track),\n            stream = null;\n          if (track.type === 'audio' || track.type === 'video') {\n            // Use getUserMedia: check if we need to group audio and video together\n            if (track.gumGroup) {\n              let otherType = track.type === 'audio' ? 'video' : 'audio';\n              if (groups[track.gumGroup] && groups[track.gumGroup][otherType]) {\n                let otherTrack = groups[track.gumGroup][otherType];\n                let otherConstraints = Janus.trackConstraints(otherTrack);\n                constraints[otherType] = otherConstraints[otherType];\n              }\n            }\n            stream = await navigator.mediaDevices.getUserMedia(constraints);\n            if (track.gumGroup && constraints.audio && constraints.video) {\n              // We just performed a grouped getUserMedia, keep track of the\n              // stream so that we can immediately assign the track later\n              groups[track.gumGroup].stream = stream;\n              delete track.gumGroup;\n            }\n          } else {\n            // Use getDisplayMedia\n            stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n          }\n          nt = track.type === 'audio' ? stream.getAudioTracks()[0] : stream.getVideoTracks()[0];\n        }\n        if (track.replace) {\n          // Replace the track\n          await sender.replaceTrack(nt);\n          // Update the transceiver direction\n          let newDirection = 'sendrecv';\n          if (track.recv === false || transceiver.direction === 'inactive' || transceiver.direction === 'sendonly')\n            newDirection = 'sendonly';\n          if (transceiver.setDirection) transceiver.setDirection(newDirection);\n          else transceiver.direction = newDirection;\n        } else {\n          // FIXME Add as a new track\n          if (!config.myStream) config.myStream = new MediaStream();\n          if (kind === 'audio' || (!track.simulcast && !track.svc)) {\n            sender = config.pc.addTrack(nt, config.myStream);\n            transceiver = config.pc.getTransceivers().find((t) => t.sender === sender);\n          } else if (track.simulcast) {\n            if (Janus.webRTCAdapter.browserDetails.browser !== 'firefox') {\n              // Standard RID\n              Janus.log('Enabling rid-based simulcasting:', nt);\n              let maxBitrates = getMaxBitrates(track.simulcastMaxBitrates);\n              transceiver = config.pc.addTransceiver(nt, {\n                direction: 'sendrecv',\n                streams: [config.myStream],\n                sendEncodings: track.sendEncodings || [\n                  { rid: 'h', active: true, maxBitrate: maxBitrates.high },\n                  {\n                    rid: 'm',\n                    active: true,\n                    maxBitrate: maxBitrates.medium,\n                    scaleResolutionDownBy: 2,\n                  },\n                  {\n                    rid: 'l',\n                    active: true,\n                    maxBitrate: maxBitrates.low,\n                    scaleResolutionDownBy: 4,\n                  },\n                ],\n              });\n            } else {\n              // Firefox-based RID, based on https://gist.github.com/voluntas/088bc3cc62094730647b\n              Janus.log('Enabling Simulcasting for Firefox (RID)');\n              transceiver = config.pc.addTransceiver(nt, {\n                direction: 'sendrecv',\n                streams: [config.myStream],\n              });\n              sender = transceiver ? transceiver.sender : null;\n              if (sender) {\n                let parameters = sender.getParameters();\n                if (!parameters) parameters = {};\n                let maxBitrates = getMaxBitrates(track.simulcastMaxBitrates);\n                parameters.encodings = track.sendEncodings || [\n                  { rid: 'h', active: true, maxBitrate: maxBitrates.high },\n                  {\n                    rid: 'm',\n                    active: true,\n                    maxBitrate: maxBitrates.medium,\n                    scaleResolutionDownBy: 2,\n                  },\n                  {\n                    rid: 'l',\n                    active: true,\n                    maxBitrate: maxBitrates.low,\n                    scaleResolutionDownBy: 4,\n                  },\n                ];\n                sender.setParameters(parameters);\n              }\n            }\n          } else {\n            Janus.log('Enabling SVC (' + track.svc + '):', nt);\n            transceiver = config.pc.addTransceiver(nt, {\n              direction: 'sendrecv',\n              streams: [config.myStream],\n              sendEncodings: [{ scalabilityMode: track.svc }],\n            });\n          }\n          if (!sender) sender = transceiver ? transceiver.sender : null;\n          // Check if we need to override some settings\n          if (track.codec) {\n            if (Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n              Janus.warn('setCodecPreferences not supported in Firefox, ignoring codec for track:', track);\n            } else if (typeof track.codec !== 'string') {\n              Janus.warn('Invalid codec value, ignoring for track:', track);\n            } else {\n              let mimeType = kind + '/' + track.codec.toLowerCase();\n              let codecs = RTCRtpReceiver.getCapabilities(kind).codecs.filter(function (codec) {\n                return codec.mimeType.toLowerCase() === mimeType;\n              });\n              if (!codecs || codecs.length === 0) {\n                Janus.warn('Codec not supported in this browser for this track, ignoring:', track);\n              } else if (transceiver) {\n                try {\n                  transceiver.setCodecPreferences(codecs);\n                } catch (err) {\n                  Janus.warn('Failed enforcing codec for this ' + kind + ' track:', err);\n                }\n              }\n            }\n          }\n          if (track.bitrate) {\n            // Override maximum bitrate\n            if (track.simulcast || track.svc) {\n              Janus.warn('Ignoring bitrate for simulcast/SVC track, use sendEncodings for that');\n            } else if (isNaN(track.bitrate) || track.bitrate < 0) {\n              Janus.warn('Ignoring invalid bitrate for track:', track);\n            } else if (sender) {\n              let params = sender.getParameters();\n              if (!params || !params.encodings || params.encodings.length === 0) {\n                Janus.warn('No encodings in the sender parameters, ignoring bitrate for track:', track);\n              } else {\n                params.encodings[0].maxBitrate = track.bitrate;\n                await sender.setParameters(params);\n              }\n            }\n          }\n          if (kind === 'video' && track.framerate) {\n            // Override maximum framerate\n            if (track.simulcast || track.svc) {\n              Janus.warn('Ignoring framerate for simulcast/SVC track, use sendEncodings for that');\n            } else if (isNaN(track.framerate) || track.framerate < 0) {\n              Janus.warn('Ignoring invalid framerate for track:', track);\n            } else if (sender) {\n              let params = sender.getParameters();\n              if (!params || !params.encodings || params.encodings.length === 0) {\n                Janus.warn('No encodings in the sender parameters, ignoring framerate for track:', track);\n              } else {\n                params.encodings[0].maxFramerate = track.framerate;\n                await sender.setParameters(params);\n              }\n            }\n          }\n          // Check if insertable streams are involved\n          if (track.transforms) {\n            if (sender && track.transforms.sender) {\n              // There's a sender transform, set it on the transceiver sender\n              let senderStreams = null;\n              if (RTCRtpSender.prototype.createEncodedStreams) {\n                senderStreams = sender.createEncodedStreams();\n              } else if (\n                RTCRtpSender.prototype.createAudioEncodedStreams ||\n                RTCRtpSender.prototype.createEncodedVideoStreams\n              ) {\n                if (kind === 'audio') {\n                  senderStreams = sender.createEncodedAudioStreams();\n                } else if (kind === 'video') {\n                  senderStreams = sender.createEncodedVideoStreams();\n                }\n              }\n              if (senderStreams) {\n                Janus.log('Insertable Streams sender transform:', senderStreams);\n                if (senderStreams.readableStream && senderStreams.writableStream) {\n                  senderStreams.readableStream\n                    .pipeThrough(track.transforms.sender)\n                    .pipeTo(senderStreams.writableStream);\n                } else if (senderStreams.readable && senderStreams.writable) {\n                  senderStreams.readable.pipeThrough(track.transforms.sender).pipeTo(senderStreams.writable);\n                }\n              }\n            }\n            if (transceiver && transceiver.receiver && track.transforms.receiver) {\n              // There's a receiver transform, set it on the transceiver receiver\n              let receiverStreams = null;\n              if (RTCRtpReceiver.prototype.createEncodedStreams) {\n                receiverStreams = transceiver.receiver.createEncodedStreams();\n              } else if (\n                RTCRtpReceiver.prototype.createAudioEncodedStreams ||\n                RTCRtpReceiver.prototype.createEncodedVideoStreams\n              ) {\n                if (kind === 'audio') {\n                  receiverStreams = transceiver.receiver.createEncodedAudioStreams();\n                } else if (kind === 'video') {\n                  receiverStreams = transceiver.receiver.createEncodedVideoStreams();\n                }\n              }\n              if (receiverStreams) {\n                Janus.log('Insertable Streams receiver transform:', receiverStreams);\n                if (receiverStreams.readableStream && receiverStreams.writableStream) {\n                  receiverStreams.readableStream\n                    .pipeThrough(track.transforms.receiver)\n                    .pipeTo(receiverStreams.writableStream);\n                } else if (receiverStreams.readable && receiverStreams.writable) {\n                  receiverStreams.readable.pipeThrough(track.transforms.receiver).pipeTo(receiverStreams.writable);\n                }\n              }\n            }\n          }\n        }\n        if (nt && track.dontStop === true) nt.dontStop = true;\n      } else if (track.recv && !transceiver) {\n        // Maybe a new recvonly track\n        transceiver = config.pc.addTransceiver(kind);\n        if (transceiver) {\n          // Check if we need to override some settings\n          if (track.codec) {\n            if (Janus.webRTCAdapter.browserDetails.browser === 'firefox') {\n              Janus.warn('setCodecPreferences not supported in Firefox, ignoring codec for track:', track);\n            } else if (typeof track.codec !== 'string') {\n              Janus.warn('Invalid codec value, ignoring for track:', track);\n            } else {\n              let mimeType = kind + '/' + track.codec.toLowerCase();\n              let codecs = RTCRtpReceiver.getCapabilities(kind).codecs.filter(function (codec) {\n                return codec.mimeType.toLowerCase() === mimeType;\n              });\n              if (!codecs || codecs.length === 0) {\n                Janus.warn('Codec not supported in this browser for this track, ignoring:', track);\n              } else {\n                try {\n                  transceiver.setCodecPreferences(codecs);\n                } catch (err) {\n                  Janus.warn('Failed enforcing codec for this ' + kind + ' track:', err);\n                }\n              }\n            }\n          }\n          // Check if insertable streams are involved\n          if (transceiver.receiver && track.transforms && track.transforms.receiver) {\n            // There's a receiver transform, set it on the transceiver receiver\n            let receiverStreams = null;\n            if (RTCRtpReceiver.prototype.createEncodedStreams) {\n              receiverStreams = transceiver.receiver.createEncodedStreams();\n            } else if (\n              RTCRtpReceiver.prototype.createAudioEncodedStreams ||\n              RTCRtpReceiver.prototype.createEncodedVideoStreams\n            ) {\n              if (kind === 'audio') {\n                receiverStreams = transceiver.receiver.createEncodedAudioStreams();\n              } else if (kind === 'video') {\n                receiverStreams = transceiver.receiver.createEncodedVideoStreams();\n              }\n            }\n            if (receiverStreams) {\n              Janus.log('Insertable Streams receiver transform:', receiverStreams);\n              if (receiverStreams.readableStream && receiverStreams.writableStream) {\n                receiverStreams.readableStream\n                  .pipeThrough(track.transforms.receiver)\n                  .pipeTo(receiverStreams.writableStream);\n              } else if (receiverStreams.readable && receiverStreams.writable) {\n                receiverStreams.readable.pipeThrough(track.transforms.receiver).pipeTo(receiverStreams.writable);\n              }\n            }\n          }\n        }\n      }\n      // Get rid of the old track\n      // FIXME We should probably do this *before* capturing the new\n      // track, since this prevents, for instance, just changing the\n      // resolution of the same webcam we're capturing already (the\n      // existing resolution would be returned, or an overconstrained\n      // error). On the other end, closing the track before we capture\n      // the new device means we'd end up with a period of time where\n      // no video is sent (changing device takes some time), and\n      // media would be stopped entirely in case capturing the new\n      // device results in an error. To keep things simpler, we're\n      // doing it after: we can make this configurable in the future.\n      if (trackId && config.myStream) {\n        let rt = null;\n        if (kind === 'audio' && config.myStream.getAudioTracks() && config.myStream.getAudioTracks().length) {\n          for (let t of config.myStream.getAudioTracks()) {\n            if (t.id === trackId) {\n              rt = t;\n              Janus.log('Removing audio track:', rt);\n            }\n          }\n        } else if (kind === 'video' && config.myStream.getVideoTracks() && config.myStream.getVideoTracks().length) {\n          for (let t of config.myStream.getVideoTracks()) {\n            if (t.id === trackId) {\n              rt = t;\n              Janus.log('Removing video track:', rt);\n            }\n          }\n        }\n        if (rt) {\n          // Remove the track and notify the application\n          try {\n            config.myStream.removeTrack(rt);\n            pluginHandle.onlocaltrack(rt, false);\n          } catch (e) {\n            Janus.error('Error calling onlocaltrack on removal for renegotiation', e);\n          }\n          // Close the old track (unless we've been asked not to)\n          if (rt.dontStop !== true) {\n            try {\n              rt.stop();\n            } catch (e) { }\n          }\n        }\n      }\n      if (nt) {\n        // FIXME Add the new track locally\n        config.myStream.addTrack(nt);\n        // Notify the application about the new local track, if any\n        nt.onended = function (ev) {\n          Janus.log('Local track removed:', ev);\n          try {\n            pluginHandle.onlocaltrack(ev.target, false);\n          } catch (e) {\n            Janus.error('Error calling onlocaltrack following end', e);\n          }\n        };\n        try {\n          pluginHandle.onlocaltrack(nt, true);\n        } catch (e) {\n          Janus.error('Error calling onlocaltrack for track add', e);\n        }\n      }\n      // Update the direction of the transceiver\n      if (transceiver) {\n        let curdir = transceiver.direction,\n          newdir = null;\n        let send = nt && transceiver.sender.track,\n          recv = track.recv !== false && transceiver.receiver.track;\n        if (send && recv) newdir = 'sendrecv';\n        else if (send && !recv) newdir = 'sendonly';\n        else if (!send && recv) newdir = 'recvonly';\n        else if (!send && !recv) newdir = 'inactive';\n        if (newdir && newdir !== curdir) {\n          Janus.warn('Changing direction of transceiver to ' + newdir + ' (was ' + curdir + ')', track);\n          if (transceiver.setDirection) transceiver.setDirection(newdir);\n          else transceiver.direction = newdir;\n        }\n      }\n    }\n    if (openedConsentDialog) pluginHandle.consentDialog(false);\n  }\n\n  function getLocalTracks(handleId) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return null;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      return null;\n    }\n    let tracks = [];\n    let transceivers = config.pc.getTransceivers();\n    for (let tr of transceivers) {\n      let track = null;\n      if (tr.sender && tr.sender.track) {\n        track = { mid: tr.mid };\n        track.type = tr.sender.track.kind;\n        track.id = tr.sender.track.id;\n        track.label = tr.sender.track.label;\n      }\n      if (track) tracks.push(track);\n    }\n    return tracks;\n  }\n\n  function getRemoteTracks(handleId) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return null;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      return null;\n    }\n    let tracks = [];\n    let transceivers = config.pc.getTransceivers();\n    for (let tr of transceivers) {\n      let track = null;\n      if (tr.receiver && tr.receiver.track) {\n        track = { mid: tr.mid };\n        track.type = tr.receiver.track.kind;\n        track.id = tr.receiver.track.id;\n        track.label = tr.receiver.track.label;\n      }\n      if (track) tracks.push(track);\n    }\n    return tracks;\n  }\n\n  function getVolume(handleId, mid, remote, result) {\n    result = typeof result == 'function' ? result : Janus.noop;\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      result(0);\n      return;\n    }\n    let stream = remote ? 'remote' : 'local';\n    let config = pluginHandle.webrtcStuff;\n    if (!config.volume[stream]) config.volume[stream] = { value: 0 };\n    // Start getting the volume, if audioLevel in getStats is supported (apparently\n    // they're only available in Chrome/Safari right now: https://webrtc-stats.callstats.io/)\n    if (\n      config.pc &&\n      config.pc.getStats &&\n      (Janus.webRTCAdapter.browserDetails.browser === 'chrome' ||\n        Janus.webRTCAdapter.browserDetails.browser === 'safari')\n    ) {\n      // Are we interested in a mid in particular?\n      let query = config.pc;\n      if (mid) {\n        let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid && t.receiver.track.kind === 'audio');\n        if (!transceiver) {\n          Janus.warn('No audio transceiver with mid ' + mid);\n          result(0);\n          return;\n        }\n        if (remote && !transceiver.receiver) {\n          Janus.warn('Remote transceiver track unavailable');\n          result(0);\n          return;\n        } else if (!remote && !transceiver.sender) {\n          Janus.warn('Local transceiver track unavailable');\n          result(0);\n          return;\n        }\n        query = remote ? transceiver.receiver : transceiver.sender;\n      }\n      query.getStats().then(function (stats) {\n        stats.forEach(function (res) {\n          if (!res || res.kind !== 'audio') return;\n          if ((remote && !res.remoteSource) || (!remote && res.type !== 'media-source')) return;\n          result(res.audioLevel ? res.audioLevel : 0);\n        });\n      });\n      return config.volume[stream].value;\n    } else {\n      // audioInputLevel and audioOutputLevel seem only available in Chrome? audioLevel\n      // seems to be available on Chrome and Firefox, but they don't seem to work\n      Janus.warn('Getting the ' + stream + ' volume unsupported by browser');\n      result(0);\n      return;\n    }\n  }\n\n  function isMuted(handleId, mid, video) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return true;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      return true;\n    }\n    if (!config.myStream) {\n      Janus.warn('Invalid local MediaStream');\n      return true;\n    }\n    if (video) {\n      // Check video track\n      if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n        Janus.warn('No video track');\n        return true;\n      }\n      if (mid) {\n        let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid && t.receiver.track.kind === 'video');\n        if (!transceiver) {\n          Janus.warn('No video transceiver with mid ' + mid);\n          return true;\n        }\n        if (!transceiver.sender || !transceiver.sender.track) {\n          Janus.warn('No video sender with mid ' + mid);\n          return true;\n        }\n        return !transceiver.sender.track.enabled;\n      } else {\n        return !config.myStream.getVideoTracks()[0].enabled;\n      }\n    } else {\n      // Check audio track\n      if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n        Janus.warn('No audio track');\n        return true;\n      }\n      if (mid) {\n        let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid && t.receiver.track.kind === 'audio');\n        if (!transceiver) {\n          Janus.warn('No audio transceiver with mid ' + mid);\n          return true;\n        }\n        if (!transceiver.sender || !transceiver.sender.track) {\n          Janus.warn('No audio sender with mid ' + mid);\n          return true;\n        }\n        return !transceiver.sender.track.enabled;\n      } else {\n        return !config.myStream.getAudioTracks()[0].enabled;\n      }\n    }\n  }\n\n  function mute(handleId, mid, video, mute) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return false;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      return false;\n    }\n    if (!config.myStream) {\n      Janus.warn('Invalid local MediaStream');\n      return false;\n    }\n    if (video) {\n      // Mute/unmute video track\n      if (!config.myStream.getVideoTracks() || config.myStream.getVideoTracks().length === 0) {\n        Janus.warn('No video track');\n        return false;\n      }\n      if (mid) {\n        let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid && t.receiver.track.kind === 'video');\n        if (!transceiver) {\n          Janus.warn('No video transceiver with mid ' + mid);\n          return false;\n        }\n        if (!transceiver.sender || !transceiver.sender.track) {\n          Janus.warn('No video sender with mid ' + mid);\n          return false;\n        }\n        transceiver.sender.track.enabled = mute ? false : true;\n      } else {\n        for (const videostream of config.myStream.getVideoTracks()) {\n          videostream.enabled = !mute;\n        }\n      }\n    } else {\n      // Mute/unmute audio track\n      if (!config.myStream.getAudioTracks() || config.myStream.getAudioTracks().length === 0) {\n        Janus.warn('No audio track');\n        return false;\n      }\n      if (mid) {\n        let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid && t.receiver.track.kind === 'audio');\n        if (!transceiver) {\n          Janus.warn('No audio transceiver with mid ' + mid);\n          return false;\n        }\n        if (!transceiver.sender || !transceiver.sender.track) {\n          Janus.warn('No audio sender with mid ' + mid);\n          return false;\n        }\n        transceiver.sender.track.enabled = mute ? false : true;\n      } else {\n        for (const audiostream of config.myStream.getAudioTracks()) {\n          audiostream.enabled = !mute;\n        }\n      }\n    }\n    return true;\n  }\n\n  function getBitrate(handleId, mid) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return 'Invalid handle';\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) return 'Invalid PeerConnection';\n    // Start getting the bitrate, if getStats is supported\n    if (config.pc.getStats) {\n      let query = config.pc;\n      let target = mid ? mid : 'default';\n      if (mid) {\n        let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid && t.receiver.track.kind === 'video');\n        if (!transceiver) {\n          Janus.warn('No video transceiver with mid ' + mid);\n          return 'No video transceiver with mid ' + mid;\n        }\n        if (!transceiver.receiver) {\n          Janus.warn('No video receiver with mid ' + mid);\n          return 'No video receiver with mid ' + mid;\n        }\n        query = transceiver.receiver;\n      }\n      if (!config.bitrate[target]) {\n        config.bitrate[target] = {\n          timer: null,\n          bsnow: null,\n          bsbefore: null,\n          tsnow: null,\n          tsbefore: null,\n          value: '0 kbits/sec',\n        };\n      }\n      if (!config.bitrate[target].timer) {\n        Janus.log('Starting bitrate timer' + (mid ? ' for mid ' + mid : '') + ' (via getStats)');\n        config.bitrate[target].timer = setInterval(function () {\n          query.getStats().then(function (stats) {\n            stats.forEach(function (res) {\n              if (!res) return;\n              let inStats = false;\n              // Check if these are statistics on incoming media\n              if (\n                (res.mediaType === 'video' || res.id.toLowerCase().indexOf('video') > -1) &&\n                res.type === 'inbound-rtp' &&\n                res.id.indexOf('rtcp') < 0\n              ) {\n                // New stats\n                inStats = true;\n              } else if (\n                res.type == 'ssrc' &&\n                res.bytesReceived &&\n                (res.googCodecName === 'VP8' || res.googCodecName === '')\n              ) {\n                // Older Chromer versions\n                inStats = true;\n              }\n              // Parse stats now\n              if (inStats) {\n                config.bitrate[target].bsnow = res.bytesReceived;\n                config.bitrate[target].tsnow = res.timestamp;\n                if (config.bitrate[target].bsbefore === null || config.bitrate[target].tsbefore === null) {\n                  // Skip this round\n                  config.bitrate[target].bsbefore = config.bitrate[target].bsnow;\n                  config.bitrate[target].tsbefore = config.bitrate[target].tsnow;\n                } else {\n                  // Calculate bitrate\n                  let timePassed = config.bitrate[target].tsnow - config.bitrate[target].tsbefore;\n                  if (Janus.webRTCAdapter.browserDetails.browser === 'safari') timePassed = timePassed / 1000; // Apparently the timestamp is in microseconds, in Safari\n                  let bitRate = Math.round(\n                    ((config.bitrate[target].bsnow - config.bitrate[target].bsbefore) * 8) / timePassed\n                  );\n                  if (Janus.webRTCAdapter.browserDetails.browser === 'safari') bitRate = parseInt(bitRate / 1000);\n                  config.bitrate[target].value = bitRate + ' kbits/sec';\n                  //~ Janus.log(\"Estimated bitrate is \" + config.bitrate.value);\n                  config.bitrate[target].bsbefore = config.bitrate[target].bsnow;\n                  config.bitrate[target].tsbefore = config.bitrate[target].tsnow;\n                }\n              }\n            });\n          });\n        }, 1000);\n        return '0 kbits/sec'; // We don't have a bitrate value yet\n      }\n      return config.bitrate[target].value;\n    } else {\n      Janus.warn('Getting the video bitrate unsupported by browser');\n      return 'Feature unsupported by browser';\n    }\n  }\n\n  function setBitrate(handleId, mid, bitrate) {\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle || !pluginHandle.webrtcStuff) {\n      Janus.warn('Invalid handle');\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (!config.pc) {\n      Janus.warn('Invalid PeerConnection');\n      return;\n    }\n    let transceiver = config.pc.getTransceivers().find((t) => t.mid === mid);\n    if (!transceiver) {\n      Janus.warn('No transceiver with mid', mid);\n      return;\n    }\n    if (!transceiver.sender) {\n      Janus.warn('No sender for transceiver with mid', mid);\n      return;\n    }\n    let params = transceiver.sender.getParameters();\n    if (!params || !params.encodings || params.encodings.length === 0) {\n      Janus.warn('No parameters encodings');\n    } else if (params.encodings.length > 1) {\n      Janus.warn('Ignoring bitrate for simulcast track, use sendEncodings for that');\n    } else if (isNaN(bitrate) || bitrate < 0) {\n      Janus.warn('Invalid bitrate (must be a positive integer)');\n    } else {\n      params.encodings[0].maxBitrate = bitrate;\n      transceiver.sender.setParameters(params);\n    }\n  }\n\n  function webrtcError(error) {\n    Janus.error('WebRTC error:', error);\n  }\n\n  function cleanupWebrtc(handleId, hangupRequest) {\n    Janus.log('Cleaning WebRTC stuff');\n    let pluginHandle = pluginHandles[handleId];\n    if (!pluginHandle) {\n      // Nothing to clean\n      return;\n    }\n    let config = pluginHandle.webrtcStuff;\n    if (config) {\n      if (hangupRequest === true) {\n        // Send a hangup request (we don't really care about the response)\n        let request = { janus: 'hangup', transaction: Janus.randomString(12) };\n        if (pluginHandle.token) request['token'] = pluginHandle.token;\n        if (apisecret) request['apisecret'] = apisecret;\n        Janus.debug('Sending hangup request (handle=' + handleId + '):');\n        Janus.debug(request);\n        if (websockets) {\n          request['session_id'] = sessionId;\n          request['handle_id'] = handleId;\n          ws.send(JSON.stringify(request));\n        } else {\n          Janus.httpAPICall(server + '/' + sessionId + '/' + handleId, {\n            verb: 'POST',\n            withCredentials: withCredentials,\n            body: request,\n          });\n        }\n      }\n      // Cleanup stack\n      if (config.volume) {\n        if (config.volume['local'] && config.volume['local'].timer) clearInterval(config.volume['local'].timer);\n        if (config.volume['remote'] && config.volume['remote'].timer) clearInterval(config.volume['remote'].timer);\n      }\n      for (let i in config.bitrate) {\n        if (config.bitrate[i].timer) clearInterval(config.bitrate[i].timer);\n      }\n      config.bitrate = {};\n      if (!config.streamExternal && config.myStream) {\n        Janus.log('Stopping local stream tracks');\n        Janus.stopAllTracks(config.myStream);\n      }\n      config.streamExternal = false;\n      config.myStream = null;\n      // Close PeerConnection\n      try {\n        config.pc.close();\n      } catch (e) {\n        // Do nothing\n      }\n      config.pc = null;\n      config.candidates = null;\n      config.mySdp = null;\n      config.remoteSdp = null;\n      config.iceDone = false;\n      config.dataChannel = {};\n      config.dtmfSender = null;\n      config.insertableStreams = false;\n    }\n    pluginHandle.oncleanup();\n  }\n\n  function isTrickleEnabled(trickle) {\n    Janus.debug('isTrickleEnabled:', trickle);\n    return trickle === false ? false : true;\n  }\n}\n\nmodule.exports = Janus;\n","import EventEmitter from 'eventemitter3';\nimport { adapter, MediaStream } from '../platform';\nimport config from '../config';\nimport JanusEngine from './janus.js';\nimport Utils from '../Utils';\nimport { Config, Janus, JanusDebugMode, JanusEvent, JanusMediaTrackReason } from '../types';\n\nexport default class JanusClient {\n  public token: Config.Credentials['token'];\n  public server: Config.Conference['server'];\n  public debug: Config.JanusDebug;\n  public engine!: JanusEngine;\n  public videoRoomPlugin: any = null;\n  public isOnlyAudio: boolean = false;\n  public currentRoomId: string | null = null;\n  public currentUserId: number | string | null = null;\n  public remoteFeeds: { [userId: number | string]: any } = {};\n  public remoteJseps: { [userId: number | string]: any } = {};\n  public remoteFeedsAttachingInProgress: { [userId: number | string]: any } = {};\n  public bitrateTimers: { [userId: number | string]: NodeJS.Timeout | null } = {};\n  public emitter: EventEmitter = new EventEmitter();\n\n  constructor(token: Config.Credentials['token']) {\n    if (!Utils.env.isReactNative && !adapter) {\n      throw 'Error: in order to use this library please connect adapter.js. More info https://github.com/webrtc/adapter';\n    }\n\n    this.token = token;\n    this.server = config.conference.server;\n    this.debug = config.conference.debug ?? JanusDebugMode.ALL;\n\n    if (!this.server) {\n      throw \"'server' parameter is mandatory\";\n    } else if (this.server.includes('http')) {\n      this.server += '/janus';\n    }\n  }\n\n  public createSession({\n    success = () => {},\n    error = () => {},\n    destroyed = () => {},\n    timeoutSessionCallback = () => {},\n  }: Janus.InitCallbacks): void {\n    JanusEngine.init({\n      debug: this.debug,\n      callback: () => {\n        if (!JanusEngine.isWebrtcSupported()) {\n          Utils.safeCallbackCall(error)(`Your browser does not support WebRTC, so you can't use this functionality.`);\n          return;\n        }\n\n        this.engine = new JanusEngine({\n          server: this.server,\n          iceServers: config.videochat.iceServers,\n          token: this.token,\n          success: () => Utils.safeCallbackCall(success)(),\n          error: (err) => Utils.safeCallbackCall(error)(err),\n          destroyed: () => Utils.safeCallbackCall(destroyed)(),\n          timeoutSessionCallback: () => Utils.safeCallbackCall(timeoutSessionCallback)(),\n        });\n      },\n    });\n  }\n\n  public getSessionId(): string | null {\n    return this.engine?.getSessionId() ?? null;\n  }\n\n  public destroySession({ success = () => {}, error = () => {} }: Janus.SuccessErrorCallbacks): void {\n    this.engine.destroy({\n      success: () => Utils.safeCallbackCall(success)(),\n      error: (err) => Utils.safeCallbackCall(error)(err),\n    });\n  }\n\n  public attachVideoConferencingPlugin(\n    isRemote: boolean,\n    userId: number,\n    skipMedia: boolean,\n    callbacks: Janus.PluginCallbacks\n  ): void {\n    let remoteFeed: any = null;\n\n    const localStream = callbacks.localStream;\n    delete callbacks.localStream;\n\n    const displayName = callbacks.displayName;\n    delete callbacks.displayName;\n\n    this.engine.attach({\n      plugin: 'janus.plugin.videoroom',\n      success: (pluginHandle) => {\n        if (isRemote) {\n          remoteFeed = pluginHandle;\n          remoteFeed.userId = userId;\n          this.remoteFeedsAttachingInProgress[userId] = remoteFeed;\n\n          const listen = {\n            request: 'join',\n            room: this.currentRoomId,\n            ptype: 'listener',\n            feed: userId,\n            display: displayName,\n          };\n\n          remoteFeed?.send({ message: listen });\n        } else {\n          this.videoRoomPlugin = pluginHandle;\n        }\n\n        Utils.safeCallbackCall(callbacks.success)();\n      },\n      error: (error) => {\n        Utils.safeCallbackCall(callbacks.error)(error);\n      },\n      consentDialog: (on) => {\n        Utils.safeCallbackCall(callbacks.consentDialog)(on);\n      },\n      mediaState: (medium, on) => {\n        Utils.safeCallbackCall(callbacks.mediaState)(medium, on);\n      },\n      webrtcState: (on) => {\n        Utils.safeCallbackCall(callbacks.webrtcState)(on);\n      },\n      slowLink: (uplink, nacks) => {\n        Utils.safeCallbackCall(callbacks.slowLink)(uplink, nacks);\n      },\n      iceState: (iceConnectionState) => {\n        Utils.safeCallbackCall(callbacks.iceState)(iceConnectionState);\n      },\n      onmessage: (msg, jsep) => {\n        const event = msg['videoroom'];\n\n        if (isRemote) {\n          if (event) {\n            // Remote feed attached\n            if (event === 'attached') {\n              const feedId = msg['id'];\n              this.remoteFeeds[feedId] = this.remoteFeedsAttachingInProgress[feedId];\n              this.remoteFeedsAttachingInProgress[feedId] = null;\n            } else if (msg['error']) {\n              Utils.safeCallbackCall(callbacks.error)(msg['error']);\n            }\n          }\n\n          if (jsep) {\n            const feedId = msg['id'];\n\n            // ICE restart case\n            if (!feedId) {\n            }\n\n            this.remoteJseps[feedId] = jsep;\n\n            this.createAnswer(\n              {\n                remoteFeed: this.remoteFeeds[feedId],\n                jsep,\n              },\n              localStream as MediaStream,\n              {\n                success: () => {},\n                error: (error) => {\n                  Utils.safeCallbackCall(callbacks.error)(error);\n                },\n              }\n            );\n          }\n\n          // local feed\n        } else {\n          if (event) {\n            // We JOINED\n            if (event === 'joined') {\n              const media = skipMedia ? { audio: false, video: false } : { audio: true, video: true };\n              const existedStream = skipMedia ? undefined : localStream;\n              const offerParams = { media, stream: existedStream };\n              this.createOffer(offerParams, {\n                success: () => {\n                  if (msg['publishers']) {\n                    const publishers = msg['publishers'];\n                    for (const f in publishers) {\n                      const userId = publishers[f]['id'];\n                      const userDisplayName = publishers[f]['display'];\n                      this.emitter.emit(JanusEvent.PARTICIPANT_JOINED, userId, userDisplayName, true);\n                    }\n                  }\n                },\n                error: (error) => {\n                  Utils.safeCallbackCall(callbacks.error)(error);\n                },\n              });\n\n              // We JOINED and now receiving who is online\n            } else if (event === 'event') {\n              // Any new feed to attach to?\n              if (msg['publishers']) {\n                const publishers = msg['publishers'];\n\n                for (const f in publishers) {\n                  const userId = publishers[f]['id'];\n                  const userDisplayName = publishers[f]['display'];\n\n                  this.emitter.emit(JanusEvent.PARTICIPANT_JOINED, userId, userDisplayName, false);\n                }\n\n                // Someone is LEAVING\n              } else if (msg['leaving']) {\n                // One of the publishers has gone away?\n                const feedId = msg['leaving'];\n                const success = this.detachRemoteFeed(feedId);\n                if (success) {\n                  this.emitter.emit(JanusEvent.PARTICIPANT_LEFT, feedId, null);\n                }\n              } else if (msg['unpublished']) {\n                // One of the publishers has gone away?\n                const feedId = msg['unpublished'];\n                if (feedId != 'ok') {\n                  const success = this.detachRemoteFeed(feedId);\n                  if (success) {\n                    this.emitter.emit(JanusEvent.PARTICIPANT_LEFT, feedId, null);\n                  }\n                }\n              } else if (msg['error']) {\n                Utils.DLog('[janus error message]', msg['error']);\n                // #define VIDEOROOM_ERROR_ID_EXISTS\t\t\t436\n                // #define VIDEOROOM_ERROR_UNAUTHORIZED\t\t433\n                //\n                this.emitter.emit(JanusEvent.ERROR, msg);\n                Utils.safeCallbackCall(callbacks.error)(msg['error']);\n              }\n            }\n          }\n\n          if (jsep) {\n            this.videoRoomPlugin.handleRemoteJsep({ jsep: jsep });\n\n            // TODO:\n            // handle wrong or unsupported codecs here...\n            // const video = msg['video_codec']\n            // if(mystream && mystream.getVideoTracks() && mystream.getVideoTracks().length > 0 && !video) {\n            // \t\t'Our video stream has been rejected, viewers won't see us'\n            // }\n          }\n        }\n      },\n      onlocaltrack: (track, on) => {\n        Utils.DLog('[onlocaltrack]', track, on);\n        this.onLocalTrack(track, on);\n      },\n      onremotetrack: (track, mid, on, metadata) => {\n        Utils.DLog('[onremotetrack]', track, mid, on, metadata);\n        this.onRemoteTrack(remoteFeed, track, mid, on, metadata);\n      },\n      ondataopen: (channelLabel) => {\n        Utils.DLog('[ondataopen]', channelLabel);\n        this.emitter.emit(JanusEvent.DATA_CHANNEL_OPEN, channelLabel);\n      },\n      ondata: (data, channelLabel) => {\n        Utils.DLog('[ondata]', channelLabel, data);\n        this.emitter.emit(JanusEvent.DATA_CHANNEL_MESSAGE, channelLabel, data);\n      },\n      oncleanup: () => {\n        Utils.safeCallbackCall(callbacks.oncleanup)();\n      },\n      detached: () => {},\n    });\n  }\n\n  public onLocalTrack(track: MediaStreamTrack, on: any): void {\n    // this.emitter.emit(JanusEvent.LOCAL_STREAM, track);\n  }\n\n  public onRemoteTrack(remoteFeed: any, track: MediaStreamTrack, mid: any, on: any, metadata: any): void {\n    const eventType = metadata && metadata.reason;\n\n    if (eventType === JanusMediaTrackReason.CREATED) {\n      const isStreamNoExistedBefore = !remoteFeed.stream || !remoteFeed.tracks;\n      if (isStreamNoExistedBefore) {\n        remoteFeed.tracks = { [mid]: track };\n        remoteFeed.stream = new MediaStream([track]);\n      } else {\n        remoteFeed.tracks[mid] = track;\n        remoteFeed.stream.addTrack(track);\n      }\n      if (isStreamNoExistedBefore) {\n        this.emitter.emit(JanusEvent.REMOTE_STREAM, remoteFeed.userId, remoteFeed.stream);\n      }\n    } else if (eventType === JanusMediaTrackReason.ENDED) {\n      delete remoteFeed.tracks[mid];\n\n      const trackToRemove = remoteFeed.stream.getTracks().find((streamTrack) => streamTrack.kind === track.kind);\n      remoteFeed.stream.removeTrack(trackToRemove);\n    }\n\n    this.emitter.emit(JanusEvent.REMOTE_TRACKS_UPDATED, remoteFeed.userId, track, eventType);\n  }\n\n  public getPluginId(): string | null {\n    return this.videoRoomPlugin?.getId() ?? null;\n  }\n\n  public detachVideoConferencingPlugin(callbacks: Janus.SuccessErrorCallbacks): void {\n    const clean = () => {\n      this.videoRoomPlugin = null;\n\n      // detach all remote feeds\n      Object.keys(this.remoteFeeds).forEach((userId) => {\n        this.detachRemoteFeed(Number(userId));\n      });\n\n      this.remoteFeeds = {};\n      this.remoteJseps = {};\n      /*\n       * Deprecated\n      this.currentMediaDeviceId = null\n       */\n    };\n\n    this.videoRoomPlugin.detach({\n      success: () => {\n        clean();\n\n        Utils.safeCallbackCall(callbacks.success)();\n      },\n      error: (error) => {\n        clean();\n\n        Utils.safeCallbackCall(callbacks.error)(error);\n      },\n    });\n  }\n\n  public join(roomId: string, userId: number, isOnlyAudio: boolean, callbacks: Janus.RequestCallbacks): void {\n    const displayName = callbacks.displayName;\n    delete callbacks.displayName;\n\n    this.isOnlyAudio = isOnlyAudio;\n\n    Utils.DLog('isOnlyAudio: ' + this.isOnlyAudio);\n\n    const joinEvent = {\n      request: 'join',\n      room: roomId,\n      ptype: 'publisher',\n      id: userId,\n      display: displayName,\n    };\n\n    this.videoRoomPlugin.send({\n      message: joinEvent,\n      success: (resp) => {\n        this.currentRoomId = roomId;\n        this.currentUserId = userId;\n        Utils.safeCallbackCall(callbacks.success)();\n      },\n      error: (error) => {\n        Utils.safeCallbackCall(callbacks.error)(error);\n      },\n    });\n  }\n\n  public leave(callbacks: Janus.RequestCallbacks): void {\n    Utils.DLog('leave');\n\n    if (!this.engine.isConnected()) {\n      Utils.safeCallbackCall(callbacks.success)();\n      return;\n    }\n\n    const leaveEvent = {\n      request: 'leave',\n      room: this.currentRoomId,\n      id: this.currentUserId,\n    };\n\n    if (this.videoRoomPlugin) {\n      this.videoRoomPlugin.send({ message: leaveEvent });\n    }\n    this.currentRoomId = null;\n    this.currentUserId = null;\n\n    Utils.safeCallbackCall(callbacks.success)();\n  }\n\n  public listOnlineParticipants(roomId: string, callbacks: Janus.SuccessErrorCallbacks): void {\n    const listRequest = { request: 'listparticipants', room: roomId };\n\n    this.videoRoomPlugin.send({\n      message: listRequest,\n      success: (data) => {\n        const participants = data ? data.participants : [];\n        Utils.safeCallbackCall(callbacks.success)(participants);\n      },\n      error: (error) => {\n        Utils.safeCallbackCall(callbacks.error)(error);\n      },\n    });\n  }\n\n  public toggleAudioMute(): boolean {\n    const muted = this.videoRoomPlugin.isAudioMuted();\n    if (muted) {\n      this.videoRoomPlugin.unmuteAudio();\n    } else {\n      this.videoRoomPlugin.muteAudio();\n    }\n    return this.videoRoomPlugin.isAudioMuted();\n  }\n\n  public isAudioMuted(): boolean {\n    return this.videoRoomPlugin.isAudioMuted();\n  }\n\n  public toggleRemoteAudioMute(userId: number): boolean {\n    const remoteFeed = this.remoteFeeds[userId];\n    if (!remoteFeed) {\n      return false;\n    }\n\n    const audioTracks = remoteFeed.stream.getAudioTracks();\n    if (audioTracks && audioTracks.length > 0) {\n      for (let i = 0; i < audioTracks.length; ++i) {\n        audioTracks[i].enabled = !audioTracks[i].enabled;\n      }\n      return !audioTracks[0].enabled;\n    }\n\n    return false;\n  }\n\n  public isRemoteAudioMuted(userId: number): boolean {\n    const remoteFeed = this.remoteFeeds[userId];\n    if (!remoteFeed) {\n      return false;\n    }\n\n    const audioTracks = remoteFeed.stream.getAudioTracks();\n    if (audioTracks && audioTracks.length > 0) {\n      return !audioTracks[0].enabled;\n    }\n\n    return false;\n  }\n\n  public toggleVideoMute(): boolean {\n    const muted = this.videoRoomPlugin.isVideoMuted();\n    if (muted) {\n      this.videoRoomPlugin.unmuteVideo();\n    } else {\n      this.videoRoomPlugin.muteVideo();\n    }\n    return this.videoRoomPlugin.isVideoMuted();\n  }\n\n  public isVideoMuted(): boolean {\n    return this.videoRoomPlugin.isVideoMuted();\n  }\n\n  public toggleRemoteVideoMute(userId: number): boolean {\n    const remoteFeed = this.remoteFeeds[userId];\n    if (!remoteFeed) {\n      return false;\n    }\n\n    const videoTracks = remoteFeed.stream.getVideoTracks();\n    if (videoTracks && videoTracks.length > 0) {\n      for (let i = 0; i < videoTracks.length; ++i) {\n        videoTracks[i].enabled = !videoTracks[i].enabled;\n      }\n      return !videoTracks[0].enabled;\n    }\n\n    return false;\n  }\n\n  public isRemoteVideoMuted(userId: number): boolean {\n    const remoteFeed = this.remoteFeeds[userId];\n    if (!remoteFeed) {\n      return false;\n    }\n\n    const videoTracks = remoteFeed.stream.getVideoTracks();\n    if (videoTracks && videoTracks.length > 0) {\n      return !videoTracks[0].enabled;\n    }\n\n    return false;\n  }\n\n  public sendKeyframeRequest(roomId: string, callbacks: Janus.SuccessErrorCallbacks): void {\n    const configureRequest = {\n      request: 'configure',\n      room: roomId,\n      keyframe: true,\n    };\n\n    this.videoRoomPlugin.send({\n      message: configureRequest,\n      success: (response) => {\n        Utils.safeCallbackCall(callbacks.success)(response);\n      },\n      error: (error) => {\n        Utils.safeCallbackCall(callbacks.error)(error);\n      },\n    });\n  }\n\n  public getTracksFromStream(stream: MediaStream): { type: string; capture: MediaStreamTrack; recv: boolean }[] {\n    const tracks: { type: string; capture: MediaStreamTrack; recv: boolean }[] = [];\n\n    const audioTracks = stream.getAudioTracks();\n    if (audioTracks.length) {\n      const audioTrack = audioTracks[0];\n      tracks.push({ type: 'audio', capture: audioTrack, recv: false });\n    }\n\n    const videoTracks = stream.getVideoTracks();\n    if (videoTracks.length) {\n      const videoTrack = videoTracks[0];\n      tracks.push({ type: 'video', capture: videoTrack, recv: false });\n    }\n\n    return tracks;\n  }\n\n  public createOffer(\n    mediaParams: { stream?: MediaStream; media: { audio: boolean; video: boolean }; replace?: boolean },\n    callbacks: Janus.SuccessErrorCallbacks\n  ): void {\n    Utils.DLog('[JanusWrapper][createOffer]', mediaParams);\n\n    const { stream: existedStream, media, replace } = mediaParams;\n\n    const createOfferParams: any = { tracks: [{ type: 'data' }] };\n\n    if (existedStream) {\n      const tracksFromStream = this.getTracksFromStream(existedStream);\n      createOfferParams.tracks = createOfferParams.tracks.concat(tracksFromStream);\n    } else if (media) {\n      const tracksFromParams: { type: string; capture: boolean; recv: boolean; replace: boolean }[] = [];\n      if (media.audio) {\n        tracksFromParams.push({\n          type: 'audio',\n          capture: media.audio,\n          recv: false,\n          replace: !!replace,\n        });\n      }\n      if (media.video) {\n        tracksFromParams.push({\n          type: 'video',\n          capture: media.video,\n          recv: false,\n          replace: !!replace,\n        });\n      }\n      createOfferParams.tracks = createOfferParams.tracks.concat(tracksFromParams);\n    } else {\n      createOfferParams.tracks = createOfferParams.tracks.concat([\n        { type: 'audio', capture: true, recv: false, replace: !!replace },\n        { type: 'video', capture: true, recv: false, replace: !!replace },\n      ]);\n    }\n\n    Utils.DLog('[JanusWrapper][createOffer][params]', createOfferParams);\n\n    createOfferParams.customizeSdp = (jsep) => {};\n\n    createOfferParams.success = (jsep) => {\n      const publish = {\n        request: 'configure',\n        audio: !!media.audio,\n        video: !!media.video,\n      };\n      Utils.DLog('[JanusWrapper][createOffer][success]', publish);\n\n      this.videoRoomPlugin.send({ message: publish, jsep: jsep });\n\n      Utils.safeCallbackCall(callbacks.success)();\n    };\n\n    createOfferParams.error = (error) => {\n      Utils.DLog('[JanusWrapper][createOffer][error]', error);\n      if (media.audio) {\n        this.createOffer({ media: { video: false, audio: false } }, callbacks);\n      } else {\n        Utils.safeCallbackCall(callbacks.error)(error);\n      }\n    };\n\n    this.videoRoomPlugin.createOffer(createOfferParams);\n  }\n\n  public getTracksMidsFromStream(stream: MediaStream): { type: string; mid: string; recv: boolean }[] {\n    const tracks: { type: string; mid: string; recv: boolean }[] = [];\n\n    const audioTracks = stream.getAudioTracks();\n    if (audioTracks.length) {\n      const audioTrack = audioTracks[0];\n      tracks.push({ type: 'audio', mid: audioTrack.id, recv: true });\n    }\n\n    const videoTracks = stream.getVideoTracks();\n    if (videoTracks.length) {\n      const videoTrack = videoTracks[0];\n      tracks.push({ type: 'video', mid: videoTrack.id, recv: true });\n    }\n\n    return tracks;\n  }\n\n  public createAnswer(\n    { remoteFeed, jsep }: any,\n    existedStream: MediaStream,\n    callbacks: Janus.SuccessErrorCallbacks\n  ): void {\n    Utils.DLog('[JanusWrapper][createAnswer]', jsep, existedStream);\n    let tracks: any = [{ type: 'data' }];\n\n    if (existedStream) {\n      const tracksFromStream = this.getTracksMidsFromStream(existedStream);\n      tracks = tracks.concat(tracksFromStream);\n    }\n\n    Utils.DLog('[JanusWrapper][createAnswer][tracks]', tracks);\n\n    remoteFeed.createAnswer({\n      jsep: jsep,\n      tracks: tracks,\n      success: (jsep) => {\n        const body = { request: 'start', room: this.currentRoomId };\n        Utils.DLog('[JanusWrapper][createAnswer][success]', body);\n\n        remoteFeed.send({ message: body, jsep: jsep });\n\n        Utils.safeCallbackCall(callbacks.success)();\n      },\n      error: (error) => {\n        Utils.DLog('[JanusWrapper][createAnswer][error]', error);\n        Utils.safeCallbackCall(callbacks.error)(error);\n      },\n    });\n  }\n\n  public detachRemoteFeed(userId: number): boolean {\n    const remoteFeed = this.remoteFeeds[userId];\n    if (remoteFeed) {\n      remoteFeed.detach();\n      this.remoteFeeds[userId] = null;\n      this.remoteJseps[userId] = null;\n      return true;\n    }\n    return false;\n  }\n\n  public getUserBitrate(userId: number): any {\n    const remoteFeed = this.remoteFeeds[userId];\n    return remoteFeed.getBitrate();\n  }\n\n  public getVolume(resultCallback: (value: any) => void): void {\n    return this.videoRoomPlugin.getLocalVolume(null, resultCallback);\n  }\n\n  public getUserVolume(userId: number, resultCallback: (value: any) => void): void {\n    const remoteFeed = this.remoteFeeds[userId];\n    return remoteFeed.getRemoteVolume(null, resultCallback);\n  }\n\n  public showBitrate(userId: number, element: any): void {\n    const remoteFeed = this.remoteFeeds[userId];\n\n    if (\n      !Utils.env.isReactNative &&\n      (adapter.browserDetails.browser === 'chrome' || adapter.browserDetails.browser === 'firefox')\n    ) {\n      this.bitrateTimers[userId] = setInterval(() => {\n        const bitrate = remoteFeed.getBitrate();\n        element.text(bitrate);\n      }, 1000);\n    }\n  }\n\n  public hideBitrate(userId: number, element: any): void {\n    if (this.bitrateTimers[userId]) {\n      clearInterval(this.bitrateTimers[userId]);\n    }\n    this.bitrateTimers[userId] = null;\n    element.text = null;\n  }\n\n  public on(eventType: JanusEvent, listener: (...args: any[]) => void): EventEmitter {\n    return this.emitter.addListener(eventType, listener);\n  }\n\n  public removeAllListeners(eventType?: JanusEvent): EventEmitter {\n    return this.emitter.removeAllListeners(eventType);\n  }\n}\n","import { mediaDevices } from '../platform';\nimport Utils from '../Utils';\nimport JanusClient from './JanusClient';\nimport { Auth, Janus, JanusCallType, JanusEvent, Media } from '../types';\n\nexport default class ConferenceSession {\n  private client: JanusClient;\n  public id: string = `${Math.random()}`;\n  public currentUserDisplayName?: string;\n  public localStream?: MediaStream;\n  public mediaParams: MediaStreamConstraints = {};\n  public onParticipantJoinedListener!: Janus.OnParticipantJoinedListener;\n  public onParticipantLeftListener!: Janus.OnParticipantLeftListener;\n  public onSlowLinkListener!: Janus.OnSlowLinkListener;\n  public onRemoteStreamListener!: Janus.OnRemoteStreamListener;\n  public onRemoteTracksUpdatedListener!: Janus.OnRemoteTracksUpdatedListener;\n  public onRemoteConnectionStateChangedListener!: Janus.OnRemoteConnectionStateChangedListener;\n  public onDataChannelOpenedListener!: Janus.OnDataChannelOpenedListener;\n  public onDataChannelMessageListener!: Janus.OnDataChannelMessageListener;\n  public onSessionConnectionStateChangedListener!: Janus.OnSessionConnectionStateChangedListener;\n  public onErrorListener!: Janus.OnErrorListener;\n\n  constructor(token: Auth.Session['token']) {\n    this.client = new JanusClient(token);\n    this.client.on(JanusEvent.PARTICIPANT_JOINED, this.onParticipantJoined);\n    this.client.on(JanusEvent.PARTICIPANT_LEFT, this.onParticipantLeft);\n    this.client.on(JanusEvent.REMOTE_STREAM, this.onRemoteStream);\n    this.client.on(JanusEvent.REMOTE_TRACKS_UPDATED, this.onRemoteTracksUpdated);\n    this.client.on(JanusEvent.DATA_CHANNEL_OPEN, this.onDataChannelOpen);\n    this.client.on(JanusEvent.DATA_CHANNEL_MESSAGE, this.onDataChannelMessage);\n    this.client.on(JanusEvent.ERROR, this.onError);\n  }\n\n  get currentRoomId(): string | null {\n    return this.client.currentRoomId;\n  }\n\n  set currentRoomId(roomId: string | null) {\n    this.client.currentRoomId = roomId;\n  }\n\n  get currentPublisherPC() {\n    return this.client.videoRoomPlugin.webrtcStuff.pc;\n  }\n\n  private async createSession(): Promise<void> {\n    let isResolved = false;\n\n    return new Promise((resolve, reject) => {\n      this.client.createSession({\n        success: () => {\n          isResolved = true;\n          resolve(void 0);\n        },\n        error: (error) => {\n          if (isResolved) {\n            this.onError(error);\n          } else {\n            reject(error);\n          }\n        },\n      });\n    });\n  }\n\n  // joinAsPublisher+Listener\n  public async join(roomId: string, user_id: number, userDisplayName: string): Promise<void> {\n    this.currentUserDisplayName = userDisplayName;\n    this.currentRoomId = roomId;\n    await this.createSession();\n    await this.createHandler(user_id, false, false);\n    await this.joinInternal(this.currentRoomId, user_id);\n  }\n\n  public async joinAsListener(roomId: string, user_id: number, userDisplayName: string): Promise<void> {\n    this.currentUserDisplayName = userDisplayName;\n    this.currentRoomId = roomId;\n    await this.createSession();\n    await this.createHandler(user_id, false, true);\n    await this.joinInternal(this.currentRoomId, user_id);\n  }\n\n  public async sendKeyframeRequest(roomId: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.client.sendKeyframeRequest(roomId, {\n        success: resolve,\n        error: reject,\n      });\n    });\n  }\n\n  private async createHandler(user_id: number, isRemote: boolean, skipMedia: boolean = false): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.client.attachVideoConferencingPlugin(isRemote, user_id, skipMedia, {\n        success: resolve,\n        error: reject,\n        iceState: isRemote\n          ? (iceState) => this.onRemoteIceStateChanged(user_id, iceState)\n          : (iceState) => this.onLocalIceStateChanged(iceState),\n        slowLink: isRemote\n          ? (uplink, nacks) => this.onSlowLink(user_id, uplink, nacks)\n          : (uplink, nacks) => this.onSlowLink(null, uplink, nacks),\n        localStream: this.localStream,\n        displayName: this.currentUserDisplayName,\n      });\n    });\n  }\n\n  private async joinInternal(roomId: string, user_id: number): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.client.join(roomId, user_id, false, {\n        success: resolve,\n        error: reject,\n        displayName: this.currentUserDisplayName,\n      });\n    });\n  }\n\n  private onParticipantJoined = (user_id: number, userDisplayName: string, isExistingParticipant: boolean): void => {\n    Utils.DLog('[onParticipantJoined]', user_id, userDisplayName, isExistingParticipant);\n    this.createHandler(user_id, true, false);\n    Utils.safeCallbackCall(this.onParticipantJoinedListener)(this, user_id, userDisplayName, isExistingParticipant);\n  };\n\n  private onParticipantLeft = (user_id: number, userDisplayName: string): void => {\n    Utils.DLog('[onParticipantLeft]', user_id, userDisplayName);\n    Utils.safeCallbackCall(this.onParticipantLeftListener)(this, user_id, userDisplayName);\n  };\n\n  private onError = (error: any): void => {\n    Utils.DLog('[onError]', JSON.stringify(error));\n    Utils.safeCallbackCall(this.onErrorListener)(this, error);\n  };\n\n  private onDataChannelOpen = (label: any): void => {\n    Utils.DLog('[onDataChannelOpen]', label);\n    Utils.safeCallbackCall(this.onDataChannelOpenedListener)(this, label);\n  };\n\n  private onDataChannelMessage = (user_id: number, data: any): void => {\n    Utils.DLog('[onDataChannelMessage]', user_id, data);\n    Utils.safeCallbackCall(this.onDataChannelMessageListener)(this, user_id, data);\n  };\n\n  private onLocalIceStateChanged = (iceState: any): void => {\n    Utils.DLog('[onLocalIceStateChanged]', iceState);\n    Utils.safeCallbackCall(this.onSessionConnectionStateChangedListener)(this, iceState);\n  };\n\n  private onRemoteIceStateChanged = (user_id: number, iceState: any): void => {\n    Utils.DLog('[onRemoteIceStateChanged]', user_id, iceState);\n    Utils.safeCallbackCall(this.onRemoteConnectionStateChangedListener)(this, user_id, iceState);\n  };\n\n  private onRemoteStream = (user_id: number, stream: MediaStream): void => {\n    Utils.DLog('[onRemoteStream]', user_id, stream);\n    Utils.safeCallbackCall(this.onRemoteStreamListener)(this, user_id, stream);\n  };\n\n  private onRemoteTracksUpdated = (user_id: number, track: MediaStreamTrack, eventType: any): void => {\n    Utils.DLog('[onRemoteTracksUpdated]', user_id, track, eventType);\n    Utils.safeCallbackCall(this.onRemoteTracksUpdatedListener)(this, user_id, track, eventType);\n  };\n\n  private onSlowLink = (user_id: number | null, uplink: any, nacks: any): void => {\n    Utils.DLog('[onSlowLink]', user_id, uplink, nacks);\n    Utils.safeCallbackCall(this.onSlowLinkListener)(this, user_id, uplink, nacks);\n  };\n\n  public async listOfOnlineParticipants(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (this.currentRoomId) {\n        this.client.listOnlineParticipants(this.currentRoomId, {\n          success: resolve,\n          error: reject,\n        });\n      } else {\n        reject('Room ID is not set');\n      }\n    });\n  }\n\n  public async leave(): Promise<void> {\n    this.currentRoomId = null;\n    this.currentUserDisplayName = undefined;\n    await this.leaveGroup();\n    await this.detachVideoConferencingPlugin();\n    await this.destroy();\n\n    if (this.localStream) {\n      this.localStream.getTracks().forEach((track) => track.stop());\n      this.localStream = undefined;\n      this.mediaParams = {};\n    }\n  }\n\n  public async leaveGroup(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.client.leave({\n        success: resolve,\n        error: reject,\n      });\n    });\n  }\n\n  public async destroy(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.client.destroySession({\n        success: resolve,\n        error: reject,\n      });\n    });\n  }\n\n  public async detachVideoConferencingPlugin(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.client.detachVideoConferencingPlugin({\n        success: resolve,\n        error: reject,\n      });\n    });\n  }\n\n  public async getDisplayMedia(params: Media.DisplayParams): Promise<MediaStream> {\n    if (!mediaDevices.getDisplayMedia) {\n      throw new Error(\"Your environment does not support 'getDisplayMedia' API\");\n    }\n\n    const elementId = params && params.elementId;\n    const options = params && params.options;\n    const mediaParams = { ...params };\n\n    this.mediaParams = mediaParams;\n    delete mediaParams.elementId;\n    delete mediaParams.options;\n\n    try {\n      const stream = await mediaDevices.getDisplayMedia(mediaParams);\n      return this.upsertStream(stream, elementId, options);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async getUserMedia(params: Media.UserParams): Promise<MediaStream> {\n    const elementId = params && params.elementId;\n    const options = params && params.options;\n    const mediaParams = { ...params };\n\n    this.mediaParams = mediaParams;\n    delete mediaParams.elementId;\n    delete mediaParams.options;\n\n    try {\n      const stream = await mediaDevices.getUserMedia(mediaParams);\n      return this.upsertStream(stream, elementId, options);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private upsertStream(\n    stream: MediaStream,\n    elementId: string | null = null,\n    options: Media.ElementOptions = {}\n  ): MediaStream {\n    const shouldUpdateCurrentStream = !!this.localStream;\n\n    if (shouldUpdateCurrentStream) {\n      this.replaceTracks(stream);\n    } else {\n      this.localStream = stream;\n    }\n\n    if (!this.localStream) {\n      throw new Error('Local stream is not defined');\n    }\n\n    if (elementId) {\n      if (shouldUpdateCurrentStream) {\n        this.detachMediaStream(elementId, options);\n      }\n      this.attachMediaStream(elementId, this.localStream, options);\n    }\n\n    return this.localStream;\n  }\n\n  private replaceTracks(stream: MediaStream): MediaStream {\n    this.localStream?.getTracks().forEach((localTrack) => {\n      if (localTrack.kind === JanusCallType.AUDIO && stream.getAudioTracks().length === 0) {\n        return;\n      } else {\n        localTrack.stop();\n        this.localStream?.removeTrack(localTrack);\n      }\n    });\n\n    stream.getTracks().forEach((newTrack) => {\n      const pcSenders = this.currentPublisherPC.getSenders();\n      const sender = pcSenders.find(({ track }) => newTrack.kind === track.kind);\n\n      if (newTrack.kind === JanusCallType.AUDIO) {\n        newTrack.enabled = this.localStream?.getAudioTracks().every(({ enabled }) => enabled) ?? true;\n      } else {\n        newTrack.enabled = this.localStream?.getVideoTracks().every(({ enabled }) => enabled) ?? true;\n      }\n\n      if (sender) {\n        sender.replaceTrack(newTrack);\n        this.localStream?.addTrack(newTrack);\n      } else {\n        console.warn(`No sender found for track kind: ${newTrack.kind}`);\n      }\n    });\n\n    if (!this.localStream) {\n      throw new Error('Local stream is not defined');\n    }\n\n    return this.localStream;\n  }\n\n  public async switchMediaTracks(options: Media.TrackConstraintsOrDeviceIds): Promise<MediaStream> {\n    [JanusCallType.AUDIO, JanusCallType.VIDEO].forEach((type) => {\n      const device = type === JanusCallType.AUDIO ? options.audio : type === JanusCallType.VIDEO ? options.video : {};\n      const deviceId = typeof device === 'string' ? device : device?.deviceId ?? null;\n\n      if (deviceId) {\n        if (typeof this.mediaParams[type] === 'object') {\n          this.mediaParams[type].deviceId = deviceId;\n        } else {\n          this.mediaParams[type] = { deviceId };\n        }\n      }\n    });\n\n    try {\n      const mediaParams = {\n        audio: this.mediaParams?.audio ?? false,\n        video: this.mediaParams?.video ?? false,\n      };\n      const stream = await mediaDevices.getDisplayMedia(mediaParams);\n      return this.replaceTracks(stream);\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public muteVideo(): void {\n    if (!this.isVideoMuted()) {\n      this.client.toggleVideoMute();\n    }\n  }\n\n  public unmuteVideo(): void {\n    if (this.isVideoMuted()) {\n      this.client.toggleVideoMute();\n    }\n  }\n\n  public muteAudio(): void {\n    if (!this.isAudioMuted()) {\n      this.client.toggleAudioMute();\n    }\n  }\n\n  public unmuteAudio(): void {\n    if (this.isAudioMuted()) {\n      this.client.toggleAudioMute();\n    }\n  }\n\n  public isVideoMuted(): boolean {\n    return this.client.isVideoMuted();\n  }\n\n  public isAudioMuted(): boolean {\n    return this.client.isAudioMuted();\n  }\n\n  public async getUserVolume(): Promise<any> {\n    return new Promise((resolve, _reject) => {\n      return this.client.getVolume(resolve);\n    });\n  }\n\n  public getRemoteUserBitrate(userId: number): any {\n    return this.client.getUserBitrate(userId);\n  }\n\n  public async getRemoteUserVolume(userId: number): Promise<any> {\n    return new Promise((resolve, reject) => {\n      return this.client.getUserVolume(userId, resolve);\n    });\n  }\n\n  public attachMediaStream(elementId: string, stream: MediaStream, opt?: Media.ElementOptions): void {\n    const mediaElement = document.getElementById(elementId) as HTMLMediaElement;\n\n    if ('srcObject' in mediaElement) {\n      mediaElement.srcObject = stream;\n      mediaElement.style.transform = opt?.mirror ? 'scaleX(-1)' : 'none';\n      if (typeof opt?.muted === 'boolean') {\n        mediaElement.muted = opt?.muted;\n      }\n      mediaElement.onloadedmetadata = (_event: Event) => {\n        mediaElement.play();\n      };\n    } else {\n      throw new Error(`Unable to attach media stream, element #${elementId} is undefined`);\n    }\n  }\n\n  public detachMediaStream(elementId: string, opt?: Media.ElementOptions) {\n    const mediaElement = document.getElementById(elementId) as HTMLMediaElement;\n\n    if ('srcObject' in mediaElement) {\n      mediaElement.pause();\n      mediaElement.srcObject = null;\n      mediaElement.style.transform = opt?.mirror ? 'scaleX(-1)' : 'none';\n      if (typeof opt?.muted === 'boolean') {\n        mediaElement.muted = opt?.muted;\n      }\n    } else {\n      throw new Error(`Unable to attach media stream, element #${elementId} is undefined`);\n    }\n  }\n\n  public async sendData(data: any, label: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.client.videoRoomPlugin.data({\n        data,\n        label,\n        success: resolve,\n        error: reject,\n      });\n    });\n  }\n}\n","import { mediaDevices } from '../platform';\nimport ConferenceSession from './ConferenceSession';\nimport ProxyService from '../Proxy';\nimport { Janus, JanusCallType, ConferenceEvent, DeviceInputType } from '../types';\n\nexport default class ConferenceClient {\n  public proxy: ProxyService;\n  public DeviceInputType: typeof DeviceInputType = DeviceInputType;\n  public JanusCallType: typeof JanusCallType = JanusCallType;\n  public sessionsStore: { [id: ConferenceSession['id']]: ConferenceSession } = {};\n  public onParticipantJoinedListener!: Janus.OnParticipantJoinedListener;\n  public onParticipantLeftListener!: Janus.OnParticipantLeftListener;\n  public onSlowLinkListener!: Janus.OnSlowLinkListener;\n  public onRemoteStreamListener!: Janus.OnRemoteStreamListener;\n  public onRemoteTracksUpdatedListener!: Janus.OnRemoteTracksUpdatedListener;\n  public onRemoteConnectionStateChangedListener!: Janus.OnRemoteConnectionStateChangedListener;\n  public onDataChannelOpenedListener!: Janus.OnDataChannelOpenedListener;\n  public onDataChannelMessageListener!: Janus.OnDataChannelMessageListener;\n  public onSessionConnectionStateChangedListener!: Janus.OnSessionConnectionStateChangedListener;\n  public onErrorListener!: Janus.OnErrorListener;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  createNewSession() {\n    const session = new ConferenceSession(this.getCurrentSessionToken());\n\n    this.sessionsStore[session.id] = session;\n    session.onParticipantJoinedListener = this.onParticipantJoinedListener;\n    session.onParticipantLeftListener = this.onParticipantLeftListener;\n    session.onSlowLinkListener = this.onSlowLinkListener;\n    session.onRemoteStreamListener = this.onRemoteStreamListener;\n    session.onRemoteTracksUpdatedListener = this.onRemoteTracksUpdatedListener;\n    session.onRemoteConnectionStateChangedListener = this.onRemoteConnectionStateChangedListener;\n    session.onDataChannelOpenedListener = this.onDataChannelOpenedListener;\n    session.onDataChannelMessageListener = this.onDataChannelMessageListener;\n    session.onSessionConnectionStateChangedListener = this.onSessionConnectionStateChangedListener;\n    session.onErrorListener = this.onErrorListener;\n\n    return session;\n  }\n\n  public async getMediaDevices(kind?: DeviceInputType): Promise<MediaDeviceInfo[]> {\n    if (mediaDevices?.enumerateDevices) {\n      const devices = await mediaDevices.enumerateDevices();\n      return kind ? devices.filter((device) => device.kind === kind) : devices;\n    } else {\n      throw new Error(\"No 'enumerateDevices' API supported\");\n    }\n  }\n\n  public clearSession(session_id: ConferenceSession['id']): void {\n    delete this.sessionsStore[session_id];\n  }\n\n  public getCurrentSessionToken(): string {\n    const currentSession = this.proxy.getSession();\n\n    if (currentSession?.token) {\n      return currentSession.token;\n    } else {\n      throw new Error('Session does not exist');\n    }\n  }\n\n  private getListenerByName(name: ConferenceEvent): Janus.ListenerName | null {\n    switch (name) {\n      case ConferenceEvent.JOIN:\n        return 'onParticipantJoinedListener';\n      case ConferenceEvent.LEFT:\n        return 'onParticipantLeftListener';\n      case ConferenceEvent.SLOW_LINK:\n        return 'onSlowLinkListener';\n      case ConferenceEvent.REMOTE_STREAM:\n        return 'onRemoteStreamListener';\n      case ConferenceEvent.REMOTE_TRACKS_UPDATED:\n        return 'onRemoteTracksUpdatedListener';\n      case ConferenceEvent.REMOTE_CONNECTION_STATE:\n        return 'onRemoteConnectionStateChangedListener';\n      case ConferenceEvent.DATA_CHANNEL_OPENED:\n        return 'onDataChannelOpenedListener';\n      case ConferenceEvent.DATA_CHANNEL_MESSAGE:\n        return 'onDataChannelMessageListener';\n      case ConferenceEvent.SESSION_CONNECTION_STATE:\n        return 'onSessionConnectionStateChangedListener';\n      case ConferenceEvent.ERROR:\n        return 'onErrorListener';\n      default:\n        return null;\n    }\n  }\n\n  public addListener(name: ConferenceEvent, listener: Janus.Listeners): () => void {\n    const listenerName = this.getListenerByName(name);\n    if (listenerName) {\n      (this[listenerName] as Janus.Listeners) = listener;\n    }\n    return this.removeListener.bind(this, name);\n  }\n\n  public removeListener(name: ConferenceEvent): void {\n    const listenerName = this.getListenerByName(name);\n    if (listenerName) {\n      (this[listenerName] as Janus.Listeners | undefined) = undefined;\n    }\n  }\n\n  public removeAllListeners(): void {\n    Object.keys(this).forEach((key) => {\n      if (key.startsWith('on') && key.endsWith('Listener') && typeof this[key as Janus.ListenerName] === 'function') {\n        (this[key as Janus.ListenerName] as Janus.Listeners | undefined) = undefined;\n      }\n    });\n  }\n}\n","import ProxyService from './Proxy';\nimport Utils from './Utils';\nimport config from './config';\nimport { Data, EmptyResponse, ProxyMethod, ProxyType, SearchCondition } from './types';\n\nexport default class DataService {\n  public proxy: ProxyService;\n  readonly route = config.urls.data;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async create(className: string, params: Data.CreateParams = {}): Promise<Data.DataRecord> {\n    const isMany = Utils.isArray(params);\n    const multi = isMany ? 'multi' : undefined;\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route, className, multi),\n      data: isMany ? { record: this.createRecord(params) } : params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async list(className: string, params: Data.ListParams = {}): Promise<Data.ListResponse> {\n    const ext = typeof params === 'string' ? params : Utils.isArray(params) ? params.toString() : undefined;\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, className, ext),\n      data: ext ? undefined : params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async readPermissions(className: string, id: string): Promise<Data.ReadPermissionsResponse> {\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, className, id),\n      data: { permissions: 1 },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(\n    className: string,\n    params: Data.UpdateOptions | Data.UpdateOptions[] = {}\n  ): Promise<Data.UpdateResponse | Data.DataRecord> {\n    const isMany = Utils.isArray(params);\n    const isSearch = !isMany && params.search_criteria;\n    const ext = isMany ? 'multi' : isSearch ? 'by_criteria' : params.id || params._id;\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, className, ext),\n      data: isMany ? { record: this.createRecord(params) } : params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(\n    className: string,\n    params: string | string[] | SearchCondition<any>\n  ): Promise<Data.DeleteResponse | EmptyResponse> {\n    const isCriteria = Utils.isObject(params);\n    const isOne = typeof params === 'string' || (Utils.isArray(params) && params.length === 1);\n    const ext = isCriteria ? 'by_criteria' : params.toString();\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, className, ext),\n      data: isCriteria ? params : undefined,\n      dataType: isOne ? ProxyType.TEXT : undefined,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  private createRecord(params: Data.CreateRecord[] = []): object {\n    return params.reduce((items, item, index) => {\n      const key = index + 1;\n      const id = item.id || item._id;\n      const record = id ? { ...item, id } : item;\n\n      return { ...items, [key]: record };\n    }, {});\n  }\n}\n","import ProxyService from './Proxy';\nimport Utils from './Utils';\nimport config from './config';\nimport { EmptyResponse, Meetings, ProxyMethod, ProxyType } from './types';\n\nexport default class MeetingsService {\n  public proxy: ProxyService;\n  readonly route = config.urls.meetings;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async get(params: Meetings.GetParams = {}): Promise<Meetings.Meeting | Meetings.Meeting[]> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async create(params: Meetings.CreateParams = {}): Promise<Meetings.Meeting> {\n    const MINUTE = 60;\n    const startTimestamp = Math.ceil(Date.now() / 1000);\n    const endTimestamp = startTimestamp + 60 * MINUTE;\n    const defaultName = new Date(startTimestamp).toLocaleString('en', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    });\n    const defaultParams = {\n      name: defaultName,\n      start_date: startTimestamp,\n      end_date: endTimestamp,\n      attendees: [],\n      record: false,\n      chat: false,\n    };\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: { ...defaultParams, ...params },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(id: string | number, params: Meetings.UpdateParams): Promise<Meetings.Meeting> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, id),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(id: string | number): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, id),\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getRecordings(id: string | number): Promise<Meetings.Recording[]> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, 'recordings', id),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import { fetchImpl, FormDataImpl } from './platform';\nimport config from './config';\nimport Utils from './Utils';\nimport { Auth, Proxy, ProxyMethod, ProxyType } from './types';\n\nexport default class ProxyService {\n  public sdkInstance: Proxy.SDKInstance = {\n    config,\n    session: null,\n  };\n  public requestsNumber: number = 0;\n  public fetchImpl = fetchImpl;\n  private currentUserId: number | undefined;\n  private abortControllersMap: Proxy.AbortControllersMap = {};\n  public requestMethod: typeof ProxyMethod = ProxyMethod;\n  public responseType: typeof ProxyType = ProxyType;\n\n  public setSession(session: Partial<Auth.Session>): void {\n    this.sdkInstance.session = session;\n\n    if (session && session.user_id) {\n      this.setCurrentUserId(session.user_id);\n    }\n  }\n\n  public getSession(): Partial<Auth.Session> | null {\n    return this.sdkInstance.session;\n  }\n\n  public setCurrentUserId(userId?: number | null): void {\n    this.currentUserId = userId || undefined;\n  }\n\n  public getCurrentUserId(): number | undefined {\n    return this.currentUserId;\n  }\n\n  public logRequest(params: Proxy.Params, requestId: number): void {\n    Utils.DLog(`[Request][${requestId}]`, `${params.type || 'GET'} ${params.url}`, params);\n  }\n\n  public logResponse(response: any, requestId: number): void {\n    Utils.DLog(`[Response][${requestId}]`, response);\n  }\n\n  public buildRequestAndURL(params: Proxy.Params): [any, string] {\n    const isGetOrHeadType = !params.type || params.type === 'GET' || params.type === 'HEAD';\n    const isPostOrPutType = params.type ? params.type === 'POST' || params.type === 'PUT' : false;\n    const token = this.sdkInstance && this.sdkInstance.session && this.sdkInstance.session.token;\n    const isInternalRequest = params.url.indexOf('s3.amazonaws.com') === -1;\n    const isMultipartFormData = params.contentType === false;\n    const authKey = params.authKey;\n\n    let requestBody;\n    let requestURL = params.url;\n    const requestObject: any = {};\n\n    requestObject.method = params.type || 'GET';\n\n    if (params.data) {\n      requestBody = this.buildRequestBody(params, isMultipartFormData, isPostOrPutType);\n\n      if (isGetOrHeadType) {\n        requestURL += `?${requestBody}`;\n      } else {\n        requestObject.body = requestBody;\n      }\n    }\n\n    if (!isMultipartFormData) {\n      requestObject.headers = {\n        'Content-Type': isPostOrPutType\n          ? 'application/json;charset=utf-8'\n          : 'application/x-www-form-urlencoded; charset=UTF-8',\n      };\n    }\n\n    if (isInternalRequest) {\n      if (!requestObject.headers) {\n        requestObject.headers = {};\n      }\n\n      requestObject.headers['CB-SDK'] = `JS ${config.version} - Client`;\n\n      if (token) {\n        requestObject.headers['CB-Token'] = token;\n      } else if (authKey) {\n        requestObject.headers['CB-AuthKey'] = authKey;\n      }\n    }\n\n    if (config.timeout) {\n      requestObject.timeout = config.timeout;\n    }\n\n    return [requestObject, requestURL];\n  }\n\n  public buildRequestBody(\n    params: Proxy.Params,\n    isMultipartFormData: boolean,\n    isPostOrPutType: boolean\n  ): typeof FormDataImpl | string | any {\n    const data = params.data;\n    const useArrayQuery = params.useArrayQuery;\n\n    let dataObject: any;\n\n    if (isMultipartFormData) {\n      dataObject = new FormDataImpl();\n\n      Object.keys(data).forEach(function (item) {\n        if (params.fileToCustomObject && item === 'file') {\n          dataObject.append(item, data[item].data, data[item].name);\n        } else {\n          dataObject.append(item, params.data[item]);\n        }\n      });\n    } else if (isPostOrPutType) {\n      dataObject = JSON.stringify(data);\n    } else {\n      dataObject = this.serializeQueryParams(data, '', useArrayQuery, 0);\n    }\n\n    return dataObject;\n  }\n\n  public serializeQueryParams(obj: any, prefix: string, useArrayQuery: any, level = 0): string {\n    const parts: string[] = [];\n\n    for (let propName in obj) {\n      let propQueryName = this.encodeURIComponent(propName);\n      if (Utils.isArray(obj)) {\n        propQueryName = '';\n      }\n\n      const key = prefix ? prefix + `[${propQueryName}]` : propQueryName;\n      let value = obj[propName];\n\n      const isArrayVal = Utils.isArray(value);\n\n      if ((isArrayVal && (useArrayQuery || level === 0)) || Utils.isObject(value)) {\n        parts.push(this.serializeQueryParams(value, key, useArrayQuery, ++level));\n      } else {\n        value = isArrayVal ? value.sort().join(',') : value;\n        parts.push(`${key}=${this.encodeURIComponent(value)}`);\n      }\n    }\n\n    return parts.sort().join('&');\n  }\n\n  public encodeURIComponent(uriComponent: string | number | boolean): string {\n    return encodeURIComponent(uriComponent).replace(/[#$&+,/:;=?@\\[\\]]/g, (c) => `%${c.charCodeAt(0).toString(16)}`);\n  }\n\n  public abortRequest(abortId: string | number): void {\n    if (this.abortControllersMap[abortId]) {\n      const controllers = this.abortControllersMap[abortId].controllers || [];\n\n      controllers.forEach((controller) => {\n        controller.abort();\n      });\n    }\n  }\n\n  public processSuccessfulOrFailedRequest(abort_id?: string | number): void {\n    if (!abort_id || !this.abortControllersMap[abort_id]) {\n      return;\n    }\n\n    const controllers = this.abortControllersMap[abort_id].controllers || [];\n\n    if (!this.abortControllersMap[abort_id].doneRequestsCount) {\n      this.abortControllersMap[abort_id].doneRequestsCount = 1;\n    } else {\n      this.abortControllersMap[abort_id].doneRequestsCount += 1;\n    }\n\n    const doneRequestsCount = this.abortControllersMap[abort_id].doneRequestsCount;\n\n    if (doneRequestsCount === controllers.length) {\n      delete this.abortControllersMap[abort_id];\n    }\n  }\n\n  public async ajax<T>(params: Proxy.Params): Promise<T> {\n    const requestId = ++this.requestsNumber;\n\n    return new Promise((resolve, reject) => {\n      this.logRequest(params, requestId);\n\n      const [requestObject, requestURL] = this.buildRequestAndURL(params);\n      const abort_id = params.abort_id;\n\n      if (abort_id) {\n        let index = 0;\n\n        if (this.abortControllersMap[abort_id]) {\n          const controllers = this.abortControllersMap[abort_id].controllers || [];\n          this.abortControllersMap[abort_id].controllers.push(new AbortController());\n          index = controllers.length - 1;\n        } else {\n          this.abortControllersMap[abort_id] = {\n            controllers: [new AbortController()],\n          };\n        }\n        const signal = this.abortControllersMap[abort_id].controllers[index].signal;\n        Object.assign(requestObject, { signal });\n      }\n\n      let response: any;\n\n      // The Promise returned from fetch() won’t reject on HTTP error\n      // status even if the response is an HTTP 404 or 500.\n      // Instead, it will resolve normally (with ok status set to false),\n      // and it will only reject on network failure or if anything prevented the request from completing.\n      fetchImpl(requestURL, requestObject)\n        .then((resp: any) => {\n          response = resp;\n          const dataType = params.dataType || ProxyType.JSON;\n          return dataType === ProxyType.TEXT ? response.text() : response.json();\n        })\n        .then((body: any) => {\n          this.processSuccessfulOrFailedRequest(abort_id);\n          if (!response.ok) {\n            this.processAjaxError(response, body, null, reject, resolve, params, requestId);\n          } else {\n            this.processAjaxResponse(body, resolve, requestId);\n          }\n        })\n        .catch((error: any) => {\n          this.processSuccessfulOrFailedRequest(abort_id);\n          this.processAjaxError(response, ' ', error, reject, resolve, params, requestId);\n        });\n    });\n  }\n\n  public processAjaxResponse(body: any, resolve: (value: any) => void, requestId: number): void {\n    const responseBody = body && body !== ' ' ? body : 'empty body';\n    this.logResponse(responseBody, requestId);\n\n    resolve(body);\n  }\n\n  public processAjaxError(\n    response: Response | null,\n    body: any,\n    error: any,\n    reject: (reason?: any) => void,\n    resolve: (value: any) => void,\n    params: Proxy.Params,\n    requestId: number\n  ): void {\n    if (!response && error && !error.code) {\n      reject(error);\n      return;\n    }\n\n    const responseBody = body || error || body.errors;\n    const statusCode = response?.status;\n    const errorObject: Proxy.ErrorObject = {\n      code: (response && statusCode) || (error && error.code),\n      info: (body && typeof body === 'string' && body !== ' ' ? JSON.parse(body) : body) || (error && error.errno),\n    };\n\n    this.logResponse(responseBody, requestId);\n\n    if (response?.url.indexOf(config.urls.session) === -1) {\n      if (this.isExpiredSessionError(errorObject) && typeof config.on.sessionExpired === 'function') {\n        this.handleExpiredSessionResponse(errorObject, null, reject, resolve, params);\n      } else {\n        reject(errorObject);\n      }\n    } else {\n      reject(errorObject);\n    }\n  }\n\n  public handleExpiredSessionResponse(\n    error: any,\n    response: any,\n    reject: (reason?: any) => void,\n    resolve: (value: any) => void,\n    params: Proxy.Params\n  ): void {\n    const handleResponse = () => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(response);\n      }\n    };\n\n    const retryCallback = (session: Partial<Auth.Session>) => {\n      if (session) {\n        this.setSession(session);\n        this.ajax(params).then(resolve).catch(reject);\n      }\n    };\n\n    if (typeof config.on.sessionExpired === 'function') {\n      config.on.sessionExpired(handleResponse, retryCallback);\n    }\n  }\n\n  private isExpiredSessionError(error: Proxy.ErrorObject): boolean {\n    try {\n      return error && error.code === 401 && error.info?.errors?.base?.[0] === 'Required session does not exist';\n    } catch {\n      return false;\n    }\n  }\n}\n","import { base64Encode } from './platform';\nimport config from './config';\nimport ProxyService from './Proxy';\nimport Utils from './Utils';\nimport { EmptyResponse, ProxyMethod, ProxyType, PushNotifications } from './types';\n\nexport default class PushNotificationsService {\n  public proxy: ProxyService;\n  public subscriptions: SubscriptionsService;\n  public events: EventsService;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n    this.subscriptions = new SubscriptionsService(proxy);\n    this.events = new EventsService(proxy);\n  }\n\n  public base64Encode = base64Encode;\n}\n\nclass SubscriptionsService {\n  public proxy: ProxyService;\n  readonly route = config.urls.subscriptions;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async create(params: PushNotifications.SubscriptionsCreateParams): Promise<PushNotifications.Subscription> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async list(): Promise<PushNotifications.Subscription[]> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(id: string | number): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      dataType: ProxyType.TEXT,\n      url: Utils.getUrl(this.route, id),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n\nclass EventsService {\n  public proxy: ProxyService;\n  readonly route = config.urls.events;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async create(event: PushNotifications.EventsCreateParams): Promise<PushNotifications.Event[]> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: { event },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import ProxyService from './Proxy';\nimport Utils from './Utils';\nimport config from './config';\nimport { EmptyResponse, Proxy, ProxyMethod, ProxyType, Storage } from './types';\nexport default class StorageService {\n  public proxy: ProxyService;\n  readonly route = config.urls.blobs;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async list(params: Storage.ListParams = {}): Promise<Storage.ListResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async create(params?: Storage.CreateParams): Promise<Storage.BlobResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: { blob: params },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(id: number | string): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, id),\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async createAndUpload(params: Storage.CreateAndUploadParams): Promise<Storage.Blob> {\n    const { name, file, size, abort_id, type: content_type, public: isPublic = true } = params;\n    const createParams = { name, content_type, public: isPublic };\n\n    let blob: Storage.Blob;\n\n    return this.create(createParams)\n      .then(({ blob: blobObject }) => {\n        blob = blobObject;\n        const uri = this.parseUri(blob.blob_object_access?.params);\n        const uploadUrl = `${uri.protocol}://${uri.authority}${uri.path}`;\n        const uploadParams: Proxy.Params = { url: uploadUrl, data: {} };\n\n        if (abort_id) {\n          uploadParams.abort_id = abort_id;\n        }\n\n        Object.keys(uri.queryKey).forEach((key) => {\n          uploadParams.data[key] = decodeURIComponent(uri.queryKey[key]);\n        });\n\n        uploadParams.data.file = file;\n\n        return this.upload(uploadParams).then(() => blob);\n      })\n      .then((blob) => this.markUploaded({ id: blob.id, size }).then(() => blob))\n      .then((blob) => ({ ...blob, size }));\n  }\n\n  public async upload(params: Proxy.Params): Promise<any> {\n    const ajaxParams = {\n      ...params,\n      type: ProxyMethod.POST,\n      dataType: ProxyType.TEXT,\n      contentType: false,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async markUploaded(params: Storage.MarkUploadedParams): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, params.id, 'complete'),\n      data: {\n        size: params.size,\n      },\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getInfo(id: number | string): Promise<Storage.BlobResponse> {\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, id),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getFile(uid: string): Promise<Storage.BlobResponse> {\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, uid),\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getFileObject(uid: string, params: Storage.GetFileObjectParams): Promise<Storage.BlobResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, uid, 'object'),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(params: Storage.UpdateParams): Promise<Storage.BlobResponse> {\n    const data = { blob: {} as any };\n\n    if (typeof params.name !== 'undefined') {\n      data.blob.name = params.name;\n    }\n\n    const ajaxParams = {\n      url: Utils.getUrl(this.route, params.id),\n      data: data,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public privateUrl(fileUID: string = ''): string {\n    return `https://${config.endpoints.api}/blobs/${fileUID}?token=${this.proxy.getSession()?.token}`;\n  }\n\n  public publicUrl(fileUID: string = ''): string {\n    return `https://${config.endpoints.api}/blobs/${fileUID}`;\n  }\n\n  // parseUri 1.2.2\n  // (c) Steven Levithan <stevenlevithan.com>\n  // MIT License\n  // http://blog.stevenlevithan.com/archives/parseuri\n  private parseUri(str: string = ''): any {\n    const options = {\n      strictMode: false,\n      key: [\n        'source',\n        'protocol',\n        'authority',\n        'userInfo',\n        'user',\n        'password',\n        'host',\n        'port',\n        'relative',\n        'path',\n        'directory',\n        'file',\n        'query',\n        'anchor',\n      ],\n      q: {\n        name: 'queryKey',\n        parser: /(?:^|&)([^&=]*)=?([^&]*)/g,\n      },\n      parser: {\n        strict:\n          /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n        loose:\n          /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      },\n    };\n    const m = options.parser[options.strictMode ? 'strict' : 'loose'].exec(str) ?? {};\n\n    const uri = {};\n    let i = 14;\n\n    while (i--) {\n      uri[options.key[i]] = m[i] || '';\n    }\n\n    uri[options.q.name] = {};\n    uri[options.key[12]].replace(options.q.parser, ($0, $1, $2) => {\n      if ($1) {\n        uri[options.q.name][$1] = $2;\n      }\n    });\n\n    return uri;\n  }\n}\n","import config from './config';\nimport ProxyService from './Proxy';\nimport { EmptyResponse, ProxyMethod, ProxyType, Users } from './types';\nimport Utils from './Utils';\n\nexport default class UsersService {\n  public proxy: ProxyService;\n  readonly route = config.urls.users;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async getV2(params: Users.GetV2Params): Promise<Users.GetV2Response> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, 'v2'),\n      useArrayQuery: true,\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async signup(user: Users.SignUpParams, auth_key?: string): Promise<Users.UserResponse> {\n    const ajaxParams = {\n      authKey: auth_key ?? config.creds.authKey,\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: { user },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(user: Users.UpdateParams = {}): Promise<Users.UserResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, this.proxy.getCurrentUserId()),\n      data: { user },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, this.proxy.getCurrentUserId()),\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async resetPassword(email: string = ''): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route, 'password', 'reset'),\n      data: { email },\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async listOnline(params: Users.ListOnlineParams = {}): Promise<Users.UsersResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, 'online'),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async getOnlineCount(): Promise<Users.OnlineCountResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, 'online'),\n      data: { count: true },\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  /**\n   * @deprecated Use `getV2(params)` instead.\n   */\n  public async get(params: any): Promise<Users.OldGetResponse | Users.UserResponse> {\n    let data = Utils.cloneObject(params);\n    let url: string | number = '';\n\n    const filters: string[] = [];\n    const dateFields = ['created_at', 'updated_at', 'last_request_at'];\n    const numberFields = ['id', 'external_user_id'];\n    const extensions: any = {\n      login: 'by_login',\n      full_name: 'by_full_name',\n      facebook_id: 'by_facebook_id',\n      twitter_id: 'by_twitter_id',\n      phone: 'phone',\n      email: 'by_email',\n      tags: 'by_tags',\n      external: 'external',\n    };\n\n    function generateFilter(filter: any): string {\n      const obj = Utils.cloneObject(filter);\n      let type = dateFields.includes(obj.field) ? 'date' : typeof obj.value;\n\n      if (Utils.isArray(obj.value)) {\n        if (type === 'object') {\n          type = typeof obj.value[0];\n        }\n        obj.value = obj.value.toString();\n      }\n\n      return [type, obj.field, obj.param, obj.value].join(' ');\n    }\n\n    if (data.order) {\n      const type = data.order.field in dateFields ? 'date' : data.order.field in numberFields ? 'number' : 'string';\n      data.order = [data.order.sort, type, data.order.field].join(' ');\n    }\n\n    if (data && data.filter) {\n      if (Utils.isArray(data.filter)) {\n        data.filter.forEach((filter: any) => {\n          filters.push(generateFilter(filter));\n        });\n      } else {\n        filters.push(generateFilter(data.filter));\n      }\n      data.filter = filters;\n    }\n\n    if (typeof data === 'number') {\n      url = data;\n      data = undefined;\n    } else {\n      for (const key in extensions) {\n        if (data[key]) {\n          url = extensions[key];\n\n          if (key === extensions.external) {\n            url += `/${data[extensions.external]}`;\n            data = undefined;\n          }\n\n          break;\n        }\n      }\n    }\n\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route, url),\n      data,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import config from '../config';\nimport { navigator } from '../platform';\n\nexport default class WebRTCHelpers {\n  static getUserJid(id: string | number): string {\n    return `${id}-${config.creds.appId}@${config.endpoints.chat}`;\n  }\n\n  static getUserIdFromJID(jid: string): number | null {\n    return jid?.includes('@') ? parseInt(jid.split('@')[0].split('-')[0]) : null;\n  }\n\n  static trace(text: string): void {\n    if (config.debug) {\n      console.log('[VideoChat]:', text);\n    }\n  }\n\n  static traceWarning(text: string): void {\n    if (config.debug) {\n      console.warn('[VideoChat]:', text);\n    }\n  }\n\n  static traceError(text: string): void {\n    if (config.debug) {\n      console.error('[VideoChat]:', text);\n    }\n  }\n\n  static get getVersionFirefox(): number {\n    const ua = navigator?.userAgent ?? null;\n    let version = 0;\n    if (ua) {\n      const ffInfo = ua.match(/(?:firefox)[ \\/](\\d+)/i) || [];\n      version = ffInfo[1] ? +ffInfo[1] : 0;\n    }\n    return typeof version === 'string' ? parseInt(version) : version;\n  }\n\n  static get getVersionSafari(): number {\n    const ua = navigator?.userAgent ?? null;\n    let version = 0;\n    if (ua) {\n      const sInfo = ua.match(/(?:safari)[ \\/](\\d+)/i) || [];\n      if (sInfo.length) {\n        const sVer = ua.match(/(?:version)[ \\/](\\d+)/i) || [];\n        if (sVer) {\n          version = sVer[1] ? +sVer[1] : 0;\n        }\n      }\n    }\n\n    return typeof version === 'string' ? parseInt(version) : version;\n  }\n}\n","import { RTCPeerConnection, RTCSessionDescription, MediaStream } from '../platform';\nimport config from '../config';\nimport WebRTCSession from './WebRTCSession';\nimport WebRTCHelpers from './WebRTCHelpers';\nimport { Calls, CallSessionConnectionState, CallType, Config, MediaType, PeerConnectionState } from '../types';\n\nexport default class WebRTCPeerConnection {\n  public original!: RTCPeerConnection;\n  public session!: WebRTCSession;\n  public userID!: number;\n  public type!: RTCSdpType;\n  public remoteSDP: string | null = null;\n  public state: PeerConnectionState = PeerConnectionState.NEW;\n  public iceCandidates: RTCIceCandidateInit[] = [];\n  public remoteStream: MediaStream = new MediaStream();\n  public answerTimeInterval: number = 0;\n  public onStatusClosedChecker: NodeJS.Timeout | null = null;\n  public dialingTimer: NodeJS.Timeout | null = null;\n  public statsReportTimer: NodeJS.Timeout | null = null;\n  public waitingReconnectTimeoutCallback: NodeJS.Timeout | null = null;\n  public released: boolean = false;\n\n  constructor(session: WebRTCSession, userID: number, type: RTCSdpType) {\n    this.create();\n    this.setup(session, userID, type);\n  }\n\n  private create() {\n    const rtcConfiguration: RTCConfiguration = {\n      iceTransportPolicy: (config.videochat.alwaysRelayCalls ? 'relay' : 'all') as RTCIceTransportPolicy,\n      iceServers: config.videochat.iceServers.map(\n        (item: Config.VideochatIceServer): RTCIceServer => ({\n          urls: item.urls ?? item.url,\n          username: item.username,\n          credential: item.credential,\n        })\n      ) as RTCIceServer[],\n    };\n\n    this.original = RTCPeerConnection ? new RTCPeerConnection(rtcConfiguration) : ({} as RTCPeerConnection);\n\n    WebRTCHelpers.trace(`new RTCPeerConnection(${JSON.stringify(rtcConfiguration, null, 2)})`);\n  }\n\n  private setup(session: WebRTCSession, userID: number, type: RTCSdpType): void {\n    this.type = type;\n    this.userID = userID;\n    this.session = session;\n    this.session.startCallTime = Date.now();\n\n    this.original.addEventListener('track', this.onMediaTrackHandler);\n    this.original.addEventListener('icecandidate', this.onIceCandidateHandler);\n    this.original.addEventListener('signalingstatechange', this.onSignalingStateHandler);\n    this.original.addEventListener('iceconnectionstatechange', this.onIceConnectionStateHandler);\n\n    WebRTCHelpers.trace(`RTCPeerConnection init. ${this.toString()}`);\n  }\n\n  private onMediaTrackHandler = (event: RTCTrackEvent): void => {\n    this.remoteStream.addTrack(event.track);\n\n    if (\n      (this.session.callType == CallType.VIDEO && this.remoteStream.getVideoTracks().length) ||\n      (this.session.callType == CallType.AUDIO && this.remoteStream.getAudioTracks().length)\n    ) {\n      this.session.onRemoteStream(this.userID, this.remoteStream);\n    }\n\n    this.getWrappedStats();\n  };\n\n  private onIceCandidateHandler = (event: RTCPeerConnectionIceEvent): void => {\n    if (event.candidate) {\n      const { sdpMLineIndex, sdpMid, candidate } = event.candidate;\n      const iceCandidate: RTCIceCandidateInit = { sdpMLineIndex, sdpMid, candidate };\n\n      if (this.signalingState === 'stable' && this.original.canTrickleIceCandidates) {\n        this.session.processIceCandidates(this.userID, [iceCandidate]);\n      } else {\n        this.iceCandidates.push(iceCandidate);\n      }\n    }\n  };\n\n  private onSignalingStateHandler = async (): Promise<void> => {\n    WebRTCHelpers.trace(`onSignalingStateHandler: ${this.signalingState}`);\n\n    if (this.signalingState === 'stable' && this.iceCandidates.length > 0) {\n      this.session.processIceCandidates(this.userID, this.iceCandidates);\n      this.iceCandidates.length = 0;\n    }\n  };\n\n  /** handler of remote media stream */\n  private onIceConnectionStateHandler = (): void => {\n    WebRTCHelpers.trace(`onIceConnectionStateHandler: ${this.iceConnectionState}`);\n\n    if (this.onStatusClosedChecker && WebRTCHelpers.getVersionSafari >= 11) {\n      clearTimeout(this.onStatusClosedChecker);\n    }\n\n    switch (this.iceConnectionState) {\n      case 'checking':\n        this.state = PeerConnectionState.CHECKING;\n        this.session.onSessionConnectionStateChanged(this.userID, CallSessionConnectionState.CONNECTING);\n        break;\n      case 'connected':\n        this.state = PeerConnectionState.CONNECTED;\n        this.clearWaitingReconnectTimer();\n        this.session.onSessionConnectionStateChanged(this.userID, CallSessionConnectionState.CONNECTED);\n        break;\n      case 'completed':\n        this.state = PeerConnectionState.COMPLETED;\n        this.clearWaitingReconnectTimer();\n        this.session.onSessionConnectionStateChanged(this.userID, CallSessionConnectionState.COMPLETED);\n        break;\n      case 'failed':\n        this.state = PeerConnectionState.FAILED;\n        this.session.onSessionConnectionStateChanged(this.userID, CallSessionConnectionState.FAILED);\n        break;\n      case 'disconnected':\n        this.state = PeerConnectionState.DISCONNECTED;\n        this.startWaitingReconnectTimer();\n        this.session.onSessionConnectionStateChanged(this.userID, CallSessionConnectionState.DISCONNECTED);\n        if (WebRTCHelpers.getVersionSafari >= 11) {\n          this.onStatusClosedChecker = setTimeout(() => {\n            this.onIceConnectionStateHandler(); // repeat to get status \"closed\"\n          }, 500);\n        }\n        break;\n      case 'closed': // TODO: this state doesn't fires on Safari 11\n        this.state = PeerConnectionState.CLOSED;\n        this.clearWaitingReconnectTimer();\n        this.session.onSessionConnectionStateChanged(this.userID, CallSessionConnectionState.CLOSED);\n        break;\n      default:\n        break;\n    }\n  };\n\n  private clearWaitingReconnectTimer(): void {\n    if (this.waitingReconnectTimeoutCallback) {\n      WebRTCHelpers.trace('clearWaitingReconnectTimer');\n      clearTimeout(this.waitingReconnectTimeoutCallback);\n      this.waitingReconnectTimeoutCallback = null;\n    }\n  }\n\n  private startWaitingReconnectTimer(): void {\n    const timeout = config.videochat.disconnectTimeInterval * 1000;\n    WebRTCHelpers.trace(`startWaitingReconnectTimer, timeout: ${timeout}`);\n\n    this.waitingReconnectTimeoutCallback = setTimeout(() => {\n      WebRTCHelpers.trace('waitingReconnectTimeoutCallback');\n      if (this.waitingReconnectTimeoutCallback) {\n        clearTimeout(this.waitingReconnectTimeoutCallback);\n      }\n      this.release();\n      this.session.closeSessionIfAllConnectionsClosed();\n    }, timeout);\n  }\n\n  private clearStatsReportTimer(): void {\n    if (this.statsReportTimer) {\n      clearInterval(this.statsReportTimer);\n      this.statsReportTimer = null;\n    }\n  }\n\n  public async addCandidates(iceCandidates: RTCIceCandidateInit[]): Promise<void> {\n    for (const iceCandidate of iceCandidates) {\n      if (iceCandidate?.candidate) {\n        try {\n          await this.addIceCandidate(iceCandidate);\n          WebRTCHelpers.trace(`'addIceCandidate' success: ${this.signalingState}`);\n        } catch (error) {\n          WebRTCHelpers.traceError(`'addIceCandidate' error: ${error}`);\n        }\n      }\n    }\n  }\n\n  public release(): void {\n    this.clearDialingTimer();\n    this.clearStatsReportTimer();\n    this.close();\n    if (WebRTCHelpers.getVersionSafari >= 11) {\n      this.onIceConnectionStateHandler(); // TODO: 'closed' state doesn't fires on Safari 11 (do it manually)\n    }\n    this.original.removeEventListener('track', this.onMediaTrackHandler);\n    this.original.removeEventListener('icecandidate', this.onIceCandidateHandler);\n    this.original.removeEventListener('signalingstatechange', this.onSignalingStateHandler);\n    this.original.removeEventListener('iceconnectionstatechange', this.onIceConnectionStateHandler);\n    this.released = true;\n    WebRTCHelpers.trace(`RTCPeerConnection closed. ${this.toString()}`);\n  }\n\n  public clearDialingTimer(): void {\n    if (this.dialingTimer) {\n      WebRTCHelpers.trace('clearDialingTimer');\n      clearInterval(this.dialingTimer);\n      this.dialingTimer = null;\n      this.answerTimeInterval = 0;\n    }\n  }\n\n  public async getAndSetLocalSessionDescription(\n    maxBandwidth: number,\n    iceRestart: boolean = false\n  ): Promise<RTCSessionDescriptionInit> {\n    this.state = PeerConnectionState.CONNECTING;\n\n    try {\n      const offerOptions = iceRestart ? { iceRestart } : undefined;\n      const sessionDescription =\n        this.type === 'offer' ? await this.createOffer(offerOptions) : await this.createAnswer();\n\n      await this.setLocalDescription(sessionDescription);\n      this.setRTCRtpSenderMaxBandwidth(maxBandwidth);\n\n      return sessionDescription;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public setRTCRtpSenderMaxBandwidth(maxBandwidth: number): void {\n    const senders = this.getSenders() || [];\n    const maxBitrate = maxBandwidth ? Math.round(maxBandwidth * 1000) : 0;\n\n    senders.forEach((sender: RTCRtpSender) => {\n      if (sender.track?.kind === MediaType.VIDEO) {\n        const params = sender.getParameters();\n\n        params.encodings ??= [{}];\n        params.encodings.forEach((encoding) => {\n          if (maxBitrate > 0) {\n            encoding.maxBitrate = maxBitrate;\n          } else {\n            delete encoding.maxBitrate;\n          }\n        });\n\n        sender\n          .setParameters(params)\n          .then(() => {\n            WebRTCHelpers.trace(\n              `Set 'maxBandwidth' for ${this.userID}: ${maxBandwidth > 0 ? `${maxBandwidth} kbps` : 'unlimited'}`\n            );\n          })\n          .catch((error) => {\n            WebRTCHelpers.traceWarning(`Set 'maxBandwidth' for ${this.userID}: ${error}`);\n          });\n      }\n    });\n  }\n\n  public startDialingTimer(extension: Calls.ExtensionParams, withOnNotAnswerCallback: boolean): void {\n    const dialingTimeInterval = config.videochat.dialingTimeInterval * 1000;\n\n    WebRTCHelpers.trace(`startDialingTimer, dialingTimeInterval: ${JSON.stringify(dialingTimeInterval)}`);\n\n    const dialingCallback = (extension, withOnNotAnswerCallback, skipIncrement) => {\n      if (!skipIncrement) {\n        this.answerTimeInterval += config.videochat.dialingTimeInterval * 1000;\n      }\n\n      WebRTCHelpers.trace(`dialingCallback, extension: ${JSON.stringify(extension)}`);\n\n      if (this.answerTimeInterval >= config.videochat.answerTimeInterval * 1000) {\n        this.clearDialingTimer();\n\n        if (withOnNotAnswerCallback) {\n          this.session.processOnNotAnswer(this);\n        }\n      } else {\n        this.session.processCall(this, extension);\n      }\n    };\n\n    this.dialingTimer = setInterval(dialingCallback, dialingTimeInterval, extension, withOnNotAnswerCallback, false);\n\n    dialingCallback(extension, withOnNotAnswerCallback, true); // call for the 1st time\n  }\n\n  public async setRemoteSessionDescription(type: RTCSdpType, sdp: string): Promise<void> {\n    const desc = new RTCSessionDescription!({ sdp, type });\n    return this.setRemoteDescription(desc);\n  }\n\n  private getWrappedStats(): void {\n    if (config.videochat.statsReportTimeInterval) {\n      let lastResult: RTCStatsReport;\n\n      WebRTCHelpers.trace('Stats tracker has been started');\n\n      this.statsReportTimer = setInterval(() => {\n        this.getStatsCustom(\n          lastResult,\n          (results, lastResults) => {\n            lastResult = lastResults;\n            this.session.onCallStatsReport(this.userID, results);\n          },\n          (err) => {\n            WebRTCHelpers.traceError(`Get stats error. ${err.name}: ${err.message}`);\n            this.session.onCallStatsReport(this.userID, null, err);\n          }\n        );\n      }, config.videochat.statsReportTimeInterval * 1000);\n    }\n  }\n\n  set sdpRemote(sdp: string) {\n    if (sdp) {\n      this.remoteSDP = sdp;\n    }\n  }\n\n  get sdpRemote(): string | null {\n    return this.remoteSDP;\n  }\n\n  toString(): string {\n    return `sessionID: ${this.session.ID}, userID: ${this.userID}, type: ${this.type}, state: ${this.state}`;\n  }\n\n  private getStatsCustom(\n    lastResults: RTCStatsReport,\n    onSuccess: (results: any, lastResults: any) => void,\n    onFail: (err: Error) => void\n  ) {\n    const obj = { audio: {} as any, video: {} as any, candidate: {} as any };\n    const statistic = { local: Object.assign({}, obj), remote: Object.assign({}, obj) };\n\n    if (WebRTCHelpers.getVersionFirefox) {\n      const localStream = this.session.localStream;\n      const localVideoSettings = localStream?.getVideoTracks()[0].getSettings();\n\n      if (localVideoSettings) {\n        statistic.local.video.frameHeight = localVideoSettings.height;\n        statistic.local.video.frameWidth = localVideoSettings.width;\n      }\n    }\n\n    this.getStats().then((results: RTCStatsReport) => {\n      results.forEach((result) => {\n        let item;\n\n        if (result.bytesReceived && result.type === 'inbound-rtp') {\n          item = statistic.remote[result.mediaType];\n          item.bitrate = this.getBitratePerSecond(result, lastResults, false);\n          item.bytesReceived = result.bytesReceived;\n          item.packetsReceived = result.packetsReceived;\n          item.timestamp = result.timestamp;\n          if (result.mediaType === MediaType.VIDEO && result.framerateMean) {\n            item.framesPerSecond = Math.round(result.framerateMean * 10) / 10;\n          }\n        } else if (result.bytesSent && result.type === 'outbound-rtp') {\n          item = statistic.local[result.mediaType];\n          item.bitrate = this.getBitratePerSecond(result, lastResults, true);\n          item.bytesSent = result.bytesSent;\n          item.packetsSent = result.packetsSent;\n          item.timestamp = result.timestamp;\n          if (result.mediaType === MediaType.VIDEO && result.framerateMean) {\n            item.framesPerSecond = Math.round(result.framerateMean * 10) / 10;\n          }\n        } else if (result.type === 'local-candidate') {\n          item = statistic.local.candidate;\n          if (result.candidateType === 'host' && result.mozLocalTransport === 'udp' && result.transport === 'udp') {\n            item.protocol = result.transport;\n            item.ip = result.ipAddress;\n            item.port = result.portNumber;\n          } else if (!WebRTCHelpers.getVersionFirefox) {\n            item.protocol = result.protocol;\n            item.ip = result.ip;\n            item.port = result.port;\n          }\n        } else if (result.type === 'remote-candidate') {\n          item = statistic.remote.candidate;\n          item.protocol = result.protocol || result.transport;\n          item.ip = result.ip || result.ipAddress;\n          item.port = result.port || result.portNumber;\n        } else if (result.type === 'track' && result.kind === MediaType.VIDEO && !WebRTCHelpers.getVersionFirefox) {\n          if (result.remoteSource) {\n            item = statistic.remote.video;\n            item.frameHeight = result.frameHeight;\n            item.frameWidth = result.frameWidth;\n            item.framesPerSecond = this.getFramesPerSecond(result, lastResults, false);\n          } else {\n            item = statistic.local.video;\n            item.frameHeight = result.frameHeight;\n            item.frameWidth = result.frameWidth;\n            item.framesPerSecond = this.getFramesPerSecond(result, lastResults, true);\n          }\n        }\n      });\n      onSuccess(statistic, results);\n    }, onFail);\n  }\n\n  private getBitratePerSecond(result: any, lastResults: any, isLocal: boolean): number {\n    const lastResult = lastResults.get(result.id);\n    const seconds = lastResult ? (result.timestamp - lastResult.timestamp) / 1000 : 5;\n    const kilo = 1024;\n    const bit = 8;\n    const bitrate = !lastResult\n      ? 0\n      : isLocal\n      ? (bit * (result.bytesSent - lastResult.bytesSent)) / (kilo * seconds)\n      : (bit * (result.bytesReceived - lastResult.bytesReceived)) / (kilo * seconds);\n\n    return Math.round(bitrate);\n  }\n\n  private getFramesPerSecond(result: any, lastResults: any, isLocal: boolean): number {\n    const lastResult = lastResults && lastResults.get(result.id);\n    const seconds = lastResult ? (result.timestamp - lastResult.timestamp) / 1000 : 5;\n    const framesPerSecond = !lastResult\n      ? 0\n      : isLocal\n      ? (result.framesSent - lastResult.framesSent) / seconds\n      : (result.framesReceived - lastResult.framesReceived) / seconds;\n\n    return Math.round(framesPerSecond * 10) / 10;\n  }\n\n  // original RTCPeerConnection methods\n  close(): void {\n    this.original.close?.();\n  }\n  addTrack(track: MediaStreamTrack, stream: MediaStream): RTCRtpSender {\n    return this.original.addTrack?.(track, stream) ?? null;\n  }\n  getSenders(): RTCRtpSender[] {\n    return this.original.getSenders?.() ?? null;\n  }\n  async createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    return (await this.original.createOffer?.(options)) ?? null;\n  }\n  async createAnswer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    return (await this.original.createAnswer?.(options)) ?? null;\n  }\n  async getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport> {\n    return (await this.original.getStats?.(selector)) ?? null;\n  }\n  async addIceCandidate(candidate?: RTCIceCandidateInit): Promise<void> {\n    await this.original.addIceCandidate?.(candidate);\n  }\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    await this.original.setRemoteDescription?.(description);\n  }\n  async setLocalDescription(description?: RTCSessionDescriptionInit): Promise<void> {\n    await this.original.setLocalDescription?.(description);\n  }\n  get localDescription(): RTCSessionDescription {\n    return this.original.localDescription ?? null;\n  }\n  get signalingState(): RTCSignalingState {\n    return this.original.signalingState ?? 'closed';\n  }\n  get iceConnectionState(): RTCIceConnectionState {\n    return this.original.iceConnectionState ?? 'closed';\n  }\n}\n","import { mediaDevices } from '../platform';\nimport config from '../config';\nimport WebRTCPeerConnection from './WebRTCPeerConnection';\nimport WebRTCSignalingProvider from './WebRTCSignalingProvider';\nimport WebRTCHelpers from './WebRTCHelpers';\nimport Utils from '../Utils';\nimport {\n  Calls,\n  CallSessionConnectionState,\n  CallSessionState,\n  CallSignalingType,\n  CallType,\n  Media,\n  MediaType,\n  PeerConnectionState,\n} from '../types';\n\nexport default class WebRTCSession {\n  public ID: string | null = null;\n  public state: CallSessionState = CallSessionState.NEW;\n  public callType!: CallType;\n  public initiatorID!: number;\n  public currentUserID!: number;\n  public opponentsIDs: number[] = [];\n  public maxBandwidth: number = 0;\n  public peerConnections: { [userID: number]: WebRTCPeerConnection } = {};\n  public localStream?: MediaStream;\n  public mediaParams: MediaStreamConstraints = {};\n  public signalingProvider!: WebRTCSignalingProvider;\n  public answerTimer: NodeJS.Timeout | null = null;\n  public waitingOfferOrAnswerTimer: NodeJS.Timeout | null = null;\n  public startCallTime: number = 0;\n  public acceptCallTime: number = 0;\n  public onUserNotAnswerListener!: Calls.OnUserNotAnswerListener;\n  public onRemoteStreamListener!: Calls.OnRemoteStreamListener;\n  public onSessionCloseListener!: Calls.OnSessionCloseListener;\n  public onCallStatsReportListener!: Calls.OnCallStatsReportListener;\n  public onSessionConnectionStateChangedListener!: Calls.OnSessionConnectionStateChangedListener;\n\n  constructor(params: Calls.SessionParams) {\n    Object.assign(this, params, { ID: params.ID ?? generateUUID() });\n  }\n\n  public async getDisplayMedia(params: Media.DisplayParams): Promise<MediaStream> {\n    if (!mediaDevices.getDisplayMedia) {\n      throw new Error(\"Your environment does not support 'getDisplayMedia' API\");\n    }\n\n    const elementId = params && params.elementId;\n    const options = params && params.options;\n    const mediaParams = { ...params };\n\n    this.mediaParams = mediaParams;\n\n    delete mediaParams.elementId;\n    delete mediaParams.options;\n\n    try {\n      const stream = await mediaDevices.getDisplayMedia(mediaParams);\n      const localStream = this.upsertStream(stream, elementId, options);\n      return localStream;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public async getUserMedia(params: Media.UserParams): Promise<MediaStream> {\n    const elementId = params && params.elementId;\n    const options = params && params.options;\n    const mediaParams = { ...params };\n\n    this.mediaParams = mediaParams;\n\n    delete mediaParams.elementId;\n    delete mediaParams.options;\n\n    try {\n      const stream = await mediaDevices.getUserMedia(mediaParams);\n      const localStream = this.upsertStream(stream, elementId, options);\n      return localStream;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  private upsertStream(stream: MediaStream, elementId?: string, options?: Media.ElementOptions): MediaStream {\n    const shouldUpdateCurrentStream = !!this.localStream;\n\n    if (shouldUpdateCurrentStream) {\n      this.replaceTracks(stream);\n    } else {\n      this.localStream = stream;\n    }\n\n    if (!this.localStream) {\n      throw new Error('Local stream is not defined');\n    }\n\n    if (elementId) {\n      if (shouldUpdateCurrentStream) {\n        this.detachMediaStream(elementId, options);\n      }\n      this.attachMediaStream(elementId, this.localStream, options);\n    }\n\n    return this.localStream;\n  }\n\n  private replaceTracks(stream: MediaStream): MediaStream {\n    this.localStream?.getTracks().forEach((localTrack) => {\n      if (localTrack.kind === MediaType.AUDIO && stream.getAudioTracks().length === 0) {\n        return;\n      } else {\n        localTrack.stop();\n        this.localStream?.removeTrack(localTrack);\n      }\n    });\n\n    stream.getTracks().forEach((newTrack) => {\n      if (newTrack.kind === MediaType.AUDIO) {\n        newTrack.enabled = this.localStream?.getAudioTracks().every(({ enabled }) => enabled) ?? true;\n      } else {\n        newTrack.enabled = this.localStream?.getVideoTracks().every(({ enabled }) => enabled) ?? true;\n      }\n\n      if (newTrack) {\n        Object.values(this.peerConnections).forEach((pc) => {\n          pc.getSenders()\n            .find(({ track }) => newTrack.kind === track?.kind)\n            ?.replaceTrack(newTrack);\n        });\n        this.localStream?.addTrack(newTrack);\n      }\n    });\n\n    if (!this.localStream) {\n      throw new Error('Local stream is not defined');\n    }\n\n    return this.localStream;\n  }\n\n  public async setMaxBandwidth(maxBandwidth: number): Promise<void[]> {\n    const peers = this.peerConnections;\n    const peersKeys = Object.keys(peers);\n\n    if (peersKeys.length < 1) {\n      WebRTCHelpers.trace(\"No 'RTCPeerConnection' to set 'maxBandwidth'\");\n      return;\n    }\n\n    return Promise.all(peersKeys.map((userID) => peers[Number(userID)].setRTCRtpSenderMaxBandwidth(maxBandwidth)));\n  }\n\n  public connectionStateForUser(userID: number): PeerConnectionState | null {\n    const peerConnection = this.peerConnections[userID];\n    return peerConnection ? peerConnection.state : null;\n  }\n\n  public attachMediaStream(elementId: string, stream: MediaStream, opt?: Media.ElementOptions): void {\n    const mediaElement = document.getElementById(elementId) as HTMLMediaElement;\n\n    if ('srcObject' in mediaElement) {\n      mediaElement.srcObject = stream;\n      mediaElement.style.transform = opt?.mirror ? 'scaleX(-1)' : 'none';\n      if (typeof opt?.muted === 'boolean') {\n        mediaElement.muted = opt?.muted;\n      }\n      mediaElement.onloadedmetadata = (_event: Event) => {\n        mediaElement.play();\n      };\n    } else {\n      throw new Error(`Unable to attach media stream, element #${elementId} is undefined`);\n    }\n  }\n\n  public detachMediaStream(elementId: string, opt?: Media.ElementOptions): void {\n    const mediaElement = document.getElementById(elementId) as HTMLMediaElement;\n\n    if ('srcObject' in mediaElement) {\n      mediaElement.pause();\n      mediaElement.srcObject = null;\n      mediaElement.style.transform = opt?.mirror ? 'scaleX(-1)' : 'none';\n      if (typeof opt?.muted === 'boolean') {\n        mediaElement.muted = opt?.muted;\n      }\n    } else {\n      throw new Error(`Unable to attach media stream, element #${elementId} is undefined`);\n    }\n  }\n\n  public async switchMediaTracks(options: Media.TrackConstraintsOrDeviceIds = {}): Promise<MediaStream> {\n    Utils.DLog('switchMediaTracks:', options);\n\n    [MediaType.AUDIO, MediaType.VIDEO].forEach((type) => {\n      const device = type === MediaType.AUDIO ? options.audio : type === MediaType.VIDEO ? options.video : {};\n      const deviceId = typeof device === 'string' ? device : device?.deviceId;\n\n      if (deviceId) {\n        if (typeof this.mediaParams[type] !== 'object') {\n          this.mediaParams[type].deviceId = deviceId;\n        } else {\n          this.mediaParams[type] = { deviceId };\n        }\n      }\n    });\n\n    try {\n      const constrains = { audio: this.mediaParams.audio || false, video: this.mediaParams.video || false };\n      const stream = await mediaDevices.getUserMedia(constrains);\n      const localStream = this.replaceTracks(stream);\n      return localStream;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  public call(extension: Calls.UserInfo = {}): void {\n    const ext = prepareExtension(extension);\n\n    WebRTCHelpers.trace(`Call, extension: ${JSON.stringify(ext)}`);\n\n    this.state = CallSessionState.ACTIVE;\n    this.maxBandwidth = Number(ext.userInfo?.maxBandwidth ?? 0);\n    this.opponentsIDs.forEach((userID) => {\n      this.callInternal(userID, ext, true);\n    });\n  }\n\n  private async callInternal(\n    userID: number,\n    extension: Calls.ExtensionParams,\n    withOnNotAnswerCallback: boolean\n  ): Promise<void> {\n    const pc = new WebRTCPeerConnection(this, userID, 'offer');\n\n    this.localStream?.getTracks().forEach((track) => {\n      pc.addTrack(track, this.localStream);\n    });\n\n    this.peerConnections[userID] = pc;\n\n    try {\n      await pc.getAndSetLocalSessionDescription(this.maxBandwidth);\n      WebRTCHelpers.trace('getAndSetLocalSessionDescription success');\n      pc.startDialingTimer(extension, withOnNotAnswerCallback); // call requests to user\n    } catch (error) {\n      WebRTCHelpers.traceError(`getAndSetLocalSessionDescription error: ${error}`);\n    }\n  }\n\n  public accept(extension: Calls.UserInfo = {}): void {\n    const ext = prepareExtension(extension);\n\n    WebRTCHelpers.trace(`Accept, extension: ${JSON.stringify(ext)}`);\n\n    if (this.state === CallSessionState.ACTIVE) {\n      WebRTCHelpers.traceError(\"Can't accept, the session is already active, return\");\n      return;\n    }\n\n    if (this.state === CallSessionState.CLOSED) {\n      WebRTCHelpers.traceError(\"Can't accept, the session is already closed, return\");\n      this.stop({});\n      return;\n    }\n\n    this.state = CallSessionState.ACTIVE;\n    this.acceptCallTime = Date.now();\n    this.clearAnswerTimer();\n    this.acceptInternal(this.initiatorID, ext);\n\n    // group call\n    const opponentsIDs = this.opponentsIDs.filter((userID) => userID !== this.currentUserID);\n\n    if (opponentsIDs.length > 0) {\n      this.startWaitingOfferOrAnswerTimer();\n      opponentsIDs.forEach((opponentID) => {\n        if (this.currentUserID > opponentID) {\n          this.callInternal(opponentID, ext, true);\n        }\n      });\n    }\n  }\n\n  private async acceptInternal(userID: number, extension: Calls.ExtensionParams): Promise<void> {\n    const pc = this.peerConnections[userID];\n\n    if (!pc || !pc.sdpRemote) {\n      WebRTCHelpers.traceError(\"Can't accept the call, there is no information about peer connection by some reason\");\n      return;\n    }\n\n    this.localStream?.getTracks().forEach((track) => {\n      pc.addTrack(track, this.localStream);\n    });\n\n    try {\n      await pc.setRemoteSessionDescription('offer', pc.sdpRemote);\n      WebRTCHelpers.trace('setRemoteSessionDescription - success');\n      await pc.getAndSetLocalSessionDescription(this.maxBandwidth);\n      WebRTCHelpers.trace('getAndSetLocalSessionDescription - success');\n\n      const ext = Object.assign({}, extension, {\n        sessionID: this.ID,\n        callType: this.callType,\n        callerID: this.initiatorID,\n        opponentsIDs: this.opponentsIDs,\n        sdp: pc.localDescription.sdp,\n      });\n\n      this.signalingProvider.sendMessage(userID, ext, CallSignalingType.ACCEPT);\n    } catch (error) {\n      WebRTCHelpers.traceError(`[acceptInternal] Error: ${error}`);\n    }\n  }\n\n  public reject(extension: Calls.UserInfo = {}): void {\n    const ext = prepareExtension(extension);\n\n    WebRTCHelpers.trace(`Reject, extension: ${JSON.stringify(ext.userInfo)}`);\n\n    this.state = CallSessionState.REJECTED;\n    this.clearAnswerTimer();\n    Object.assign(ext, {\n      sessionID: this.ID,\n      callType: this.callType,\n      callerID: this.initiatorID,\n      opponentsIDs: this.opponentsIDs,\n    });\n\n    Object.keys(this.peerConnections).forEach((userID) => {\n      this.signalingProvider.sendMessage(Number(userID), ext, CallSignalingType.REJECT);\n    });\n\n    this.close();\n  }\n\n  public stop(extension: Calls.UserInfo = {}): void {\n    const ext = prepareExtension(extension);\n\n    WebRTCHelpers.trace(`Stop, extension: ${JSON.stringify(ext.userInfo)}`);\n\n    this.state = CallSessionState.STOPPED;\n\n    if (this.answerTimer) {\n      this.clearAnswerTimer();\n    }\n\n    Object.assign(ext, {\n      sessionID: this.ID,\n      callType: this.callType,\n      callerID: this.initiatorID,\n      opponentsIDs: this.opponentsIDs,\n    });\n\n    Object.keys(this.peerConnections).forEach((userID) => {\n      this.signalingProvider.sendMessage(Number(userID), ext, CallSignalingType.STOP);\n    });\n\n    this.close();\n  }\n\n  public canInitiateIceRestart(userID: number): boolean {\n    return this.peerConnections[userID]?.type === 'offer';\n  }\n\n  public async iceRestart(userID: number): Promise<void> {\n    const pc = this.peerConnections[userID];\n\n    if (!pc) {\n      WebRTCHelpers.traceError(\"Can't restart ice, there is no information about peer connection by some reason\");\n      return;\n    }\n\n    try {\n      const { sdp } = await pc.getAndSetLocalSessionDescription(this.maxBandwidth, true);\n      const ext = { sessionID: this.ID ?? '', sdp };\n      this.signalingProvider.sendMessage(userID, ext, CallSignalingType.RESTART);\n      WebRTCHelpers.trace('[iceRestart] OK');\n    } catch (error) {\n      WebRTCHelpers.traceError(`[iceRestart] Error: ${error}`);\n    }\n  }\n\n  public processOnCall(callerID: number, extension: Calls.ExtensionParams): void {\n    const opponentsIDs = [this.initiatorID, ...this.opponentsIDs.filter((userID) => userID !== this.currentUserID)];\n\n    opponentsIDs.forEach((opponentID) => {\n      const pc = this.peerConnections[opponentID];\n\n      if (pc) {\n        if (opponentID === callerID) {\n          pc.sdpRemote = extension.sdp;\n          /** The group call logic starts here */\n          if (callerID !== this.initiatorID && this.state === CallSessionState.ACTIVE) {\n            this.acceptInternal(callerID, extension);\n          }\n        }\n      } else {\n        /** create peer connections for each opponent */\n        const rtcSdpType = opponentID !== callerID && this.currentUserID > opponentID ? 'offer' : 'answer';\n        const pc = new WebRTCPeerConnection(this, opponentID, rtcSdpType);\n\n        this.peerConnections[opponentID] = pc;\n\n        if (opponentID === callerID) {\n          pc.sdpRemote = extension.sdp;\n          this.startAnswerTimer();\n        }\n      }\n    });\n  }\n\n  public async processOnAccept(userID: number, extension: Calls.ExtensionParams): Promise<void> {\n    const pc = this.peerConnections[userID];\n\n    if (!pc) {\n      WebRTCHelpers.traceWarning(\"Ignore 'OnAccept', there is no information about peer connection by some reason\");\n    }\n\n    try {\n      pc.clearDialingTimer();\n      await pc.setRemoteSessionDescription('answer', extension.sdp);\n      WebRTCHelpers.trace(\"'setRemoteSessionDescription' success\");\n    } catch (error) {\n      WebRTCHelpers.traceError(`'setRemoteSessionDescription' error: ${error}`);\n    }\n  }\n\n  public processOnReject(userID: number): void {\n    const pc = this.peerConnections[userID];\n\n    this.clearWaitingOfferOrAnswerTimer();\n\n    if (pc) {\n      pc.release();\n    } else {\n      WebRTCHelpers.traceWarning(\"Ignore 'OnReject', there is no information about peer connection by some reason\");\n    }\n\n    this.closeSessionIfAllConnectionsClosed();\n  }\n\n  public processOnStop(userID: number): void {\n    this.clearAnswerTimer();\n\n    /** drop the call if the initiator did it */\n    if (userID === this.initiatorID) {\n      const pcKeys = Object.keys(this.peerConnections);\n      if (pcKeys.length > 0) {\n        pcKeys.forEach((key: string) => {\n          this.peerConnections[Number(key)].release();\n        });\n      } else {\n        WebRTCHelpers.traceWarning(\"Ignore 'OnStop', there is no information about peer connections by some reason\");\n      }\n    } else {\n      const pc = this.peerConnections[userID];\n      if (pc) {\n        pc.release();\n      } else {\n        WebRTCHelpers.traceWarning('Ignore \"OnStop\", there is no information about peer connection by some reason');\n      }\n    }\n\n    this.closeSessionIfAllConnectionsClosed();\n  }\n\n  public async processOnIceCandidates(userID: number, extension: Calls.ExtensionParams): Promise<void> {\n    const pc = this.peerConnections[userID];\n\n    if (!pc) {\n      WebRTCHelpers.traceWarning(\n        'Ignore \"OnIceCandidates\", there is no information about peer connection by some reason'\n      );\n    }\n\n    if (extension.iceCandidates) {\n      await pc.addCandidates(extension.iceCandidates);\n    }\n  }\n\n  public async processOnIceRestart(userID: number, extension: Calls.ExtensionParams): Promise<void> {\n    const pc = this.peerConnections[userID];\n\n    if (!pc) {\n      WebRTCHelpers.traceWarning('Ignore \"OnIceRestart\", there is no information about peer connection by some reason');\n    }\n\n    try {\n      await pc.setRemoteSessionDescription('offer', extension.sdp);\n      const { sdp } = await pc.getAndSetLocalSessionDescription(this.maxBandwidth);\n      const ext = { sessionID: this.ID ?? '', sdp };\n      this.signalingProvider.sendMessage(userID, ext, CallSignalingType.RESTART_ACCEPT);\n      WebRTCHelpers.trace('[processOnIceRestart] Success');\n    } catch (error) {\n      WebRTCHelpers.traceError(`[processOnIceRestart] Error: ${error}`);\n    }\n  }\n\n  public async processOnIceRestartAccept(userID: number, extension: Calls.ExtensionParams): Promise<void> {\n    const pc = this.peerConnections[userID];\n\n    if (!pc) {\n      WebRTCHelpers.traceWarning(\n        'Ignore \"OnIceRestartAccept\", there is no information about peer connection by some reason'\n      );\n    }\n\n    try {\n      await pc.setRemoteSessionDescription('answer', extension.sdp);\n      WebRTCHelpers.trace('[processOnIceRestartAccept] Success');\n    } catch (error) {\n      WebRTCHelpers.traceError(`[processOnIceRestartAccept] Error: ${error}`);\n    }\n  }\n\n  public processCall(peerConnection: WebRTCPeerConnection, extension: Calls.ExtensionParams = {}): void {\n    const ext = Object.assign({ userInfo: {} }, extension, {\n      sessionID: this.ID,\n      callType: this.callType,\n      callerID: this.initiatorID,\n      opponentsIDs: this.opponentsIDs,\n      sdp: peerConnection.localDescription.sdp,\n    });\n\n    this.signalingProvider.sendMessage(peerConnection.userID, ext, CallSignalingType.CALL);\n  }\n\n  public processIceCandidates(userID: number, iceCandidates: RTCIceCandidateInit[]): void {\n    const extension = {\n      sessionID: this.ID ?? '',\n      callType: this.callType,\n      callerID: this.initiatorID,\n      opponentsIDs: this.opponentsIDs,\n    };\n\n    this.signalingProvider.sendCandidate(userID, iceCandidates, extension);\n  }\n\n  public processOnNotAnswer(peerConnection: WebRTCPeerConnection): void {\n    WebRTCHelpers.trace(`Answer timeout callback for session ${this.ID} for user ${peerConnection.userID}`);\n\n    this.clearWaitingOfferOrAnswerTimer();\n    peerConnection.release();\n    Utils.safeCallbackCall(this.onUserNotAnswerListener)(this, peerConnection.userID);\n    this.closeSessionIfAllConnectionsClosed();\n  }\n\n  public onRemoteStream(userID: number, stream: MediaStream): void {\n    Utils.safeCallbackCall(this.onRemoteStreamListener)(this, userID, stream);\n  }\n\n  public onCallStatsReport(userID: number, stats: any, error?: Error): void {\n    Utils.safeCallbackCall(this.onCallStatsReportListener)(this, userID, stats, error);\n  }\n\n  public onSessionConnectionStateChanged(userID: number, connectionState: CallSessionConnectionState): void {\n    Utils.safeCallbackCall(this.onSessionConnectionStateChangedListener)(this, userID, connectionState);\n  }\n\n  private close(): void {\n    Object.values(this.peerConnections).forEach((pc) => {\n      try {\n        pc.release();\n      } catch (e) {\n        Utils.DLog(`Peer close error: ${e}`);\n      }\n    });\n\n    this.closeLocalMediaStream();\n    this.state = CallSessionState.CLOSED;\n    Utils.safeCallbackCall(this.onSessionCloseListener)(this);\n  }\n\n  public closeSessionIfAllConnectionsClosed(): void {\n    let isAllClosed = true;\n\n    Object.values(this.peerConnections).forEach((pc) => {\n      let isClosed = false;\n      try {\n        /*\n         * TODO:\n         * Uses RTCPeerConnection.signalingState instead RTCPeerConnection.iceConnectionState,\n         * because state 'closed' comes after few time from Safari, but signaling state comes instantly\n         */\n        isClosed = pc.iceConnectionState === 'closed' || pc.signalingState === 'closed' || pc.released;\n      } catch (err) {\n        WebRTCHelpers.traceError(err);\n        // need to set peerState to 'closed' on error. FF will crashed without this part.\n        isClosed = true;\n      }\n\n      isAllClosed = isClosed;\n    });\n\n    WebRTCHelpers.trace(`All peer connections closed: ${isAllClosed}`);\n\n    if (isAllClosed) {\n      this.closeLocalMediaStream();\n      Utils.safeCallbackCall(this.onSessionCloseListener)(this);\n      this.state = CallSessionState.CLOSED;\n    }\n  }\n\n  private closeLocalMediaStream(): void {\n    if (this.localStream) {\n      this.localStream.getTracks().forEach((track) => track.stop());\n      this.localStream = undefined;\n      this.mediaParams = {};\n    }\n  }\n\n  public mute(type: MediaType): void {\n    this.muteStream(false, type);\n  }\n\n  public unmute(type: MediaType): void {\n    this.muteStream(true, type);\n  }\n\n  private muteStream(enabled: boolean, type: MediaType = MediaType.NONE): void {\n    const tracks =\n      type === MediaType.AUDIO\n        ? this.localStream?.getAudioTracks()\n        : type === MediaType.VIDEO\n        ? this.localStream?.getVideoTracks()\n        : [];\n\n    tracks?.forEach((track) => {\n      track.enabled = enabled;\n    });\n  }\n\n  private clearAnswerTimer(): void {\n    if (this.answerTimer) {\n      WebRTCHelpers.trace('clearAnswerTimer');\n      clearTimeout(this.answerTimer);\n      this.answerTimer = null;\n    }\n  }\n\n  private startAnswerTimer(): void {\n    WebRTCHelpers.trace('startAnswerTimer');\n\n    this.answerTimer = setTimeout(() => {\n      WebRTCHelpers.trace('answerTimeoutCallback');\n      this.close();\n      this.answerTimer = null;\n    }, config.videochat.answerTimeInterval * 1000);\n  }\n\n  private clearWaitingOfferOrAnswerTimer(): void {\n    if (this.waitingOfferOrAnswerTimer) {\n      WebRTCHelpers.trace('clearWaitingOfferOrAnswerTimer');\n      clearTimeout(this.waitingOfferOrAnswerTimer);\n      this.waitingOfferOrAnswerTimer = null;\n    }\n  }\n\n  private startWaitingOfferOrAnswerTimer(): void {\n    const timeWait = (this.acceptCallTime - this.startCallTime) / 1000;\n    const timeDiff = Math.min(timeWait, config.videochat.answerTimeInterval / 2);\n    const timeout = Math.max(config.videochat.answerTimeInterval - timeDiff, 1);\n\n    WebRTCHelpers.trace(`startWaitingOfferOrAnswerTimer, timeout: ${timeout}`);\n\n    this.waitingOfferOrAnswerTimer = setTimeout(() => {\n      WebRTCHelpers.trace('waitingOfferOrAnswerTimeoutCallback');\n\n      Object.values(this.peerConnections).forEach((pc) => {\n        if (pc.state === PeerConnectionState.CONNECTING || pc.state === PeerConnectionState.NEW) {\n          this.processOnNotAnswer(pc);\n        }\n      });\n\n      this.waitingOfferOrAnswerTimer = null;\n    }, timeout * 1000);\n  }\n\n  public toString(): string {\n    return `ID: ${this.ID}, initiatorID: ${this.initiatorID}, opponentsIDs: ${this.opponentsIDs}, state: ${this.state}, callType: ${this.callType}`;\n  }\n}\n\nfunction generateUUID(): string {\n  let d = Date.now();\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\nfunction prepareExtension(extension: Calls.UserInfo = {}): Calls.ExtensionParams {\n  const ext = { userInfo: extension };\n\n  try {\n    if (Utils.isObject(extension)) {\n      ext.userInfo = Utils.cloneObject(extension, true);\n    } else {\n      WebRTCHelpers.traceWarning('Ignore \"prepareExtension\", must be an object');\n    }\n  } catch (err) {\n    WebRTCHelpers.traceWarning(err.message);\n  }\n\n  return ext;\n}\n","import WebRTCClient from './WebRTCClient';\nimport ChatHelpers from '../messaging/ChatUtils';\nimport ChatUtils from '../messaging/ChatUtils';\nimport { Calls, CallSignalingType, CallType, Chat } from '../types';\n\nexport default class WebRTCSignalingProcessor {\n  public delegate: WebRTCClient;\n\n  constructor(delegate: WebRTCClient) {\n    this.delegate = delegate;\n  }\n\n  public onMessage = (userID: number, extraParams: Chat.XmlElement): void => {\n    const extension = this.getExtension(extraParams);\n    const sessionId = extension?.sessionID ?? '';\n    const signalType = extension?.signalType;\n    /** cleanup */\n    delete extension?.moduleIdentifier;\n    delete extension?.sessionID;\n    delete extension?.signalType;\n\n    switch (signalType) {\n      case CallSignalingType.CALL:\n        this.delegate.onCallHandler(userID, sessionId, extension);\n        break;\n      case CallSignalingType.ACCEPT:\n        this.delegate.onAcceptHandler(userID, sessionId, extension);\n        break;\n      case CallSignalingType.REJECT:\n        this.delegate.onRejectHandler(userID, sessionId, extension);\n        break;\n      case CallSignalingType.STOP:\n        this.delegate.onStopHandler(userID, sessionId, extension);\n        break;\n      case CallSignalingType.CANDIDATE:\n        this.delegate.onIceCandidatesHandler(userID, sessionId, extension);\n        break;\n      case CallSignalingType.RESTART:\n        this.delegate.onIceRestartHandler(userID, sessionId, extension);\n        break;\n      case CallSignalingType.RESTART_ACCEPT:\n        this.delegate.onIceRestartAcceptHandler(userID, sessionId, extension);\n        break;\n    }\n  };\n\n  private getExtension(extraParams?: Chat.XmlElement): Calls.ExtensionParams {\n    if (!extraParams) {\n      return {};\n    }\n\n    const extension: Calls.ExtensionParams = { iceCandidates: [], opponentsIDs: [] };\n    const elements = ChatUtils.getChildElements(extraParams);\n\n    elements.forEach((element: Chat.XmlElement) => {\n      const items = ChatUtils.getChildElements(element);\n      const key = ChatUtils.getName(element) ?? '';\n\n      switch (key) {\n        case 'callerID':\n          extension[key] = parseInt(ChatUtils.getText(element) || '0');\n          break;\n\n        case 'callType':\n          const type = ChatUtils.getText(element);\n          extension[key] = type === '1' ? CallType.VIDEO : type === '2' ? CallType.AUDIO : undefined;\n          break;\n\n        case 'iceCandidates':\n          items.forEach((item) => {\n            const candidate = {};\n            ChatUtils.getChildElements(item).forEach((child) => {\n              const childName = ChatUtils.getName(child) || '';\n              const childText = ChatUtils.getText(child);\n              candidate[childName] = childName === 'sdpMLineIndex' ? parseInt(childText || '0') : childText;\n            });\n            extension.iceCandidates?.push(candidate);\n          });\n          break;\n\n        case 'opponentsIDs':\n          items.forEach((item) => {\n            extension.opponentsIDs?.push(parseInt(ChatUtils.getText(item) || '0'));\n          });\n          break;\n\n        default:\n          if (items.length > 1) {\n            if ((ChatUtils.getText(element) || '').length > 4096) {\n              extension[key] = items.reduce((acc, item) => acc + ChatUtils.getText(item), '');\n            } else {\n              ChatHelpers.assignXmlToObject(element, extension);\n            }\n          } else {\n            if (key === 'userInfo') {\n              ChatHelpers.assignXmlToObject(element, extension);\n            } else {\n              extension[key] = ChatUtils.getText(element);\n            }\n          }\n          break;\n      }\n    });\n\n    if (extension.iceCandidates?.length === 0) {\n      delete extension.iceCandidates;\n    }\n\n    if (extension.opponentsIDs?.length === 0) {\n      delete extension.opponentsIDs;\n    }\n\n    return extension;\n  }\n}\n","import Utils from '../Utils';\nimport { XMPPClient } from '../messaging/xmpp';\nimport ChatUtils from '../messaging/ChatUtils';\nimport WebRTCHelpers from './WebRTCHelpers';\nimport { Calls, CallSignalingModuleIdentifier, CallSignalingType } from '../types';\n\nexport default class WebRTCSignalingProvider {\n  public signalingConnection: XMPPClient;\n\n  constructor(signalingConnection: XMPPClient) {\n    this.signalingConnection = signalingConnection;\n  }\n\n  public sendCandidate(userID: number, iceCandidates: RTCIceCandidateInit[], ext: Calls.ExtensionParams = {}): void {\n    const extension = Object.assign({}, ext, { iceCandidates });\n\n    this.sendMessage(userID, extension, CallSignalingType.CANDIDATE);\n  }\n\n  public sendMessage(userID: number, ext: Calls.ExtensionParams, signalingType: CallSignalingType): void {\n    const extension = Object.assign({}, ext);\n    /** basic parameters */\n    extension.moduleIdentifier = CallSignalingModuleIdentifier;\n    extension.signalType = signalingType;\n    /** extension.sessionID */\n    /** extension.callType */\n    extension.platform = Utils.env.isBrowser ? 'web' : Utils.env.isReactNative || Utils.env.isExpo ? 'mobile' : 'node';\n    /** extension.callerID */\n    /** extension.opponentsIDs */\n    /** extension.sdp */\n\n    if (extension.userInfo) {\n      if (!Object.keys(extension.userInfo).length) {\n        delete extension.userInfo;\n      } else if (extension.userInfo.maxBandwidth === 0) {\n        delete extension.userInfo.maxBandwidth;\n      }\n    }\n\n    let messageStanza = ChatUtils.createMessageStanza({\n      to: WebRTCHelpers.getUserJid(userID),\n      type: 'headline',\n      id: Utils.getBsonObjectId(),\n    }).c('extraParams', { xmlns: 'jabber:client' });\n\n    Object.keys(extension).forEach((name) => {\n      const item = extension[name];\n\n      if (name === 'iceCandidates') {\n        messageStanza = messageStanza.c('iceCandidates');\n        item.forEach((candidate: RTCIceCandidateInit) => {\n          messageStanza = messageStanza.c('iceCandidate');\n          Object.keys(candidate).forEach((key: string) => {\n            messageStanza = messageStanza.c(key).t(candidate[key]).up();\n          });\n          messageStanza = messageStanza.up();\n        });\n        messageStanza = messageStanza.up();\n      } else if (name === 'opponentsIDs') {\n        messageStanza = messageStanza.c('opponentsIDs');\n        item.forEach((opponentId: string) => {\n          messageStanza = messageStanza.c('opponentID').t(opponentId).up();\n        });\n        messageStanza = messageStanza.up();\n      } else if (typeof item === 'object') {\n        ChatUtils.assignObjectToXml(messageStanza, item, name);\n      } else {\n        messageStanza = messageStanza.c(name).t(item).up();\n      }\n    });\n\n    messageStanza = messageStanza.up();\n\n    this.signalingConnection.sendOnline(messageStanza);\n  }\n}\n","import { mediaDevices } from '../platform';\nimport config from '../config';\nimport ProxyService from '../Proxy';\nimport Utils from '../Utils';\nimport WebRTCSession from './WebRTCSession';\nimport WebRTCSignalingProcessor from './WebRTCSignalingProcessor';\nimport WebRTCSignalingProvider from './WebRTCSignalingProvider';\nimport WebRTCHelpers from './WebRTCHelpers';\nimport { XMPPClient } from '../messaging/xmpp';\nimport {\n  CallEvent,\n  Calls,\n  CallSessionConnectionState,\n  CallSessionState,\n  CallType,\n  EmptyResponse,\n  PeerConnectionState,\n  ProxyMethod,\n} from '../types';\n\nexport default class WebRTCClient {\n  public connection: XMPPClient;\n  public proxy: ProxyService;\n  public signalingProcessor: WebRTCSignalingProcessor;\n  public signalingProvider: WebRTCSignalingProvider;\n  public SessionConnectionState: typeof CallSessionConnectionState = CallSessionConnectionState;\n  public PeerConnectionState: typeof PeerConnectionState = PeerConnectionState;\n  public CallType: typeof CallType = CallType;\n  public sessions: { [key: string]: WebRTCSession } = {};\n  public onCallListener!: Calls.OnCallListener;\n  public onAcceptCallListener!: Calls.OnAcceptCallListener;\n  public onRejectCallListener!: Calls.OnRejectCallListener;\n  public onStopCallListener!: Calls.OnStopCallListener;\n  public onInvalidEventsListener!: Calls.OnInvalidEventsListener;\n  public onUserNotAnswerListener!: Calls.OnUserNotAnswerListener;\n  public onRemoteStreamListener!: Calls.OnRemoteStreamListener;\n  public onSessionConnectionStateChangedListener!: Calls.OnSessionConnectionStateChangedListener;\n  public onSessionCloseListener!: Calls.OnSessionCloseListener;\n  public onCallStatsReport!: Calls.OnCallStatsReportListener;\n  public onDevicesChangeListener: Calls.OnDevicesChangeListener = () => {};\n\n  constructor(connection: XMPPClient, proxy: ProxyService) {\n    this.connection = connection;\n    this.proxy = proxy;\n\n    this.signalingProcessor = new WebRTCSignalingProcessor(this);\n    this.signalingProvider = new WebRTCSignalingProvider(connection);\n\n    if (mediaDevices) {\n      mediaDevices.ondevicechange = Utils.safeCallbackCall(this.onDevicesChangeListener);\n    }\n  }\n\n  private get currentUserID(): number {\n    const userJID = this.connection.jid?.toString() ?? '';\n    const userID = WebRTCHelpers.getUserIdFromJID(userJID) ?? 0;\n    return userID;\n  }\n\n  public async getMediaDevices(kind?: MediaDeviceKind): Promise<MediaDeviceInfo[]> {\n    if (mediaDevices?.enumerateDevices) {\n      const devices = await mediaDevices.enumerateDevices();\n      return kind ? devices.filter((device) => device.kind === kind) : devices;\n    } else {\n      throw new Error(\"No 'enumerateDevices' API supported\");\n    }\n  }\n\n  public createNewSession(\n    opponentsIDs: number[],\n    callType: number,\n    options?: { maxBandwidth?: number; bandwidth?: number }\n  ): WebRTCSession {\n    const maxBandwidth = (options?.maxBandwidth || options?.bandwidth) ?? 0;\n\n    if (!opponentsIDs) {\n      throw new Error(\"Can't create a session without opponentsIDs\");\n    }\n\n    return this.createAndStoreSession(null, this.currentUserID, opponentsIDs, callType, maxBandwidth);\n  }\n\n  private createAndStoreSession(\n    sessionID: string | null,\n    initiatorID: number,\n    opponentsIDs: number[],\n    callType: CallType,\n    maxBandwidth: number = 0\n  ): WebRTCSession {\n    const webRTCSession = new WebRTCSession({\n      ID: sessionID,\n      initiatorID,\n      opponentsIDs,\n      callType,\n      signalingProvider: this.signalingProvider,\n      currentUserID: this.currentUserID,\n      maxBandwidth,\n    });\n\n    webRTCSession.onUserNotAnswerListener = this.onUserNotAnswerListener;\n    webRTCSession.onRemoteStreamListener = this.onRemoteStreamListener;\n    webRTCSession.onSessionConnectionStateChangedListener = this.onSessionConnectionStateChangedListener;\n    webRTCSession.onSessionCloseListener = this.onSessionCloseListener;\n    webRTCSession.onCallStatsReportListener = this.onCallStatsReport;\n\n    if (webRTCSession?.ID) {\n      this.sessions[webRTCSession.ID] = webRTCSession;\n    }\n\n    return webRTCSession;\n  }\n\n  public clearSession(sessionId: string): void {\n    delete this.sessions[sessionId];\n  }\n\n  /// Reject call by http request\n  public callRejectRequest(params: {\n    sessionID: string;\n    recipientId: number;\n    platform: 'web' | 'android' | 'ios';\n    userInfo?: Calls.UserInfo;\n  }): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(config.urls.calls, 'reject'),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  /// DELEGATE (signaling)\n\n  public onCallHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams): void {\n    const userInfo = extension.userInfo || {};\n    const maxBandwidth = Number(userInfo.maxBandwidth ?? 0);\n\n    let session = this.sessions[sessionID];\n\n    WebRTCHelpers.trace(`onCall. userID: ${userID}, sessionID: ${sessionID}, extension: ${JSON.stringify(extension)}`);\n\n    if (!session) {\n      session = this.createAndStoreSession(\n        sessionID,\n        extension.callerID || 0,\n        extension.opponentsIDs || [],\n        extension.callType || CallType.VIDEO,\n        maxBandwidth\n      );\n\n      Utils.safeCallbackCall(this.onCallListener)(session, userInfo);\n    }\n\n    session.processOnCall(userID, extension);\n  }\n\n  public onAcceptHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams): void {\n    const session = this.sessions[sessionID];\n    const userInfo = extension.userInfo || {};\n\n    WebRTCHelpers.trace(\n      `onAccept. UserID: ${userID}, sessionID: ${sessionID}, extension: ${JSON.stringify(extension)}`\n    );\n\n    if (session && (session.state === CallSessionState.ACTIVE || session.state === CallSessionState.NEW)) {\n      Utils.safeCallbackCall(this.onAcceptCallListener)(session, userID, userInfo);\n      session.processOnAccept(userID, extension);\n    } else {\n      WebRTCHelpers.traceWarning(`Ignore 'onAccept', there is no information about session ${sessionID}`);\n    }\n  }\n\n  public onRejectHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams): void {\n    const session = this.sessions[sessionID];\n\n    WebRTCHelpers.trace(\n      `onReject. UserID: ${userID}, sessionID: ${sessionID}, extension: ${JSON.stringify(extension)}`\n    );\n\n    if (session) {\n      const userInfo = extension.userInfo || {};\n\n      Utils.safeCallbackCall(this.onRejectCallListener)(session, userID, userInfo);\n      session.processOnReject(userID);\n    } else {\n      WebRTCHelpers.traceWarning(`Ignore 'onReject', there is no information about session ${sessionID}`);\n    }\n  }\n\n  public onStopHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams) {\n    WebRTCHelpers.trace(`onStop. UserID: ${userID}, sessionID: ${sessionID}, extension: ${JSON.stringify(extension)}`);\n\n    const session = this.sessions[sessionID];\n    const userInfo = extension.userInfo || {};\n\n    if (session && (session.state === CallSessionState.ACTIVE || session.state === CallSessionState.NEW)) {\n      session.processOnStop(userID);\n      Utils.safeCallbackCall(this.onStopCallListener)(session, userID, userInfo);\n    } else {\n      Utils.safeCallbackCall(this.onInvalidEventsListener)(session, userID, userInfo);\n      WebRTCHelpers.traceWarning(`Ignore 'onStop', there is no information about session ${sessionID} by some reason`);\n    }\n  }\n\n  public onIceCandidatesHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams) {\n    const session = this.sessions[sessionID];\n\n    WebRTCHelpers.trace(\n      `onIceCandidates. UserID: ${userID}. SessionID: ${sessionID}. ICE candidates count: ${\n        extension.iceCandidates?.length ?? 0\n      }`\n    );\n\n    if (session) {\n      if (session.state === CallSessionState.ACTIVE) {\n        session.processOnIceCandidates(userID, extension);\n      } else {\n        WebRTCHelpers.traceWarning(`Ignore 'OnIceCandidates', the session ( ${sessionID} ) has invalid state`);\n      }\n    } else {\n      WebRTCHelpers.traceWarning(`Ignore 'OnIceCandidates', there is no information about session ${sessionID}`);\n    }\n  }\n\n  public onIceRestartHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams) {\n    const session = this.sessions[sessionID];\n\n    WebRTCHelpers.trace(\n      `onIceRestart. UserID: ${userID}. SessionID: ${sessionID}. Extension: ${JSON.stringify(extension)}`\n    );\n\n    if (session) {\n      if (session.state === CallSessionState.ACTIVE) {\n        session.processOnIceRestart(userID, extension);\n      } else {\n        WebRTCHelpers.traceWarning(`Ignore 'OnIceRestart', the session (${sessionID}) has invalid state`);\n      }\n    } else {\n      WebRTCHelpers.traceWarning(`Ignore 'OnIceRestart', there is no information about session ${sessionID}`);\n    }\n  }\n\n  public onIceRestartAcceptHandler(userID: number, sessionID: string, extension: Calls.ExtensionParams) {\n    const session = this.sessions[sessionID];\n\n    WebRTCHelpers.trace(\n      `onIceRestartAccept. UserID: ${userID}. SessionID: ${sessionID}. Extension: ${JSON.stringify(extension)}`\n    );\n\n    if (session) {\n      if (session.state === CallSessionState.ACTIVE) {\n        session.processOnIceRestartAccept(userID, extension);\n      } else {\n        WebRTCHelpers.traceWarning(`Ignore 'onIceRestartAccept', the session (${sessionID}) has invalid state`);\n      }\n    } else {\n      WebRTCHelpers.traceWarning(`Ignore 'onIceRestartAccept', there is no information about session ${sessionID}`);\n    }\n  }\n\n  private getListenerByName(name: CallEvent): Calls.ListenerName | null {\n    switch (name) {\n      case CallEvent.CALL:\n        return 'onCallListener';\n      case CallEvent.ACCEPT:\n        return 'onAcceptCallListener';\n      case CallEvent.REJECT:\n        return 'onRejectCallListener';\n      case CallEvent.STOP:\n        return 'onStopCallListener';\n      case CallEvent.INVALID:\n        return 'onInvalidEventsListener';\n      case CallEvent.NOT_ANSWER:\n        return 'onUserNotAnswerListener';\n      case CallEvent.REMOTE_STREAM:\n        return 'onRemoteStreamListener';\n      case CallEvent.CONNECTION_STATE:\n        return 'onSessionConnectionStateChangedListener';\n      case CallEvent.CLOSE:\n        return 'onSessionCloseListener';\n      case CallEvent.STATS_REPORT:\n        return 'onCallStatsReport';\n      case CallEvent.DEVICES:\n        return 'onDevicesChangeListener';\n      default:\n        return null;\n    }\n  }\n\n  public addListener(name: CallEvent, listener: Calls.Listeners): () => void {\n    const listenerName = this.getListenerByName(name);\n    if (listenerName) {\n      (this[listenerName] as Calls.Listeners) = listener;\n    }\n    return this.removeListener.bind(this, name);\n  }\n\n  public removeListener(name: CallEvent): void {\n    const listenerName = this.getListenerByName(name);\n    if (listenerName) {\n      (this[listenerName] as Calls.Listeners | undefined) = name === CallEvent.DEVICES ? () => {} : undefined;\n    }\n  }\n\n  public removeAllListeners(): void {\n    Object.keys(this).forEach((key) => {\n      if (key.startsWith('on') && key.endsWith('Listener') && typeof this[key as Calls.ListenerName] === 'function') {\n        (this[key as Calls.ListenerName] as Calls.Listeners | undefined) =\n          key === 'onDevicesChangeListener' ? () => {} : undefined;\n      }\n    });\n  }\n}\n","import ProxyService from './Proxy';\nimport config from './config';\nimport Utils from './Utils';\nimport { EmptyResponse, ProxyMethod, ProxyType, Whiteboard } from './types';\n\nexport default class WhiteboardService {\n  public proxy: ProxyService;\n  readonly route = config.urls.whiteboards;\n  readonly server = config.whiteboard.server;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public getURL({ id, title, username }: Whiteboard.GetUrlParams): string {\n    return `${this.server}?whiteboardid=${id}&username=${username}&title=${title}`;\n  }\n\n  public async get(paramsOrId: Whiteboard.GetParams): Promise<Whiteboard.Item[]> {\n    const ajaxParams = {\n      type: ProxyMethod.GET,\n      url: Utils.getUrl(this.route),\n      data: typeof paramsOrId === 'string' ? { chat_dialog_id: paramsOrId } : paramsOrId,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async create(params: Whiteboard.CreateParams): Promise<Whiteboard.Item> {\n    const ajaxParams = {\n      type: ProxyMethod.POST,\n      url: Utils.getUrl(this.route),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async update(id: string, params: Whiteboard.UpdateParams): Promise<Whiteboard.Item> {\n    const ajaxParams = {\n      type: ProxyMethod.PUT,\n      url: Utils.getUrl(this.route, id),\n      data: params,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n\n  public async delete(id: string): Promise<EmptyResponse> {\n    const ajaxParams = {\n      type: ProxyMethod.DELETE,\n      url: Utils.getUrl(this.route, id),\n      dataType: ProxyType.TEXT,\n    };\n\n    return this.proxy.ajax(ajaxParams);\n  }\n}\n","import ProxyService from './Proxy';\nimport config from './config';\nimport { ProxyMethod, LinkPreview, LinkPreviewCache } from './types';\n\nexport default class LinkPreviewService {\n  public proxy: ProxyService;\n  public cache: LinkPreviewCache = new Map();\n\n  readonly route = config.urls.unfurl;\n  readonly server = config.linkpreview.server;\n\n  constructor(proxy: ProxyService) {\n    this.proxy = proxy;\n  }\n\n  public async get(url: string): Promise<LinkPreview> {\n    if (!this.cache.has(url)) {\n      let linkPreview: LinkPreview;\n\n      try {\n        const ajaxParams = {\n          type: ProxyMethod.POST,\n          url: `${this.server}/${this.route}`,\n          data: { url },\n        };\n\n        linkPreview = (await this.proxy.ajax(ajaxParams)) as LinkPreview;\n      } catch (error) {\n        const title = this.getHostFromUrl(url);\n\n        linkPreview = { url, title, description: '', images: [] };\n      } finally {\n        this.cache.set(url, linkPreview);\n      }\n    }\n\n    return this.cache.get(url);\n  }\n\n  private getHostFromUrl(url: string): string {\n    if (typeof URL === 'function') {\n      return new URL(url).hostname;\n    }\n\n    const match = url.match(/^(?:https?:\\/\\/)?([^\\/]+)/);\n    return match ? match[1] : url;\n  }\n}\n","import { isWebRTCAvailable } from './platform';\nimport config from './config';\nimport AddressBookService from './AddressBook';\nimport AuthService from './Auth';\nimport ChatClient from './messaging/Chat';\nimport ConferenceClient from './videocalling_conference/ConferenceClient';\nimport DataService from './Data';\nimport MeetingsService from './Meetings';\nimport ProxyService from './Proxy';\nimport PushNotificationsService from './PushNotifications';\nimport StorageService from './Storage';\nimport UsersService from './Users';\nimport Utils from './Utils';\nimport WebRTCClient from './videocalling/WebRTCClient';\nimport WhiteboardService from './Whiteboard';\nimport LinkPreviewService from './LinkPreview';\nimport { Config } from './types';\n\nexport default class ConnectyCube {\n  public ConnectyCube?: typeof ConnectyCube;\n\n  public utils!: Utils;\n  public service!: ProxyService;\n  public auth!: AuthService;\n  public users!: UsersService;\n  public storage!: StorageService;\n  public pushnotifications!: PushNotificationsService;\n  public data!: DataService;\n  public addressbook!: AddressBookService;\n  public chat!: ChatClient;\n  public meeting!: MeetingsService;\n  public whiteboard!: WhiteboardService;\n  public linkpreview!: LinkPreviewService;\n  public videochat!: WebRTCClient;\n  public videochatconference!: ConferenceClient;\n  public setSession!: AuthService['setSession'];\n  public getSession!: AuthService['getSession'];\n  public createSession!: AuthService['createSession'];\n  public destroySession!: AuthService['destroySession'];\n  /**\n   * @deprecated ConnectyCube.login(user) is deprecated. Use `ConnectyCube.createSession(user)` or `ConnectyCube.auth.login(user)` instead.\n   */\n  public login!: AuthService['login'];\n  /**\n   * @deprecated ConnectyCube.logout() is deprecated. Use `ConnectyCube.destroySession()` or `ConnectyCube.auth.logout()` instead.\n   */\n  public logout!: AuthService['logout'];\n\n  public init(credentials: Config.Credentials, configMap: Config.Options = {}): void {\n    if (configMap && typeof configMap === 'object') {\n      config.set(configMap);\n    }\n\n    this.utils = Utils;\n    this.service = new ProxyService();\n    this.auth = new AuthService(this.service);\n    this.users = new UsersService(this.service);\n    this.storage = new StorageService(this.service);\n    this.pushnotifications = new PushNotificationsService(this.service);\n    this.data = new DataService(this.service);\n    this.addressbook = new AddressBookService(this.service);\n    this.chat = new ChatClient(this.service);\n    this.meeting = new MeetingsService(this.service);\n    this.whiteboard = new WhiteboardService(this.service);\n    this.linkpreview = new LinkPreviewService(this.service);\n\n    if (isWebRTCAvailable) {\n      this.videochat = new WebRTCClient(this.chat.xmppClient, this.service);\n      this.videochatconference = new ConferenceClient(this.service);\n      this.chat.webrtcSignalingProcessor = this.videochat.signalingProcessor;\n    }\n\n    if (credentials.token) {\n      config.creds.appId = credentials.appId;\n      this.service.setSession({ token: credentials.token });\n    } else {\n      config.creds.appId = credentials.appId;\n      config.creds.authKey = credentials.authKey;\n    }\n\n    this.setSession = this.auth.setSession;\n    this.getSession = this.auth.getSession;\n    this.createSession = this.auth.createSession;\n    this.destroySession = this.auth.destroySession;\n    this.login = this.auth.login;\n    this.logout = this.auth.logout;\n  }\n}\n","import ConnectyCube from './ConnectyCube';\n\nconst connectycube = new ConnectyCube();\nconnectycube.ConnectyCube = ConnectyCube;\n\nexport default connectycube;\n"],"names":["base64Encode","str","isBrowser","btoa","encodeURIComponent","replace","_","p1","String","fromCharCode","parseInt","Buffer","from","toString","sdkVersion","window","document","isNodeJS","process","versions","node","isReactNative","isExpo","fetchImpl","FormDataImpl","import","then","nodeFetch","default","FormDataNode","fetch","FormData","navigator","undefined","mediaDevices","MediaStream","MediaStreamTrack","RTCIceCandidate","RTCPeerConnection","RTCRtpReceiver","RTCRtpSender","RTCSessionDescription","isWebRTCAvailable","Boolean","adapter","AddressBookUserDataType","LoginProviderNames","CallSignalingType","CallSessionConnectionState","CallSessionState","CallType","CallEvent","PeerConnectionState","ChatType","ChatEvent","PrivacyListAction","ChatProtocol","JanusDebugMode","DataPermission","DataPermissionAccess","DialogType","LastMessageMessageStatus","DialogDateProp","DeviceInputType","JanusEvent","JanusCallType","JanusMediaTrackReason","ConferenceEvent","MediaType","MeetingDateMetric","ProxyMethod","ProxyType","NotificationChannel","DevicePlatform","PushEnvironment","Config","constructor","this","version","creds","appId","authKey","endpoints","api","chat","muc","chatProtocol","bosh","websocket","active","streamManagement","enable","reconnect","timeInterval","videochat","alwaysRelayCalls","answerTimeInterval","dialingTimeInterval","disconnectTimeInterval","statsReportTimeInterval","iceServers","urls","username","credential","conference","server","debug","ALL","whiteboard","linkpreview","session","login","users","blobs","subscriptions","events","data","addressbook","meetings","whiteboards","unfurl","calls","type","on","sessionExpired","xmppDataWrite","xmppDataRead","timeout","mode","getInstance","instance","set","options","Object","keys","forEach","key","hasOwnProperty","optionValue","nextKey","config","Utils","safeCallbackCall","cb","args","err","console","error","getUrl","base","res","ext","resource","extension","isArray","arg","Array","isObject","obj","prototype","call","getBsonObjectId","ObjectId","machine","Math","floor","random","pid","increment","timestamp","Date","now","padStart","DLog","loggers","length","logger","push","log","callTrafficUsageCallback","callbackName","getStringSize","Blob","size","getDataSize","body","b","headers","h","JSON","stringify","cloneObject","escapeNull","json","jsonObject","parse","env","AddressBookService","proxy","route","uploadAddressBook","list","params","Error","ajaxParams","POST","url","contacts","ajax","get","udid","GET","getRegisteredUsers","compact","AuthService","routes","setSession","getSession","async","createSession","generateCreateSessionParams","response","setCurrentUserId","user_id","destroySession","DELETE","dataType","TEXT","user","id","logout","message","application_id","auth_key","password","email","provider","firebase_phone","firebase_email","TimeoutError_1","super","name","delay","ms","promise","Promise","resolve","setTimeout","TimeoutError","require$$0","require$$1","promiseDelay","race","finally","clearTimeout","EE","event","rejectEvent","reject","timeoutId","cleanup","removeListener","onEvent","onError","reason","value","once","has","prefix","Events","fn","context","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","names","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","arguments","apply","j","removeAllListeners","off","prefixed","module","Deferred","require$$2","require$$3","require$$4","require$$5","escaping","detect","local","replaceAll","raw","search","escape","unescape","JID","domain","setDomain","setLocal","setResource","Symbol","toPrimitive","hint","NaN","s","_domain","_local","getLocal","_resource","bare","equals","other","toLowerCase","getDomain","getResource","defineProperty","JID_1","resourceStart","indexOf","atStart","jid","jidModule","exports","bind","equal","a","detectEscape","escapeLocal","unescapeLocal","escapeXMLTable","escapeXMLReplace","match","unescapeXMLTable","unescapeXMLReplace","num","fromCodePoint","_escape","escapeXML","escapeXMLText","unescapeXML","result","start","end","previous","substring","unescapeXMLText","Element","attrs","parent","children","setAttrs","is","xmlns","getName","getNS","idx","findNS","attr","getXmlns","namespaces","m","assign","getAttr","join","getChild","getChildren","child","getChildByAttr","val","recursive","getChildrenByAttr","flat","getChildrenByFilter","filter","getText","text","getChildText","getChildElements","root","up","c","cnode","append","nodes","prepend","unshift","t","remove","el","write","_addChildren","writer","k","v","tree","Element_1","XMLError_1","LtxParser","SaxLtx","remainder","parseRemainder","tagName","endTag","selfClosing","attrQuote","attrQuoteChar","attrName","state","recordStart","_handleTagOpening","pos","endRecording","recorded","lt","quot","endcomment","endCDATA","charCodeAt","substr","cData","startsWith","prevFirst","prevSecond","ltx","XMLError","Parser","parser","cursor","onStartElement","onEndElement","onText","element","Parser_1","createElement","createElement_1","__source","__self","entries","XMPPError","condition","application","fromElement","second","third","xml","StreamError","StreamError_1","parseHost","parseService","parseURI","URI","port","hostname","protocol","URL","host","service","includes","Connection","socketListeners","parserListeners","status","socket","_reset","_detachSocket","_detachParser","_streamError","send","_end","_onData","_onParserError","_attachSocket","close","dirty","_status","clean","connect","getOwnPropertyNames","_onElement","isStreamError","_onStreamError","isStanza","_onSeeOtherHost","lang","open","_attachParser","_jid","disconnect","promiseOnline","Socket","socketParameters","headerElement","to","header","stop","fragment","footer","footerElement","p","all","restart","sendReceive","string","isNonza","NS","connection","Client","transports","Transport","sendMany","_findTransport","find","Client_1","clientCore","Reconnect","entity","_timeout","scheduleReconnect","r","WS","WebSocket","globalThis","CODE","Socket_1","errno","code","wasClean","addEventListener","removeEventListener","FramedParser","FramedParser_1","NS_FRAMING","ConnectionWebSocket","elements","test","Connection_1","Context_1","stanza","compose","koaCompose","middleware","next","index","dispatch","IncomingContext","Context","IncomingContext_1","OutgoingContext","OutgoingContext_1","ctx","errorHandler","reply","catch","incoming","outgoing","incomingListener","outgoingListener","hookOutgoing","use","streamFeatures","handler","feature","xid","StanzaError","StanzaError_1","timeoutPromise","IQCaller","Map","_route","isReply","deferred","delete","request","_childRequest","caller","iqCaller","buildReply","buildReplyError","buildError","iqHandler","isQuery","isValidQuery","buildReplyResult","ns","callee","compareAltConnections","isSecure","uri","altConnections","compare","secure","method","http","link","rel","map","href","split","pop","sort","dns","resolveModule","records","fetchURIs","srv","Set","record","fallbackConnect","uris","shift","resolve_1","_connect","filterSupportedURIs","Factory","factory","_mechs","mech","mechs","jlen","entry","encode","decode","browser","atob","SASLError","SASLError_1","SASLFactory","authenticate","SASL","mechname","credentials","realm","serviceType","serviceName","challenge","resp","mechanism","clientFirst","sasl","offered","intersection","makeBindElement","resourceBinding","sessionEstablishment","Mechanism","cred","trace","chal","saslAnonymous","authzid","saslPlain","_xml","DialogsService","subscribeToPublic","subscribe","unsubscribeFromPublic","unsubscribe","occupants_ids","admins_ids","update","PUT","idOrIds","idsToDelete","trim","addAdmins","push_all","removeAdmins","pull_all","updateNotificationsSettings","enabled","getNotificationsSettings","getPublicOccupants","clearHistory","MessagesService","createSystem","unreadCount","chat_dialog_ids","listReactions","addReaction","reaction","updateReaction","removeReaction","add","putReaction","ChatUtils","buildUserJid","userId","buildUserJidLocalPart","createMessageStanza","createIqStanza","createPresenceStanza","createNonza","getElement","isErrorStanza","getAllElements","getElementText","getElementTreePath","elementsPath","reduce","prevElement","assignObjectToXml","assignExtraParamsToXml","extraParams","attachment","assignXmlToObject","item","parseExtraParams","attachments","dialogId","dialog_id","moduleIdentifier","buildErrorFromXMPPErrorStanza","errorStanza","errorElement","info","getUniqueId","suffix","uuid","parseReactions","items","ChatHelpers","xmppJID","userCurrentJid","isNumeric","jidOrUserId","getUserJid","getRoomJidFromDialogId","typeChat","getUserNickWithMucDomain","getUserIdFromJID","getDialogIdFromJID","getRoomJid","getIdFromResource","parts","getRoomJidFromRoomFullJid","getUserIdFromRoomJid","roomJid","getDialogJid","identifier","NonzaName","StreamManagement","clientHandledCounter","serverHandledCounter","messagesQueue","elementHandler","ENABLED","REQUEST","ANSWER","nextHandledCounter","currHandledCounter","Number","isNaN","diffHandledCounter","markMessagesQueueAsSent","markMessagesQueueAsLostByTimeout","sendNonza","supported","removeElementHandler","addElementHandler","ENABLE","markMessagesQueueAsLost","sendAndCount","isMessage","isChat","CHAT","GROUPCHAT","isContent","xmppClient","sendOnline","markMessageAsLost","markMessageAsSent","onSentMessageCallback","clear","iterations","iterator","values","done","messagesQueueClearTimer","ackTimeout","acknowledgementTimeout","nonza","PrivacyList","helpers","stanzasCallbacks","privacyList","acc","action","mutualBlock","privacyListKeys","iqParams","iq","isMutual","userJid","userMuc","assignPrivacyItem","order","getList","_reject","query","currentList","currentListItem","ALLOW","updatedItem","updatedListItems","updatedList","getNames","defaultElement","activeElement","defaultName","activeName","allNames","setAsDefault","MultiUserChat","joinedRooms","dialogIdOrJid","dialogJid","presenceStanza","maxstanzas","x","isJoin","endsWith","isError","errorResponse","leave","_stanza","listOnlineUsers","iqStanza","stanzaId","ChatService","isConnected","isConnecting","isLogout","isReconnect","xmppClientListeners","connectPromise","earlyIncomingMessagesQueue","dialog","_Client","_reconnect","_websocket","_middleware","_streamFeatures","_iqCaller","iqCallee","_iqCallee","starttls","_resolve","_sasl","_resourceBinding","_sessionEstablishment","mechanisms","plain","anonymous","auth","_mechanism","privacylist","connectionStatus","removeAllXMPPClientListeners","addXMPPClientListener","postConnectActions","onDisconnectedListener","onChatStatusListener","onPresence","onIQ","onSystemMessage","onMessageError","onMessage","onConnectionErrorListener","ping","pingWithTimeout","messageId","messageStanza","markable","sendSystemMessage","sendIsTypingStatus","sendIsStopTypingStatus","sendDeliveredStatus","sendReadStatus","editMessage","originMessageId","last","deleteMessage","getLastUserActivity","onLastActivityStanza","seconds","onLastUserActivityListener","markActive","markInactive","terminate","start_date","toISOString","end_date","rawStanza","forwardedStanza","invite","delivered","read","replaceSubElement","reactionsSubElement","removeSubElement","composing","paused","isForwarded","isGroup","recipient","recipientId","currentUserJid","currentUserId","onMessageTypingListener","onMessageUpdateListener","onMessageReactionsListener","onMessageDeleteListener","onDeliveredStatusListener","onReadStatusListener","recipient_id","is_forwarded","onMessageListener","statusCode","mucUserId","actorElement","initiatorUserJid","initiatorId","onKickOccupant","listenerName","onSystemMessageListener","webrtcSignalingProcessor","onMessageErrorListener","presence","enableCarbons","onReconnectListener","stanzasCallback","setSubscriptionToUserLastActivity","user_jid","subscribeToUserLastActivityStatus","unsubscribeFromUserLastActivityStatus","removeXMPPClientListener","getListenerByName","STATUS","ERROR","DISCONNECTED","RECONNECTED","MESSAGE","SYSTEM_MESSAGE","ERROR_MESSAGE","TYPING_MESSAGE","UPDATE_MESSAGE","DELETE_MESSAGE","REACTIONS_MESSAGE","DELIVERED_MESSAGE","READ_MESSAGE","SENT_MESSAGE","USER_LAST_ACTIVITY","JOIN","LEAVE","KICK","Janus","sessions","mobile","isExtensionEnabled","getDisplayMedia","userAgent","chromever","maxver","isInstalled","defaultExtension","extensionId","querySelector","getScreen","callback","pending","cache","postMessage","init","origin","location","sourceId","gatewayCallbacks","success","noop","destroyed","initDone","isWebrtcSupported","websockets","ws","wsHandlers","wsKeepaliveTimeoutId","servers","serversIndex","iceTransportPolicy","bundlePolicy","withCredentials","maxev","max_poll_events","token","apisecret","destroyOnUnload","keepAlivePeriod","longPollTimeout","getMaxBitrates","simulcastMaxBitrates","maxBitrates","high","medium","low","connected","sessionId","pluginHandles","that","retries","transactions","eventHandler","warn","longpoll","getTime","httpAPICall","verb","handleEvent","textStatus","errorThrown","skipTimeout","transaction","reportSuccess","sender","pluginHandle","candidate","webrtcStuff","pc","remoteSdp","completed","addIceCandidate","endOfCandidates","candidates","webrtcState","hangup","ondetached","detach","mediaState","slowLink","plugindata","jsep","onmessage","vdebug","keepAlive","janus","session_id","randomString","callbacks","onopen","onerror","onclose","newWebSocket","eventName","sendMessage","handleId","sdp","e2ee","rid_order","force_relay","sendTrickleCandidate","createDataChannel","dclabel","dcprotocol","pendingData","onDataChannelStateChange","label","target","dcState","dataChannel","readyState","ondataopen","dcoptions","dataChannelOptions","ondata","sendData","dataChanDefaultLabel","sendDtmf","dtmfSender","audioSender","getSenders","track","kind","dtmf","ontonechange","tone","tones","duration","gap","insertDTMF","destroyHandle","noRequest","cleanupWebrtc","detached","createPeerconnectionIfNeeded","pc_config","insertableStreams","tracks","transforms","receiver","createEncodedStreams","createEncodedAudioStreams","createEncodedVideoStreams","forceEncodedAudioInsertableStreams","forceEncodedVideoInsertableStreams","encodedInsertableStreams","getStats","volume","bitrate","trickle","oniceconnectionstatechange","iceState","iceConnectionState","onicecandidate","iceDone","mySdp","localDescription","sdpSent","sendSDP","sdpMid","sdpMLineIndex","ontrack","streams","mid","transceiver","_mid","onremotetrack","e","onended","trackMutedTimeoutId","ev","transceivers","getTransceivers","_receiver","_track","onmute","onunmute","prepareWebrtc","offer","webrtcError","media","mediaToTracks","simulcast","simulcast2","svc","captureDevices","setRemoteDescription","answer","customizeSdp","createAnswer","setLocalDescription","mediaConstraints","iceRestart","createOffer","prepareWebrtcPeer","replaceTracks","openedConsentDialog","groups","gumGroup","capture","group","audio","video","ondatachannel","channel","nt","trackId","replaceTrack","stream","getAudioTracks","getVideoTracks","consentDialog","constraints","trackConstraints","otherType","otherTrack","otherConstraints","getUserMedia","newDirection","recv","direction","setDirection","myStream","addTrack","webRTCAdapter","browserDetails","addTransceiver","sendEncodings","rid","maxBitrate","scaleResolutionDownBy","parameters","getParameters","encodings","setParameters","scalabilityMode","codec","mimeType","codecs","getCapabilities","setCodecPreferences","framerate","maxFramerate","senderStreams","createAudioEncodedStreams","readableStream","writableStream","pipeThrough","pipeTo","readable","writable","receiverStreams","dontStop","rt","removeTrack","onlocaltrack","curdir","newdir","getLocalTracks","tr","getRemoteTracks","getVolume","remote","stats","remoteSource","audioLevel","isMuted","mute","videostream","audiostream","getBitrate","timer","bsnow","bsbefore","tsnow","tsbefore","setInterval","inStats","mediaType","bytesReceived","googCodecName","timePassed","bitRate","round","setBitrate","hangupRequest","clearInterval","streamExternal","stopAllTracks","oncleanup","getServer","getSessionId","getInfo","destroy","unload","notifyDestroyed","cleanupHandles","sendBeacon","unbindWebSocket","onUnbindMessage","onUnbindError","attach","ordered","plugin","opaqueId","loopIndex","handleToken","opaque_id","loop_index","started","getId","getPlugin","getRemoteVolume","getLocalVolume","isAudioMuted","muteAudio","unmuteAudio","isVideoMuted","muteVideo","unmuteVideo","setMaxBitrate","handleRemoteJsep","sendRequest","createHandle","useDefaultDependencies","deps","f","socketCls","proto","arr","fetchOptions","Accept","fetching","timerId","ok","parsed","useOldDependencies","jq","jQuery","payload","contentType","xhrFields","extend","xhr","keepAudio","audioSend","audioRecv","addAudio","replaceAudio","removeAudio","keepVideo","videoSend","videoRecv","addVideo","replaceVideo","removeVideo","screenshareFrameRate","frameRate","screenshareHeight","height","screenshareWidth","width","ideal","getTracks","mst","d","usedDependencies","dependencies","listDevices","isGetUserMediaAvailable","enumerateDevices","devices","safariVp8","testpc","offerToReceiveVideo","charSet","randomPoz","charAt","JanusClient","videoRoomPlugin","isOnlyAudio","currentRoomId","remoteFeeds","remoteJseps","remoteFeedsAttachingInProgress","bitrateTimers","timeoutSessionCallback","JanusEngine","engine","attachVideoConferencingPlugin","isRemote","skipMedia","remoteFeed","localStream","displayName","listen","room","ptype","feed","display","uplink","nacks","msg","feedId","offerParams","publishers","userDisplayName","PARTICIPANT_JOINED","detachRemoteFeed","PARTICIPANT_LEFT","onLocalTrack","metadata","onRemoteTrack","channelLabel","DATA_CHANNEL_OPEN","DATA_CHANNEL_MESSAGE","eventType","CREATED","isStreamNoExistedBefore","REMOTE_STREAM","ENDED","trackToRemove","streamTrack","REMOTE_TRACKS_UPDATED","getPluginId","detachVideoConferencingPlugin","roomId","joinEvent","leaveEvent","listOnlineParticipants","listRequest","participants","toggleAudioMute","toggleRemoteAudioMute","audioTracks","isRemoteAudioMuted","toggleVideoMute","toggleRemoteVideoMute","videoTracks","isRemoteVideoMuted","sendKeyframeRequest","configureRequest","keyframe","getTracksFromStream","audioTrack","videoTrack","mediaParams","existedStream","createOfferParams","tracksFromStream","tracksFromParams","publish","getTracksMidsFromStream","getUserBitrate","resultCallback","getUserVolume","showBitrate","hideBitrate","ConferenceSession","onParticipantJoined","isExistingParticipant","createHandler","onParticipantJoinedListener","onParticipantLeft","onParticipantLeftListener","onErrorListener","onDataChannelOpen","onDataChannelOpenedListener","onDataChannelMessage","onDataChannelMessageListener","onLocalIceStateChanged","onSessionConnectionStateChangedListener","onRemoteIceStateChanged","onRemoteConnectionStateChangedListener","onRemoteStream","onRemoteStreamListener","onRemoteTracksUpdated","onRemoteTracksUpdatedListener","onSlowLink","onSlowLinkListener","client","currentPublisherPC","isResolved","currentUserDisplayName","joinInternal","joinAsListener","listOfOnlineParticipants","leaveGroup","elementId","upsertStream","shouldUpdateCurrentStream","detachMediaStream","attachMediaStream","localTrack","AUDIO","newTrack","every","switchMediaTracks","VIDEO","device","deviceId","getRemoteUserBitrate","getRemoteUserVolume","opt","mediaElement","getElementById","srcObject","style","transform","mirror","muted","onloadedmetadata","_event","play","pause","ConferenceClient","sessionsStore","createNewSession","getCurrentSessionToken","getMediaDevices","clearSession","currentSession","LEFT","SLOW_LINK","REMOTE_CONNECTION_STATE","DATA_CHANNEL_OPENED","SESSION_CONNECTION_STATE","DataService","className","isMany","multi","createRecord","readPermissions","permissions","isSearch","search_criteria","_id","isCriteria","isOne","MeetingsService","startTimestamp","ceil","endTimestamp","defaultParams","toLocaleString","year","month","day","hour","minute","attendees","getRecordings","ProxyService","sdkInstance","requestsNumber","abortControllersMap","requestMethod","responseType","getCurrentUserId","logRequest","requestId","logResponse","buildRequestAndURL","isGetOrHeadType","isPostOrPutType","isInternalRequest","isMultipartFormData","requestBody","requestURL","requestObject","buildRequestBody","useArrayQuery","dataObject","fileToCustomObject","serializeQueryParams","level","propName","propQueryName","isArrayVal","uriComponent","abortRequest","abortId","controllers","controller","abort","processSuccessfulOrFailedRequest","abort_id","doneRequestsCount","AbortController","signal","processAjaxResponse","processAjaxError","responseBody","errors","errorObject","isExpiredSessionError","handleExpiredSessionResponse","handleResponse","retryCallback","PushNotificationsService","SubscriptionsService","EventsService","StorageService","blob","createAndUpload","file","content_type","public","isPublic","createParams","blobObject","parseUri","blob_object_access","uploadParams","authority","path","queryKey","decodeURIComponent","upload","markUploaded","getFile","uid","getFileObject","privateUrl","fileUID","publicUrl","q","strict","loose","exec","$0","$1","$2","UsersService","getV2","signup","resetPassword","listOnline","getOnlineCount","count","filters","dateFields","numberFields","extensions","full_name","facebook_id","twitter_id","phone","tags","external","generateFilter","field","param","WebRTCHelpers","traceWarning","traceError","getVersionFirefox","ua","ffInfo","getVersionSafari","sVer","WebRTCPeerConnection","userID","remoteSDP","NEW","iceCandidates","remoteStream","onStatusClosedChecker","dialingTimer","statsReportTimer","waitingReconnectTimeoutCallback","released","onMediaTrackHandler","callType","getWrappedStats","onIceCandidateHandler","iceCandidate","signalingState","original","canTrickleIceCandidates","processIceCandidates","onSignalingStateHandler","onIceConnectionStateHandler","CHECKING","onSessionConnectionStateChanged","CONNECTING","CONNECTED","clearWaitingReconnectTimer","COMPLETED","FAILED","startWaitingReconnectTimer","CLOSED","setup","rtcConfiguration","startCallTime","release","closeSessionIfAllConnectionsClosed","clearStatsReportTimer","addCandidates","clearDialingTimer","getAndSetLocalSessionDescription","maxBandwidth","offerOptions","sessionDescription","setRTCRtpSenderMaxBandwidth","senders","encoding","startDialingTimer","withOnNotAnswerCallback","dialingCallback","skipIncrement","processOnNotAnswer","processCall","setRemoteSessionDescription","desc","lastResult","getStatsCustom","results","lastResults","onCallStatsReport","sdpRemote","ID","onSuccess","onFail","statistic","localVideoSettings","getSettings","frameHeight","frameWidth","getBitratePerSecond","packetsReceived","framerateMean","framesPerSecond","bytesSent","packetsSent","candidateType","mozLocalTransport","transport","ip","ipAddress","portNumber","getFramesPerSecond","isLocal","framesSent","framesReceived","selector","description","WebRTCSession","opponentsIDs","peerConnections","answerTimer","waitingOfferOrAnswerTimer","acceptCallTime","generateUUID","setMaxBandwidth","peers","peersKeys","connectionStateForUser","peerConnection","constrains","prepareExtension","ACTIVE","userInfo","callInternal","accept","clearAnswerTimer","acceptInternal","initiatorID","currentUserID","startWaitingOfferOrAnswerTimer","opponentID","sessionID","callerID","signalingProvider","ACCEPT","REJECTED","REJECT","STOPPED","STOP","canInitiateIceRestart","RESTART","processOnCall","rtcSdpType","startAnswerTimer","processOnAccept","processOnReject","clearWaitingOfferOrAnswerTimer","processOnStop","pcKeys","processOnIceCandidates","processOnIceRestart","RESTART_ACCEPT","processOnIceRestartAccept","CALL","sendCandidate","onUserNotAnswerListener","onCallStatsReportListener","connectionState","closeLocalMediaStream","onSessionCloseListener","isAllClosed","isClosed","muteStream","unmute","NONE","timeWait","timeDiff","min","max","WebRTCSignalingProcessor","delegate","getExtension","signalType","onCallHandler","onAcceptHandler","onRejectHandler","onStopHandler","CANDIDATE","onIceCandidatesHandler","onIceRestartHandler","onIceRestartAcceptHandler","childName","childText","WebRTCSignalingProvider","signalingConnection","signalingType","platform","opponentId","WebRTCClient","SessionConnectionState","onDevicesChangeListener","signalingProcessor","ondevicechange","userJID","bandwidth","createAndStoreSession","webRTCSession","callRejectRequest","onCallListener","onAcceptCallListener","onRejectCallListener","onInvalidEventsListener","onStopCallListener","INVALID","NOT_ANSWER","CONNECTION_STATE","CLOSE","STATS_REPORT","DEVICES","WhiteboardService","getURL","title","paramsOrId","chat_dialog_id","LinkPreviewService","linkPreview","getHostFromUrl","images","ConnectyCube","configMap","utils","storage","pushnotifications","ChatClient","meeting","videochatconference","connectycube"],"mappings":"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","x_google_ignoreList":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74]}