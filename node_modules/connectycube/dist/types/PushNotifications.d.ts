import ProxyService from './Proxy';
import { EmptyResponse, PushNotifications } from './types';
export default class PushNotificationsService {
    proxy: ProxyService;
    subscriptions: SubscriptionsService;
    events: EventsService;
    constructor(proxy: ProxyService);
    base64Encode: (str: string) => string;
}
declare class SubscriptionsService {
    proxy: ProxyService;
    readonly route: string;
    constructor(proxy: ProxyService);
    create(params: PushNotifications.SubscriptionsCreateParams): Promise<PushNotifications.Subscription>;
    list(): Promise<PushNotifications.Subscription[]>;
    delete(id: string | number): Promise<EmptyResponse>;
}
declare class EventsService {
    proxy: ProxyService;
    readonly route: string;
    constructor(proxy: ProxyService);
    create(event: PushNotifications.EventsCreateParams): Promise<PushNotifications.Event[]>;
}
export {};
//# sourceMappingURL=PushNotifications.d.ts.map