import { Media } from "connectycube/types";
import { ActiveMedia, CallsStoreMediaState } from "./useCallsStore";
export interface CallsMediaManager extends CallsStoreMediaState {
    isLocalAudioMuted: boolean;
    isLocalVideoMuted: boolean;
    muteAudio: () => void;
    muteVideo: () => void;
    unmuteAudio: () => void;
    unmuteVideo: () => void;
    getUserMedia: (params?: Media.UserParams) => Promise<MediaStream | void>;
    getDisplayMedia: (params?: Media.DisplayParams) => Promise<MediaStream | void>;
    getMediaDevices: (kind?: MediaDeviceKind) => Promise<MediaDeviceInfo[] | void>;
    switchMediaTracks: (options?: Media.TrackConstraintsOrDeviceIds) => Promise<MediaStream | void>;
    setUserMediaParams: (userParams?: Media.UserParams) => void;
    setDisplayMediaParams: (displayParams?: Media.DisplayParams) => void;
    setActiveMedia: (activeMedia?: ActiveMedia) => void;
}
declare const useCallsMediaManager: () => CallsMediaManager;
export default useCallsMediaManager;
//# sourceMappingURL=useCallsMediaManager.d.ts.map